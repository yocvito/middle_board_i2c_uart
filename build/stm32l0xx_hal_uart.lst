ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal_uart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.code	16
  19              		.thumb_func
  20              		.fpu softvfp
  22              	UART_EndTxTransfer:
  23              	.LFB77:
  24              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @file    stm32l0xx_hal_uart.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   [..]
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                 inside the transmit and receive processes.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 2


  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     ==================================
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 3


  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @attention
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 4


 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #include "stm32l0xx_hal.h"
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup STM32L0xx_HAL_Driver
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 5


 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** ===============================================================================
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in asynchronous mode.
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Baud Rate
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Word Length
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Stop Bit
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Hardware flow control
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Receiver/transmitter modes
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) Over Sampling Method
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) One-Bit Sampling Method
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) data logical level inversion
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX and TX pins swap
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) RX overrun detection disabling
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) DMA disabling on RX error
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) MSB first on communication line
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (++) auto Baud rate detection
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     are available in reference manual).
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 6


 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   following table.
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   Table 1. UART frame format.
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check the parameters */
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 7


 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART instance */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 8


 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 9


 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart             UART handle.
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the LIN UART instance */
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the Break detection length parameter */
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 10


 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart        UART handle.
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        This parameter can be one of the following values:
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 11


 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the wake up method parameter */
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware */
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspInitCallback(huart);
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the UART Communication parameters */
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the Peripheral */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 12


 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart == NULL)
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the Peripheral */
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DeInit the low level hardware */
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DeInit the low level hardware */
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlock */
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 13


 662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
 677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
 678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
 683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Register a User UART Callback
 692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart uart handle
 694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (pCallback == NULL)
 717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 14


 719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_ERROR;
 722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process locked */
 724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
 725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 15


 776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
 808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Return error status */
 811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     status =  HAL_ERROR;
 812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Release Lock */
 815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return status;
 818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart uart handle
 824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This parameter can be one of the following values:
 826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 16


 833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
 840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process locked */
 846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
 847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 17


 890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (CallbackID)
 908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default :
 918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Update the error code */
 919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Return error status */
 922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         status =  HAL_ERROR;
 923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
 927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Update the error code */
 929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Return error status */
 932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     status =  HAL_ERROR;
 933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Release Lock */
 936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return status;
 939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
 944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
 945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 18


 947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
 949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
 950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### IO operation functions #####
 952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
 953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     and Half duplex data transfers.
 955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) There are two mode of transfer:
 957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            after finishing transfer.
 960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The end of the data processing will be indicated through the
 963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            using DMA mode.
 965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Blocking mode API's are :
 970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive()
 972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort()
 994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 19


1004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         Errors are handled as follows :
1007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
1020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
1021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart   UART handle.
1030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *pdata16bits;
1039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
1040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
1047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 20


1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = NULL;
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = pData;
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = NULL;
1082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
1089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (pdata8bits == NULL)
1091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
1094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
1099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
1101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
1106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 21


1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart   UART handle.
1129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout Timeout duration.
1132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
1137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *pdata16bits;
1138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask;
1139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
1140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return  HAL_ERROR;
1147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tickstart = HAL_GetTick();
1168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
1171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 22


1175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = NULL;
1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata8bits  = pData;
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = NULL;
1186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* as long as data have to be received */
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
1194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (pdata8bits == NULL)
1196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
1199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
1204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount--;
1206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled using u16 pointer cast). Depending on compilation chain,
1227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 23


1232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be filled into TDR will be
1245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR       = NULL;
1261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 24


1289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled using u16 pointer cast). Depending on compilation cha
1294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data to be received from RDR will be
1312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled through a u16 cast. */
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR       = NULL;
1328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 25


1346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer containing data to be sent, should be aligned on a half wor
1366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as sent data will be handled by DMA from halfword frontier). Depending on compilation 
1367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy into TDR will be
1385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
1400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 26


1403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA error callback */
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA abort callback */
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Set error code to DMA */
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_ERROR;
1431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in the UART CR3 register */
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         the parity bit (MSB position).
1455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         address of user data buffer for storing data to be received, should be aligned on a hal
1457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (as received data will be handled by DMA from halfword frontier). Depending on compilat
1458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         use of specific alignment compilation directives or pragmas might be required to ensure
1459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 27


1460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_ERROR;
1472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
1475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        should be aligned on a u16 frontier, as data copy from RDR will be
1476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        handled by DMA from a u16 frontier. */
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((((uint32_t)pData) & 1) != 0)
1480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return  HAL_ERROR;
1482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Locked */
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_LOCK(huart);
1487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
1490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA error callback */
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the DMA abort callback */
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the DMA channel */
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Set error code to DMA */
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 28


1517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Restore huart->gState to ready */
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_ERROR;
1521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Process Unlocked */
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     in the UART CR3 register */
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_OK;
1537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
1539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return HAL_BUSY;
1541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 29


1574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
1589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
1617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
1619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 30


1631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 31


1688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 32


1745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Handle ErrorCode to No Error */
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 33


1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Tx transfer counter */
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
1815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
1857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Set error code to DMA */
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 34


1859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           return HAL_TIMEOUT;
1861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
1862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset Rx transfer counter */
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
1868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
1880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
1882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
1884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
1886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
1890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
1894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
1895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      before any call to DMA Abort functions */
1905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 35


1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        Otherwise, set it to NULL */
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
1929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0U;
1954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
1966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 36


1973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1U;
1974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
1976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
1977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 0U;
1978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
1979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
1980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
1981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (abortcplt == 1U)
1984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
1985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
1988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear ISR function pointers */
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR = NULL;
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
1992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset errorCode */
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
1999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Discard the received data */
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort complete callback */
2010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
2014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
2025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
2029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 37


2030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
2038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
2041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
2043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx != NULL)
2046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
2050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA TX */
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
2053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
2056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Tx transfer counter */
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount = 0U;
2062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear TxISR function pointers */
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR = NULL;
2065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
2068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
2076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Tx transfer counter */
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
2083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear TxISR function pointers */
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
2086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 38


2087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
2098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         This procedure performs following operations :
2109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - Set handle State to READY
2113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Abort DMA RX */
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 39


2144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Reset Rx transfer counter */
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxXferCount = 0U;
2147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Discard the received data */
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Reset Rx transfer counter */
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
2174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RxISR function pointer */
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 40


2201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t errorflags;
2209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t errorcode;
2210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If no error occurs */
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == 0U)
2214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (huart->RxISR != NULL)
2220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxISR(huart);
2222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
2224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* If some errors occur */
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((errorflags != 0U)
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 41


2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (huart->RxISR != NULL)
2274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->RxISR(huart);
2276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****          consider error as blocking */
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
2284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
2298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Abort DMA RX */
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
2305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
2308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
2309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           else
2310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
2311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /* Call user error callback */
2312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /*Call registered error callback*/
2314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             huart->ErrorCallback(huart);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 42


2315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             /*Call legacy weak error callback*/
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           }
2321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /* Call user error callback */
2325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /*Call registered error callback*/
2327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->ErrorCallback(huart);
2328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           /*Call legacy weak error callback*/
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            Error is notified to user through user error callback */
2338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /*Call registered error callback*/
2340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCallback(huart);
2341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /*Call legacy weak error callback*/
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   } /* End if some error occurs */
2351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->WakeupCallback(huart);
2363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
2364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 43


2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxISR != NULL)
2375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxISR(huart);
2377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
2386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 44


2429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART error callback.
2452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 45


2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UNUSED(huart);
2504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****    */
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  @brief   UART control functions
2516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *
2517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
2518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
2519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  ===============================================================================
2521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
2522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
2533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 46


2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 47


2600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status.
2618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear TE and RE bits */
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Transmit break characters.
2642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_LOCK(huart);
2652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Send break characters */
2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 48


2657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2667:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2668:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2670:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *  @brief   UART Peripheral State functions
2672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****  *
2673:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @verbatim
2674:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2675:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   ==============================================================================
2677:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     [..]
2678:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     This subsection provides functions allowing to :
2679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle state.
2680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (+) Return the UART handle error code
2681:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2682:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** @endverbatim
2683:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2684:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2685:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2686:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Return the UART handle state.
2688:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2689:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2690:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL state
2691:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2692:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2694:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1, temp2;
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp1 = huart->gState;
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
2697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2700:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2702:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2704:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *               the configuration information for the specified UART.
2705:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval UART Error Code
2706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** */
2707:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2711:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2713:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 49


2714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2715:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2716:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @}
2717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2718:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2720:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @{
2721:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2722:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2723:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2724:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2725:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
2726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval none
2727:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2729:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2730:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Init the UART Callback settings */
2732:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2733:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2734:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2736:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2738:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2740:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2741:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2743:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2745:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2746:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2747:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2748:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
2749:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2750:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg;
2753:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t brrtemp;
2754:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2757:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
2758:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
2760:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2761:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2764:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2765:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2767:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2770:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 50


2771:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2772:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2773:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2774:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2775:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2776:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2777:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2778:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2779:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2780:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2781:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2782:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2783:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2787:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2788:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * to huart->Init.StopBits value */
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2792:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2793:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Configure
2794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2795:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2796:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2797:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2799:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
2801:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
2803:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2806:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2809:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2810:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check LPUART instance */
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
2812:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2813:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Retrieve frequency clock */
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2815:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2816:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
2818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2819:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           lpuart_ker_ck_pres = (uint32_t)(HSI_VALUE >> 2U);
2823:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2824:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2825:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
2827:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 51


2828:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2829:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2832:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
2834:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2835:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2840:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2841:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* if proper clock source reported */
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
2843:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
2847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2849:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
2850:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       else
2851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint32_t)(UART_DIV_LPUART(lpuart_ker_ck_pres, huart->Init.BaudRate));
2853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2854:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
2856:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
2858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2859:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ret = HAL_ERROR;
2862:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2863:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
2864:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
2865:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2866:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2868:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2871:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2874:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2877:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
2881:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2882:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2883:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 52


2885:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2886:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2887:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2890:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2893:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2894:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2898:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2899:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2905:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2907:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       ret = HAL_ERROR;
2909:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2911:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
2912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     switch (clocksource)
2914:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2915:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
2917:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2918:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2921:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
2923:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRate));
2925:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         else
2927:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2929:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
2930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2931:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2934:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2937:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       default:
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         ret = HAL_ERROR;
2940:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
2941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 53


2942:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2943:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2945:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2948:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
2949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       ret = HAL_ERROR;
2951:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
2952:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2954:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2955:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear ISR function pointers */
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxISR = NULL;
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
2958:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return ret;
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
2961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2962:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
2963:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
2965:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
2966:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
2967:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
2969:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2971:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2974:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2975:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2977:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2978:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2979:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2981:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2982:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2984:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2985:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure data inversion */
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2988:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2989:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
2992:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
2993:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2995:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
2996:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2998:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 54


2999:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3000:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
3002:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3003:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
3005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3006:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3007:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
3009:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3010:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
3012:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3014:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
3016:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3017:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
3020:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
3022:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3023:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
3025:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3026:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3027:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3028:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
3030:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3031:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
3033:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief Check the UART Idle State.
3038:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3039:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
3040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3041:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3043:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
3044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3047:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3048:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   tickstart = HAL_GetTick();
3050:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3051:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
3053:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 55


3056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3057:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
3059:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3060:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3062:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
3064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3065:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Wait until REACK flag is set */
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
3067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3068:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Timeout occurred */
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return HAL_TIMEOUT;
3070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3071:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3072:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Initialize the UART State */
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3077:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Unlocked */
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UNLOCK(huart);
3079:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3083:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart     UART handle.
3086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3087:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Tickstart Tick start value
3089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param Timeout   Timeout duration
3090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval HAL status
3091:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3094:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
3096:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Check for the Timeout */
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
3099:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
3101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
3102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
3108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         /* Process Unlocked */
3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         __HAL_UNLOCK(huart);
3111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 56


3113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
3114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return HAL_OK;
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
3123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  25              		.loc 1 3126 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
3127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  31              		.loc 1 3128 0
  32 0000 0268     		ldr	r2, [r0]
  33 0002 1368     		ldr	r3, [r2]
  34 0004 C021     		movs	r1, #192
  35 0006 8B43     		bics	r3, r1
  36 0008 1360     		str	r3, [r2]
3129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  37              		.loc 1 3131 0
  38 000a 2023     		movs	r3, #32
  39 000c 4367     		str	r3, [r0, #116]
3132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  40              		.loc 1 3132 0
  41              		@ sp needed
  42 000e 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE77:
  46              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.code	16
  50              		.thumb_func
  51              		.fpu softvfp
  53              	UART_EndRxTransfer:
  54              	.LFB78:
3133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart UART handle.
3138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 57


  55              		.loc 1 3141 0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
  60              	.LVL1:
3142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  61              		.loc 1 3143 0
  62 0000 0268     		ldr	r2, [r0]
  63 0002 1368     		ldr	r3, [r2]
  64 0004 0649     		ldr	r1, .L3
  65 0006 0B40     		ands	r3, r1
  66 0008 1360     		str	r3, [r2]
3144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  67              		.loc 1 3144 0
  68 000a 0268     		ldr	r2, [r0]
  69 000c 9368     		ldr	r3, [r2, #8]
  70 000e 2331     		adds	r1, r1, #35
  71 0010 FF31     		adds	r1, r1, #255
  72 0012 8B43     		bics	r3, r1
  73 0014 9360     		str	r3, [r2, #8]
3145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  74              		.loc 1 3147 0
  75 0016 2023     		movs	r3, #32
  76 0018 8367     		str	r3, [r0, #120]
3148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxISR = NULL;
  77              		.loc 1 3150 0
  78 001a 0023     		movs	r3, #0
  79 001c 0366     		str	r3, [r0, #96]
3151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
  80              		.loc 1 3151 0
  81              		@ sp needed
  82 001e 7047     		bx	lr
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 0020 DFFEFFFF 		.word	-289
  87              		.cfi_endproc
  88              	.LFE78:
  90              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  91              		.align	1
  92              		.syntax unified
  93              		.code	16
  94              		.thumb_func
  95              		.fpu softvfp
  97              	UART_TxISR_8BIT:
  98              	.LFB89:
3152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 58


3157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Circular mode */
3176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 59


3214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* DMA Normal mode */
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
3217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****        in the UART CR3 register */
3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param hdma DMA handle.
3262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 60


3271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = 0U;
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered error callback*/
3291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered error callback*/
3312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCallback(huart);
3313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak error callback*/
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 61


3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
3339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 62


3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       return;
3388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Reset errorCode */
3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort complete callback */
3411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
3432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 63


3442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  hdma DMA handle.
3453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
3460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Discard the received data */
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call user Abort complete callback */
3471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
3479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
  99              		.loc 1 3488 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.LVL2:
3489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 105              		.loc 1 3490 0
 106 0000 436F     		ldr	r3, [r0, #116]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 64


 107 0002 212B     		cmp	r3, #33
 108 0004 00D0     		beq	.L8
 109              	.L5:
3491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
3501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr++;
3504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
3505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 110              		.loc 1 3507 0
 111              		@ sp needed
 112 0006 7047     		bx	lr
 113              	.L8:
3492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 114              		.loc 1 3492 0
 115 0008 3133     		adds	r3, r3, #49
 116 000a C35A     		ldrh	r3, [r0, r3]
 117 000c 9BB2     		uxth	r3, r3
 118 000e 002B     		cmp	r3, #0
 119 0010 0CD0     		beq	.L9
3502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr++;
 120              		.loc 1 3502 0
 121 0012 C36C     		ldr	r3, [r0, #76]
 122 0014 1A78     		ldrb	r2, [r3]
 123 0016 0368     		ldr	r3, [r0]
 124 0018 9A62     		str	r2, [r3, #40]
3503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 125              		.loc 1 3503 0
 126 001a C36C     		ldr	r3, [r0, #76]
 127 001c 0133     		adds	r3, r3, #1
 128 001e C364     		str	r3, [r0, #76]
3504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 129              		.loc 1 3504 0
 130 0020 5222     		movs	r2, #82
 131 0022 835A     		ldrh	r3, [r0, r2]
 132 0024 013B     		subs	r3, r3, #1
 133 0026 9BB2     		uxth	r3, r3
 134 0028 8352     		strh	r3, [r0, r2]
 135              		.loc 1 3507 0
 136 002a ECE7     		b	.L5
 137              	.L9:
3495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 138              		.loc 1 3495 0
 139 002c 0268     		ldr	r2, [r0]
 140 002e 1368     		ldr	r3, [r2]
 141 0030 8021     		movs	r1, #128
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 65


 142 0032 8B43     		bics	r3, r1
 143 0034 1360     		str	r3, [r2]
3498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 144              		.loc 1 3498 0
 145 0036 0268     		ldr	r2, [r0]
 146 0038 1368     		ldr	r3, [r2]
 147 003a 4039     		subs	r1, r1, #64
 148 003c 0B43     		orrs	r3, r1
 149 003e 1360     		str	r3, [r2]
 150 0040 E1E7     		b	.L5
 151              		.cfi_endproc
 152              	.LFE89:
 154              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.code	16
 158              		.thumb_func
 159              		.fpu softvfp
 161              	UART_TxISR_16BIT:
 162              	.LFB90:
3508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 163              		.loc 1 3517 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168              	.LVL3:
3518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *tmp;
3519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 169              		.loc 1 3521 0
 170 0000 436F     		ldr	r3, [r0, #116]
 171 0002 212B     		cmp	r3, #33
 172 0004 00D0     		beq	.L13
 173              	.L10:
3522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
3524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     else
3532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 66


3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->TDR = (*tmp & (uint16_t)0x01FF);
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
3537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 174              		.loc 1 3539 0
 175              		@ sp needed
 176 0006 7047     		bx	lr
 177              	.L13:
3523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 178              		.loc 1 3523 0
 179 0008 3133     		adds	r3, r3, #49
 180 000a C35A     		ldrh	r3, [r0, r3]
 181 000c 9BB2     		uxth	r3, r3
 182 000e 002B     		cmp	r3, #0
 183 0010 0ED0     		beq	.L14
 184              	.LVL4:
3534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 185              		.loc 1 3534 0
 186 0012 C36C     		ldr	r3, [r0, #76]
 187 0014 1B88     		ldrh	r3, [r3]
 188 0016 0268     		ldr	r2, [r0]
 189 0018 DB05     		lsls	r3, r3, #23
 190 001a DB0D     		lsrs	r3, r3, #23
 191 001c 9362     		str	r3, [r2, #40]
 192              	.LVL5:
3535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->TxXferCount--;
 193              		.loc 1 3535 0
 194 001e C36C     		ldr	r3, [r0, #76]
 195 0020 0233     		adds	r3, r3, #2
 196 0022 C364     		str	r3, [r0, #76]
3536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 197              		.loc 1 3536 0
 198 0024 5222     		movs	r2, #82
 199 0026 835A     		ldrh	r3, [r0, r2]
 200 0028 013B     		subs	r3, r3, #1
 201 002a 9BB2     		uxth	r3, r3
 202 002c 8352     		strh	r3, [r0, r2]
 203              		.loc 1 3539 0
 204 002e EAE7     		b	.L10
 205              	.L14:
3526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 206              		.loc 1 3526 0
 207 0030 0268     		ldr	r2, [r0]
 208 0032 1368     		ldr	r3, [r2]
 209 0034 8021     		movs	r1, #128
 210 0036 8B43     		bics	r3, r1
 211 0038 1360     		str	r3, [r2]
3529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 212              		.loc 1 3529 0
 213 003a 0268     		ldr	r2, [r0]
 214 003c 1368     		ldr	r3, [r2]
 215 003e 4039     		subs	r1, r1, #64
 216 0040 0B43     		orrs	r3, r1
 217 0042 1360     		str	r3, [r2]
 218 0044 DFE7     		b	.L10
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 67


 219              		.cfi_endproc
 220              	.LFE90:
 222              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 223              		.align	1
 224              		.weak	HAL_UART_MspInit
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	HAL_UART_MspInit:
 231              	.LFB39:
 665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 232              		.loc 1 665 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL6:
 672:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 238              		.loc 1 672 0
 239              		@ sp needed
 240 0000 7047     		bx	lr
 241              		.cfi_endproc
 242              	.LFE39:
 244              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 245              		.align	1
 246              		.weak	HAL_UART_MspDeInit
 247              		.syntax unified
 248              		.code	16
 249              		.thumb_func
 250              		.fpu softvfp
 252              	HAL_UART_MspDeInit:
 253              	.LFB40:
 680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 254              		.loc 1 680 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 259              	.LVL7:
 687:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 260              		.loc 1 687 0
 261              		@ sp needed
 262 0000 7047     		bx	lr
 263              		.cfi_endproc
 264              	.LFE40:
 266              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 267              		.align	1
 268              		.global	HAL_UART_DeInit
 269              		.syntax unified
 270              		.code	16
 271              		.thumb_func
 272              		.fpu softvfp
 274              	HAL_UART_DeInit:
 275              	.LFB38:
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 276              		.loc 1 618 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 68


 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              	.LVL8:
 281 0000 70B5     		push	{r4, r5, r6, lr}
 282              	.LCFI0:
 283              		.cfi_def_cfa_offset 16
 284              		.cfi_offset 4, -16
 285              		.cfi_offset 5, -12
 286              		.cfi_offset 6, -8
 287              		.cfi_offset 14, -4
 288 0002 041E     		subs	r4, r0, #0
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 289              		.loc 1 620 0
 290 0004 16D0     		beq	.L19
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 291              		.loc 1 628 0
 292 0006 2423     		movs	r3, #36
 293 0008 4367     		str	r3, [r0, #116]
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 294              		.loc 1 631 0
 295 000a 0268     		ldr	r2, [r0]
 296 000c 1368     		ldr	r3, [r2]
 297 000e 0121     		movs	r1, #1
 298 0010 8B43     		bics	r3, r1
 299 0012 1360     		str	r3, [r2]
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 300              		.loc 1 633 0
 301 0014 0368     		ldr	r3, [r0]
 302 0016 0025     		movs	r5, #0
 303 0018 1D60     		str	r5, [r3]
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 304              		.loc 1 634 0
 305 001a 0368     		ldr	r3, [r0]
 306 001c 5D60     		str	r5, [r3, #4]
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 307              		.loc 1 635 0
 308 001e 0368     		ldr	r3, [r0]
 309 0020 9D60     		str	r5, [r3, #8]
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 310              		.loc 1 646 0
 311 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 312              	.LVL9:
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 313              		.loc 1 649 0
 314 0026 E567     		str	r5, [r4, #124]
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 315              		.loc 1 650 0
 316 0028 6567     		str	r5, [r4, #116]
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 317              		.loc 1 651 0
 318 002a A567     		str	r5, [r4, #120]
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 319              		.loc 1 654 0
 320 002c 7023     		movs	r3, #112
 321 002e E554     		strb	r5, [r4, r3]
 656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 69


 322              		.loc 1 656 0
 323 0030 0020     		movs	r0, #0
 324              	.L18:
 657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 325              		.loc 1 657 0
 326              		@ sp needed
 327              	.LVL10:
 328 0032 70BD     		pop	{r4, r5, r6, pc}
 329              	.LVL11:
 330              	.L19:
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 331              		.loc 1 622 0
 332 0034 0120     		movs	r0, #1
 333              	.LVL12:
 334 0036 FCE7     		b	.L18
 335              		.cfi_endproc
 336              	.LFE38:
 338              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_UART_Transmit_IT
 341              		.syntax unified
 342              		.code	16
 343              		.thumb_func
 344              		.fpu softvfp
 346              	HAL_UART_Transmit_IT:
 347              	.LFB43:
1234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 348              		.loc 1 1234 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              	.LVL13:
 353 0000 30B5     		push	{r4, r5, lr}
 354              	.LCFI1:
 355              		.cfi_def_cfa_offset 12
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
1236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 359              		.loc 1 1236 0
 360 0002 436F     		ldr	r3, [r0, #116]
 361 0004 202B     		cmp	r3, #32
 362 0006 36D1     		bne	.L25
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 363              		.loc 1 1238 0
 364 0008 0029     		cmp	r1, #0
 365 000a 36D0     		beq	.L26
1238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 366              		.loc 1 1238 0 is_stmt 0 discriminator 1
 367 000c 002A     		cmp	r2, #0
 368 000e 36D0     		beq	.L27
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 369              		.loc 1 1246 0 is_stmt 1
 370 0010 8368     		ldr	r3, [r0, #8]
 371 0012 8024     		movs	r4, #128
 372 0014 6401     		lsls	r4, r4, #5
 373 0016 A342     		cmp	r3, r4
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 70


 374 0018 20D0     		beq	.L30
 375              	.L22:
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 376              		.loc 1 1255 0
 377 001a 7024     		movs	r4, #112
 378 001c 045D     		ldrb	r4, [r0, r4]
 379 001e 012C     		cmp	r4, #1
 380 0020 2FD0     		beq	.L29
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 381              		.loc 1 1255 0 is_stmt 0 discriminator 2
 382 0022 7024     		movs	r4, #112
 383 0024 0125     		movs	r5, #1
 384 0026 0555     		strb	r5, [r0, r4]
1257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 385              		.loc 1 1257 0 is_stmt 1 discriminator 2
 386 0028 C164     		str	r1, [r0, #76]
1258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 387              		.loc 1 1258 0 discriminator 2
 388 002a 5021     		movs	r1, #80
 389              	.LVL14:
 390 002c 4252     		strh	r2, [r0, r1]
 391              	.LVL15:
1259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR       = NULL;
 392              		.loc 1 1259 0 discriminator 2
 393 002e 0231     		adds	r1, r1, #2
 394 0030 4252     		strh	r2, [r0, r1]
1260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 395              		.loc 1 1260 0 discriminator 2
 396 0032 0022     		movs	r2, #0
 397              	.LVL16:
 398 0034 4266     		str	r2, [r0, #100]
 399              	.LVL17:
1262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 400              		.loc 1 1262 0 discriminator 2
 401 0036 C267     		str	r2, [r0, #124]
1263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 402              		.loc 1 1263 0 discriminator 2
 403 0038 2132     		adds	r2, r2, #33
 404 003a 4267     		str	r2, [r0, #116]
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 405              		.loc 1 1266 0 discriminator 2
 406 003c 8022     		movs	r2, #128
 407 003e 5201     		lsls	r2, r2, #5
 408 0040 9342     		cmp	r3, r2
 409 0042 12D0     		beq	.L31
 410              	.L23:
1272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 411              		.loc 1 1272 0
 412 0044 104B     		ldr	r3, .L32
 413 0046 4366     		str	r3, [r0, #100]
 414              	.L24:
1276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 415              		.loc 1 1276 0
 416 0048 7023     		movs	r3, #112
 417 004a 0022     		movs	r2, #0
 418 004c C254     		strb	r2, [r0, r3]
1279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 71


 419              		.loc 1 1279 0
 420 004e 0268     		ldr	r2, [r0]
 421 0050 1368     		ldr	r3, [r2]
 422 0052 8021     		movs	r1, #128
 423 0054 0B43     		orrs	r3, r1
 424 0056 1360     		str	r3, [r2]
1281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 425              		.loc 1 1281 0
 426 0058 0020     		movs	r0, #0
 427              	.LVL18:
 428 005a 0DE0     		b	.L21
 429              	.LVL19:
 430              	.L30:
1246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 431              		.loc 1 1246 0 discriminator 1
 432 005c 0469     		ldr	r4, [r0, #16]
 433 005e 002C     		cmp	r4, #0
 434 0060 DBD1     		bne	.L22
1248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 435              		.loc 1 1248 0
 436 0062 CC07     		lsls	r4, r1, #31
 437 0064 D9D5     		bpl	.L22
1250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 438              		.loc 1 1250 0
 439 0066 0120     		movs	r0, #1
 440              	.LVL20:
 441 0068 06E0     		b	.L21
 442              	.LVL21:
 443              	.L31:
1266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 444              		.loc 1 1266 0 discriminator 1
 445 006a 0369     		ldr	r3, [r0, #16]
 446 006c 002B     		cmp	r3, #0
 447 006e E9D1     		bne	.L23
1268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 448              		.loc 1 1268 0
 449 0070 064B     		ldr	r3, .L32+4
 450 0072 4366     		str	r3, [r0, #100]
 451 0074 E8E7     		b	.L24
 452              	.LVL22:
 453              	.L25:
1285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 454              		.loc 1 1285 0
 455 0076 0220     		movs	r0, #2
 456              	.LVL23:
 457              	.L21:
1287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 458              		.loc 1 1287 0
 459              		@ sp needed
 460 0078 30BD     		pop	{r4, r5, pc}
 461              	.LVL24:
 462              	.L26:
1240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 463              		.loc 1 1240 0
 464 007a 0120     		movs	r0, #1
 465              	.LVL25:
 466 007c FCE7     		b	.L21
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 72


 467              	.LVL26:
 468              	.L27:
 469 007e 0120     		movs	r0, #1
 470              	.LVL27:
 471 0080 FAE7     		b	.L21
 472              	.LVL28:
 473              	.L29:
1255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 474              		.loc 1 1255 0
 475 0082 0220     		movs	r0, #2
 476              	.LVL29:
 477 0084 F8E7     		b	.L21
 478              	.L33:
 479 0086 C046     		.align	2
 480              	.L32:
 481 0088 00000000 		.word	UART_TxISR_8BIT
 482 008c 00000000 		.word	UART_TxISR_16BIT
 483              		.cfi_endproc
 484              	.LFE43:
 486              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_UART_Receive_IT
 489              		.syntax unified
 490              		.code	16
 491              		.thumb_func
 492              		.fpu softvfp
 494              	HAL_UART_Receive_IT:
 495              	.LFB44:
1301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 496              		.loc 1 1301 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              	.LVL30:
 501 0000 30B5     		push	{r4, r5, lr}
 502              	.LCFI2:
 503              		.cfi_def_cfa_offset 12
 504              		.cfi_offset 4, -12
 505              		.cfi_offset 5, -8
 506              		.cfi_offset 14, -4
1303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 507              		.loc 1 1303 0
 508 0002 836F     		ldr	r3, [r0, #120]
 509 0004 202B     		cmp	r3, #32
 510 0006 6DD1     		bne	.L46
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 511              		.loc 1 1305 0
 512 0008 0029     		cmp	r1, #0
 513 000a 00D1     		bne	.LCB408
 514 000c 6CE0     		b	.L47	@long jump
 515              	.LCB408:
1305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 516              		.loc 1 1305 0 is_stmt 0 discriminator 1
 517 000e 002A     		cmp	r2, #0
 518 0010 00D1     		bne	.LCB410
 519 0012 6BE0     		b	.L48	@long jump
 520              	.LCB410:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 73


1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 521              		.loc 1 1313 0 is_stmt 1
 522 0014 8368     		ldr	r3, [r0, #8]
 523 0016 8024     		movs	r4, #128
 524 0018 6401     		lsls	r4, r4, #5
 525 001a A342     		cmp	r3, r4
 526 001c 1AD0     		beq	.L51
 527              	.L36:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 528              		.loc 1 1322 0
 529 001e 7024     		movs	r4, #112
 530 0020 045D     		ldrb	r4, [r0, r4]
 531 0022 012C     		cmp	r4, #1
 532 0024 64D0     		beq	.L50
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 533              		.loc 1 1322 0 is_stmt 0 discriminator 2
 534 0026 7024     		movs	r4, #112
 535 0028 0125     		movs	r5, #1
 536 002a 0555     		strb	r5, [r0, r4]
1324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize  = Size;
 537              		.loc 1 1324 0 is_stmt 1 discriminator 2
 538 002c 4165     		str	r1, [r0, #84]
1325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 539              		.loc 1 1325 0 discriminator 2
 540 002e 5821     		movs	r1, #88
 541              	.LVL31:
 542 0030 4252     		strh	r2, [r0, r1]
 543              	.LVL32:
1326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxISR       = NULL;
 544              		.loc 1 1326 0 discriminator 2
 545 0032 0231     		adds	r1, r1, #2
 546 0034 4252     		strh	r2, [r0, r1]
1327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 547              		.loc 1 1327 0 discriminator 2
 548 0036 0022     		movs	r2, #0
 549              	.LVL33:
 550 0038 0266     		str	r2, [r0, #96]
 551              	.LVL34:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 552              		.loc 1 1330 0 discriminator 2
 553 003a 8022     		movs	r2, #128
 554 003c 5201     		lsls	r2, r2, #5
 555 003e 9342     		cmp	r3, r2
 556 0040 0FD0     		beq	.L52
 557 0042 002B     		cmp	r3, #0
 558 0044 1CD1     		bne	.L40
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 559              		.loc 1 1330 0 is_stmt 0 discriminator 5
 560 0046 0369     		ldr	r3, [r0, #16]
 561 0048 002B     		cmp	r3, #0
 562 004a 15D1     		bne	.L41
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 563              		.loc 1 1330 0 discriminator 7
 564 004c 5C33     		adds	r3, r3, #92
 565 004e FF22     		movs	r2, #255
 566 0050 C252     		strh	r2, [r0, r3]
 567 0052 1CE0     		b	.L39
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 74


 568              	.LVL35:
 569              	.L51:
1313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 570              		.loc 1 1313 0 is_stmt 1 discriminator 1
 571 0054 0469     		ldr	r4, [r0, #16]
 572 0056 002C     		cmp	r4, #0
 573 0058 E1D1     		bne	.L36
1315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 574              		.loc 1 1315 0
 575 005a CC07     		lsls	r4, r1, #31
 576 005c DFD5     		bpl	.L36
1317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 577              		.loc 1 1317 0
 578 005e 0120     		movs	r0, #1
 579              	.LVL36:
 580 0060 41E0     		b	.L35
 581              	.LVL37:
 582              	.L52:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 583              		.loc 1 1330 0 discriminator 1
 584 0062 0369     		ldr	r3, [r0, #16]
 585 0064 002B     		cmp	r3, #0
 586 0066 03D1     		bne	.L38
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 587              		.loc 1 1330 0 is_stmt 0 discriminator 3
 588 0068 5C33     		adds	r3, r3, #92
 589 006a 224A     		ldr	r2, .L55
 590 006c C252     		strh	r2, [r0, r3]
 591 006e 0EE0     		b	.L39
 592              	.L38:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 593              		.loc 1 1330 0 discriminator 4
 594 0070 5C23     		movs	r3, #92
 595 0072 FF22     		movs	r2, #255
 596 0074 C252     		strh	r2, [r0, r3]
 597 0076 0AE0     		b	.L39
 598              	.L41:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 599              		.loc 1 1330 0 discriminator 8
 600 0078 5C23     		movs	r3, #92
 601 007a 7F22     		movs	r2, #127
 602 007c C252     		strh	r2, [r0, r3]
 603 007e 06E0     		b	.L39
 604              	.L40:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 605              		.loc 1 1330 0 discriminator 6
 606 0080 8022     		movs	r2, #128
 607 0082 5205     		lsls	r2, r2, #21
 608 0084 9342     		cmp	r3, r2
 609 0086 1CD0     		beq	.L53
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 610              		.loc 1 1330 0 discriminator 10
 611 0088 5C23     		movs	r3, #92
 612 008a 0022     		movs	r2, #0
 613 008c C252     		strh	r2, [r0, r3]
 614              	.L39:
1332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 75


 615              		.loc 1 1332 0 is_stmt 1
 616 008e 0023     		movs	r3, #0
 617 0090 C367     		str	r3, [r0, #124]
1333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 618              		.loc 1 1333 0
 619 0092 2233     		adds	r3, r3, #34
 620 0094 8367     		str	r3, [r0, #120]
1336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 621              		.loc 1 1336 0
 622 0096 0268     		ldr	r2, [r0]
 623 0098 9368     		ldr	r3, [r2, #8]
 624 009a 0121     		movs	r1, #1
 625 009c 0B43     		orrs	r3, r1
 626 009e 9360     		str	r3, [r2, #8]
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 627              		.loc 1 1339 0
 628 00a0 8023     		movs	r3, #128
 629 00a2 5B01     		lsls	r3, r3, #5
 630 00a4 8268     		ldr	r2, [r0, #8]
 631 00a6 9A42     		cmp	r2, r3
 632 00a8 16D0     		beq	.L54
 633              	.L44:
1345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 634              		.loc 1 1345 0
 635 00aa 134B     		ldr	r3, .L55+4
 636 00ac 0366     		str	r3, [r0, #96]
 637              	.L45:
1349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 638              		.loc 1 1349 0
 639 00ae 7023     		movs	r3, #112
 640 00b0 0022     		movs	r2, #0
 641 00b2 C254     		strb	r2, [r0, r3]
1352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 642              		.loc 1 1352 0
 643 00b4 0268     		ldr	r2, [r0]
 644 00b6 1168     		ldr	r1, [r2]
 645 00b8 B033     		adds	r3, r3, #176
 646 00ba 0B43     		orrs	r3, r1
 647 00bc 1360     		str	r3, [r2]
1354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 648              		.loc 1 1354 0
 649 00be 0020     		movs	r0, #0
 650              	.LVL38:
 651 00c0 11E0     		b	.L35
 652              	.LVL39:
 653              	.L53:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 654              		.loc 1 1330 0 discriminator 9
 655 00c2 0369     		ldr	r3, [r0, #16]
 656 00c4 002B     		cmp	r3, #0
 657 00c6 03D1     		bne	.L43
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 658              		.loc 1 1330 0 is_stmt 0 discriminator 11
 659 00c8 5C33     		adds	r3, r3, #92
 660 00ca 7F22     		movs	r2, #127
 661 00cc C252     		strh	r2, [r0, r3]
 662 00ce DEE7     		b	.L39
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 76


 663              	.L43:
1330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 664              		.loc 1 1330 0 discriminator 12
 665 00d0 5C23     		movs	r3, #92
 666 00d2 3F22     		movs	r2, #63
 667 00d4 C252     		strh	r2, [r0, r3]
 668 00d6 DAE7     		b	.L39
 669              	.L54:
1339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 670              		.loc 1 1339 0 is_stmt 1 discriminator 1
 671 00d8 0369     		ldr	r3, [r0, #16]
 672 00da 002B     		cmp	r3, #0
 673 00dc E5D1     		bne	.L44
1341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 674              		.loc 1 1341 0
 675 00de 074B     		ldr	r3, .L55+8
 676 00e0 0366     		str	r3, [r0, #96]
 677 00e2 E4E7     		b	.L45
 678              	.LVL40:
 679              	.L46:
1358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 680              		.loc 1 1358 0
 681 00e4 0220     		movs	r0, #2
 682              	.LVL41:
 683              	.L35:
1360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 684              		.loc 1 1360 0
 685              		@ sp needed
 686 00e6 30BD     		pop	{r4, r5, pc}
 687              	.LVL42:
 688              	.L47:
1307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 689              		.loc 1 1307 0
 690 00e8 0120     		movs	r0, #1
 691              	.LVL43:
 692 00ea FCE7     		b	.L35
 693              	.LVL44:
 694              	.L48:
 695 00ec 0120     		movs	r0, #1
 696              	.LVL45:
 697 00ee FAE7     		b	.L35
 698              	.LVL46:
 699              	.L50:
1322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 700              		.loc 1 1322 0
 701 00f0 0220     		movs	r0, #2
 702              	.LVL47:
 703 00f2 F8E7     		b	.L35
 704              	.L56:
 705              		.align	2
 706              	.L55:
 707 00f4 FF010000 		.word	511
 708 00f8 00000000 		.word	UART_RxISR_8BIT
 709 00fc 00000000 		.word	UART_RxISR_16BIT
 710              		.cfi_endproc
 711              	.LFE44:
 713              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 77


 714              		.align	1
 715              		.global	HAL_UART_Transmit_DMA
 716              		.syntax unified
 717              		.code	16
 718              		.thumb_func
 719              		.fpu softvfp
 721              	HAL_UART_Transmit_DMA:
 722              	.LFB45:
1374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 723              		.loc 1 1374 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL48:
 728 0000 10B5     		push	{r4, lr}
 729              	.LCFI3:
 730              		.cfi_def_cfa_offset 8
 731              		.cfi_offset 4, -8
 732              		.cfi_offset 14, -4
 733 0002 0400     		movs	r4, r0
1376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 734              		.loc 1 1376 0
 735 0004 406F     		ldr	r0, [r0, #116]
 736              	.LVL49:
 737 0006 2028     		cmp	r0, #32
 738 0008 4DD1     		bne	.L61
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 739              		.loc 1 1378 0
 740 000a 0029     		cmp	r1, #0
 741 000c 4DD0     		beq	.L62
1378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 742              		.loc 1 1378 0 is_stmt 0 discriminator 1
 743 000e 002A     		cmp	r2, #0
 744 0010 4DD0     		beq	.L63
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 745              		.loc 1 1386 0 is_stmt 1
 746 0012 8023     		movs	r3, #128
 747 0014 5B01     		lsls	r3, r3, #5
 748 0016 A068     		ldr	r0, [r4, #8]
 749 0018 9842     		cmp	r0, r3
 750 001a 34D0     		beq	.L66
 751              	.L59:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 752              		.loc 1 1395 0
 753 001c 7023     		movs	r3, #112
 754 001e E35C     		ldrb	r3, [r4, r3]
 755 0020 012B     		cmp	r3, #1
 756 0022 46D0     		beq	.L65
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 757              		.loc 1 1395 0 is_stmt 0 discriminator 2
 758 0024 7023     		movs	r3, #112
 759 0026 0120     		movs	r0, #1
 760 0028 E054     		strb	r0, [r4, r3]
1397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferSize  = Size;
 761              		.loc 1 1397 0 is_stmt 1 discriminator 2
 762 002a E164     		str	r1, [r4, #76]
1398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 78


 763              		.loc 1 1398 0 discriminator 2
 764 002c 203B     		subs	r3, r3, #32
 765 002e E252     		strh	r2, [r4, r3]
1399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 766              		.loc 1 1399 0 discriminator 2
 767 0030 0233     		adds	r3, r3, #2
 768 0032 E252     		strh	r2, [r4, r3]
1401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 769              		.loc 1 1401 0 discriminator 2
 770 0034 0023     		movs	r3, #0
 771 0036 E367     		str	r3, [r4, #124]
1402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 772              		.loc 1 1402 0 discriminator 2
 773 0038 2133     		adds	r3, r3, #33
 774 003a 6367     		str	r3, [r4, #116]
1404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 775              		.loc 1 1404 0 discriminator 2
 776 003c A36E     		ldr	r3, [r4, #104]
 777 003e 002B     		cmp	r3, #0
 778 0040 14D0     		beq	.L60
1407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 779              		.loc 1 1407 0
 780 0042 1D49     		ldr	r1, .L68
 781              	.LVL50:
 782 0044 D962     		str	r1, [r3, #44]
1410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 783              		.loc 1 1410 0
 784 0046 A36E     		ldr	r3, [r4, #104]
 785 0048 1C49     		ldr	r1, .L68+4
 786 004a 1963     		str	r1, [r3, #48]
1413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 787              		.loc 1 1413 0
 788 004c A36E     		ldr	r3, [r4, #104]
 789 004e 1C49     		ldr	r1, .L68+8
 790 0050 5963     		str	r1, [r3, #52]
1416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 791              		.loc 1 1416 0
 792 0052 A36E     		ldr	r3, [r4, #104]
 793 0054 0021     		movs	r1, #0
 794 0056 9963     		str	r1, [r3, #56]
1419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 795              		.loc 1 1419 0
 796 0058 2168     		ldr	r1, [r4]
 797 005a 2831     		adds	r1, r1, #40
 798 005c 1300     		movs	r3, r2
 799 005e 0A00     		movs	r2, r1
 800              	.LVL51:
 801 0060 E16C     		ldr	r1, [r4, #76]
 802 0062 A06E     		ldr	r0, [r4, #104]
 803 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 804              	.LVL52:
 805 0068 0028     		cmp	r0, #0
 806 006a 13D1     		bne	.L67
 807              	.L60:
1434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 808              		.loc 1 1434 0
 809 006c 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 79


 810 006e 4022     		movs	r2, #64
 811 0070 1A62     		str	r2, [r3, #32]
1437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 812              		.loc 1 1437 0
 813 0072 7023     		movs	r3, #112
 814 0074 0022     		movs	r2, #0
 815 0076 E254     		strb	r2, [r4, r3]
1441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 816              		.loc 1 1441 0
 817 0078 2268     		ldr	r2, [r4]
 818 007a 9368     		ldr	r3, [r2, #8]
 819 007c 8021     		movs	r1, #128
 820 007e 0B43     		orrs	r3, r1
 821 0080 9360     		str	r3, [r2, #8]
1443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 822              		.loc 1 1443 0
 823 0082 0020     		movs	r0, #0
 824 0084 10E0     		b	.L58
 825              	.LVL53:
 826              	.L66:
1386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 827              		.loc 1 1386 0 discriminator 1
 828 0086 2369     		ldr	r3, [r4, #16]
 829 0088 002B     		cmp	r3, #0
 830 008a C7D1     		bne	.L59
1388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 831              		.loc 1 1388 0
 832 008c CB07     		lsls	r3, r1, #31
 833 008e C5D5     		bpl	.L59
1390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 834              		.loc 1 1390 0
 835 0090 0120     		movs	r0, #1
 836 0092 09E0     		b	.L58
 837              	.LVL54:
 838              	.L67:
1422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 839              		.loc 1 1422 0
 840 0094 1023     		movs	r3, #16
 841 0096 E367     		str	r3, [r4, #124]
1425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 842              		.loc 1 1425 0
 843 0098 6033     		adds	r3, r3, #96
 844 009a 0022     		movs	r2, #0
 845 009c E254     		strb	r2, [r4, r3]
1428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 846              		.loc 1 1428 0
 847 009e 503B     		subs	r3, r3, #80
 848 00a0 6367     		str	r3, [r4, #116]
1430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 849              		.loc 1 1430 0
 850 00a2 0120     		movs	r0, #1
 851 00a4 00E0     		b	.L58
 852              	.LVL55:
 853              	.L61:
1447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 854              		.loc 1 1447 0
 855 00a6 0220     		movs	r0, #2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 80


 856              	.LVL56:
 857              	.L58:
1449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 858              		.loc 1 1449 0
 859              		@ sp needed
 860              	.LVL57:
 861 00a8 10BD     		pop	{r4, pc}
 862              	.LVL58:
 863              	.L62:
1380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 864              		.loc 1 1380 0
 865 00aa 0120     		movs	r0, #1
 866 00ac FCE7     		b	.L58
 867              	.L63:
 868 00ae 0120     		movs	r0, #1
 869 00b0 FAE7     		b	.L58
 870              	.L65:
1395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 871              		.loc 1 1395 0
 872 00b2 0220     		movs	r0, #2
 873 00b4 F8E7     		b	.L58
 874              	.L69:
 875 00b6 C046     		.align	2
 876              	.L68:
 877 00b8 00000000 		.word	UART_DMATransmitCplt
 878 00bc 00000000 		.word	UART_DMATxHalfCplt
 879 00c0 00000000 		.word	UART_DMAError
 880              		.cfi_endproc
 881              	.LFE45:
 883              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_UART_Receive_DMA
 886              		.syntax unified
 887              		.code	16
 888              		.thumb_func
 889              		.fpu softvfp
 891              	HAL_UART_Receive_DMA:
 892              	.LFB46:
1465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 893              		.loc 1 1465 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 897              	.LVL59:
 898 0000 10B5     		push	{r4, lr}
 899              	.LCFI4:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 903 0002 0400     		movs	r4, r0
1467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 904              		.loc 1 1467 0
 905 0004 806F     		ldr	r0, [r0, #120]
 906              	.LVL60:
 907 0006 2028     		cmp	r0, #32
 908 0008 51D1     		bne	.L74
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 81


 909              		.loc 1 1469 0
 910 000a 0029     		cmp	r1, #0
 911 000c 51D0     		beq	.L75
1469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 912              		.loc 1 1469 0 is_stmt 0 discriminator 1
 913 000e 002A     		cmp	r2, #0
 914 0010 51D0     		beq	.L76
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 915              		.loc 1 1477 0 is_stmt 1
 916 0012 8023     		movs	r3, #128
 917 0014 5B01     		lsls	r3, r3, #5
 918 0016 A068     		ldr	r0, [r4, #8]
 919 0018 9842     		cmp	r0, r3
 920 001a 38D0     		beq	.L79
 921              	.L72:
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 922              		.loc 1 1486 0
 923 001c 7023     		movs	r3, #112
 924 001e E35C     		ldrb	r3, [r4, r3]
 925 0020 012B     		cmp	r3, #1
 926 0022 4AD0     		beq	.L78
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 927              		.loc 1 1486 0 is_stmt 0 discriminator 2
 928 0024 7023     		movs	r3, #112
 929 0026 0120     		movs	r0, #1
 930 0028 E054     		strb	r0, [r4, r3]
1488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferSize = Size;
 931              		.loc 1 1488 0 is_stmt 1 discriminator 2
 932 002a 6165     		str	r1, [r4, #84]
1489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 933              		.loc 1 1489 0 discriminator 2
 934 002c 183B     		subs	r3, r3, #24
 935 002e E252     		strh	r2, [r4, r3]
1491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 936              		.loc 1 1491 0 discriminator 2
 937 0030 0023     		movs	r3, #0
 938 0032 E367     		str	r3, [r4, #124]
1492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 939              		.loc 1 1492 0 discriminator 2
 940 0034 2233     		adds	r3, r3, #34
 941 0036 A367     		str	r3, [r4, #120]
1494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 942              		.loc 1 1494 0 discriminator 2
 943 0038 E36E     		ldr	r3, [r4, #108]
 944 003a 002B     		cmp	r3, #0
 945 003c 13D0     		beq	.L73
1497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 946              		.loc 1 1497 0
 947 003e 2049     		ldr	r1, .L81
 948              	.LVL61:
 949 0040 D962     		str	r1, [r3, #44]
1500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 950              		.loc 1 1500 0
 951 0042 E36E     		ldr	r3, [r4, #108]
 952 0044 1F49     		ldr	r1, .L81+4
 953 0046 1963     		str	r1, [r3, #48]
1503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 82


 954              		.loc 1 1503 0
 955 0048 E36E     		ldr	r3, [r4, #108]
 956 004a 1F49     		ldr	r1, .L81+8
 957 004c 5963     		str	r1, [r3, #52]
1506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 958              		.loc 1 1506 0
 959 004e E36E     		ldr	r3, [r4, #108]
 960 0050 0021     		movs	r1, #0
 961 0052 9963     		str	r1, [r3, #56]
1509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 962              		.loc 1 1509 0
 963 0054 2168     		ldr	r1, [r4]
 964 0056 2431     		adds	r1, r1, #36
 965 0058 1300     		movs	r3, r2
 966 005a 626D     		ldr	r2, [r4, #84]
 967              	.LVL62:
 968 005c E06E     		ldr	r0, [r4, #108]
 969 005e FFF7FEFF 		bl	HAL_DMA_Start_IT
 970              	.LVL63:
 971 0062 0028     		cmp	r0, #0
 972 0064 1AD1     		bne	.L80
 973              	.L73:
1524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 974              		.loc 1 1524 0
 975 0066 7023     		movs	r3, #112
 976 0068 0022     		movs	r2, #0
 977 006a E254     		strb	r2, [r4, r3]
1527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 978              		.loc 1 1527 0
 979 006c 2268     		ldr	r2, [r4]
 980 006e 1168     		ldr	r1, [r2]
 981 0070 9033     		adds	r3, r3, #144
 982 0072 0B43     		orrs	r3, r1
 983 0074 1360     		str	r3, [r2]
1530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 984              		.loc 1 1530 0
 985 0076 2268     		ldr	r2, [r4]
 986 0078 9368     		ldr	r3, [r2, #8]
 987 007a 0121     		movs	r1, #1
 988 007c 0B43     		orrs	r3, r1
 989 007e 9360     		str	r3, [r2, #8]
1534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 990              		.loc 1 1534 0
 991 0080 2268     		ldr	r2, [r4]
 992 0082 9368     		ldr	r3, [r2, #8]
 993 0084 3F31     		adds	r1, r1, #63
 994 0086 0B43     		orrs	r3, r1
 995 0088 9360     		str	r3, [r2, #8]
1536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 996              		.loc 1 1536 0
 997 008a 0020     		movs	r0, #0
 998 008c 10E0     		b	.L71
 999              	.LVL64:
 1000              	.L79:
1477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1001              		.loc 1 1477 0 discriminator 1
 1002 008e 2369     		ldr	r3, [r4, #16]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 83


 1003 0090 002B     		cmp	r3, #0
 1004 0092 C3D1     		bne	.L72
1479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1005              		.loc 1 1479 0
 1006 0094 CB07     		lsls	r3, r1, #31
 1007 0096 C1D5     		bpl	.L72
1481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 1008              		.loc 1 1481 0
 1009 0098 0120     		movs	r0, #1
 1010 009a 09E0     		b	.L71
 1011              	.LVL65:
 1012              	.L80:
1512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1013              		.loc 1 1512 0
 1014 009c 1023     		movs	r3, #16
 1015 009e E367     		str	r3, [r4, #124]
1515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1016              		.loc 1 1515 0
 1017 00a0 6033     		adds	r3, r3, #96
 1018 00a2 0022     		movs	r2, #0
 1019 00a4 E254     		strb	r2, [r4, r3]
1518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1020              		.loc 1 1518 0
 1021 00a6 503B     		subs	r3, r3, #80
 1022 00a8 6367     		str	r3, [r4, #116]
1520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 1023              		.loc 1 1520 0
 1024 00aa 0120     		movs	r0, #1
 1025 00ac 00E0     		b	.L71
 1026              	.LVL66:
 1027              	.L74:
1540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1028              		.loc 1 1540 0
 1029 00ae 0220     		movs	r0, #2
 1030              	.LVL67:
 1031              	.L71:
1542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1032              		.loc 1 1542 0
 1033              		@ sp needed
 1034              	.LVL68:
 1035 00b0 10BD     		pop	{r4, pc}
 1036              	.LVL69:
 1037              	.L75:
1471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 1038              		.loc 1 1471 0
 1039 00b2 0120     		movs	r0, #1
 1040 00b4 FCE7     		b	.L71
 1041              	.L76:
 1042 00b6 0120     		movs	r0, #1
 1043 00b8 FAE7     		b	.L71
 1044              	.L78:
1486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1045              		.loc 1 1486 0
 1046 00ba 0220     		movs	r0, #2
 1047 00bc F8E7     		b	.L71
 1048              	.L82:
 1049 00be C046     		.align	2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 84


 1050              	.L81:
 1051 00c0 00000000 		.word	UART_DMAReceiveCplt
 1052 00c4 00000000 		.word	UART_DMARxHalfCplt
 1053 00c8 00000000 		.word	UART_DMAError
 1054              		.cfi_endproc
 1055              	.LFE46:
 1057              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1058              		.align	1
 1059              		.global	HAL_UART_DMAPause
 1060              		.syntax unified
 1061              		.code	16
 1062              		.thumb_func
 1063              		.fpu softvfp
 1065              	HAL_UART_DMAPause:
 1066              	.LFB47:
1550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 1067              		.loc 1 1550 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 0, uses_anonymous_args = 0
 1071              	.LVL70:
 1072 0000 10B5     		push	{r4, lr}
 1073              	.LCFI5:
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
1551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1077              		.loc 1 1551 0
 1078 0002 446F     		ldr	r4, [r0, #116]
 1079              	.LVL71:
1552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1080              		.loc 1 1552 0
 1081 0004 816F     		ldr	r1, [r0, #120]
 1082              	.LVL72:
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1083              		.loc 1 1555 0
 1084 0006 7023     		movs	r3, #112
 1085 0008 C35C     		ldrb	r3, [r0, r3]
 1086 000a 012B     		cmp	r3, #1
 1087 000c 28D0     		beq	.L87
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1088              		.loc 1 1555 0 is_stmt 0 discriminator 2
 1089 000e 7023     		movs	r3, #112
 1090 0010 0122     		movs	r2, #1
 1091 0012 C254     		strb	r2, [r0, r3]
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1092              		.loc 1 1557 0 is_stmt 1 discriminator 2
 1093 0014 0368     		ldr	r3, [r0]
 1094 0016 9A68     		ldr	r2, [r3, #8]
 1095 0018 1206     		lsls	r2, r2, #24
 1096 001a 01D5     		bpl	.L85
1557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1097              		.loc 1 1557 0 is_stmt 0 discriminator 1
 1098 001c 212C     		cmp	r4, #33
 1099 001e 0AD0     		beq	.L88
 1100              	.LVL73:
 1101              	.L85:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 85


1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1102              		.loc 1 1563 0 is_stmt 1
 1103 0020 0368     		ldr	r3, [r0]
 1104 0022 9A68     		ldr	r2, [r3, #8]
 1105 0024 5206     		lsls	r2, r2, #25
 1106 0026 01D5     		bpl	.L86
1563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1107              		.loc 1 1563 0 is_stmt 0 discriminator 1
 1108 0028 2229     		cmp	r1, #34
 1109 002a 09D0     		beq	.L89
 1110              	.LVL74:
 1111              	.L86:
1575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1112              		.loc 1 1575 0 is_stmt 1
 1113 002c 7023     		movs	r3, #112
 1114 002e 0022     		movs	r2, #0
 1115 0030 C254     		strb	r2, [r0, r3]
1577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1116              		.loc 1 1577 0
 1117 0032 0020     		movs	r0, #0
 1118              	.LVL75:
 1119              	.L84:
1578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1120              		.loc 1 1578 0
 1121              		@ sp needed
 1122 0034 10BD     		pop	{r4, pc}
 1123              	.LVL76:
 1124              	.L88:
1561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1125              		.loc 1 1561 0
 1126 0036 9A68     		ldr	r2, [r3, #8]
 1127 0038 5F34     		adds	r4, r4, #95
 1128              	.LVL77:
 1129 003a A243     		bics	r2, r4
 1130 003c 9A60     		str	r2, [r3, #8]
 1131 003e EFE7     		b	.L85
 1132              	.LVL78:
 1133              	.L89:
1567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1134              		.loc 1 1567 0
 1135 0040 1A68     		ldr	r2, [r3]
 1136 0042 0849     		ldr	r1, .L90
 1137              	.LVL79:
 1138 0044 0A40     		ands	r2, r1
 1139 0046 1A60     		str	r2, [r3]
1568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1140              		.loc 1 1568 0
 1141 0048 0268     		ldr	r2, [r0]
 1142 004a 9368     		ldr	r3, [r2, #8]
 1143 004c 0331     		adds	r1, r1, #3
 1144 004e FF31     		adds	r1, r1, #255
 1145 0050 8B43     		bics	r3, r1
 1146 0052 9360     		str	r3, [r2, #8]
1571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1147              		.loc 1 1571 0
 1148 0054 0268     		ldr	r2, [r0]
 1149 0056 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 86


 1150 0058 3F31     		adds	r1, r1, #63
 1151 005a 8B43     		bics	r3, r1
 1152 005c 9360     		str	r3, [r2, #8]
 1153 005e E5E7     		b	.L86
 1154              	.LVL80:
 1155              	.L87:
1555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1156              		.loc 1 1555 0
 1157 0060 0220     		movs	r0, #2
 1158              	.LVL81:
 1159 0062 E7E7     		b	.L84
 1160              	.L91:
 1161              		.align	2
 1162              	.L90:
 1163 0064 FFFEFFFF 		.word	-257
 1164              		.cfi_endproc
 1165              	.LFE47:
 1167              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1168              		.align	1
 1169              		.global	HAL_UART_DMAResume
 1170              		.syntax unified
 1171              		.code	16
 1172              		.thumb_func
 1173              		.fpu softvfp
 1175              	HAL_UART_DMAResume:
 1176              	.LFB48:
1586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 1177              		.loc 1 1586 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              	.LVL82:
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1183              		.loc 1 1588 0
 1184 0000 7023     		movs	r3, #112
 1185 0002 C35C     		ldrb	r3, [r0, r3]
 1186 0004 012B     		cmp	r3, #1
 1187 0006 27D0     		beq	.L96
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1188              		.loc 1 1588 0 is_stmt 0 discriminator 2
 1189 0008 7023     		movs	r3, #112
 1190 000a 0122     		movs	r2, #1
 1191 000c C254     		strb	r2, [r0, r3]
1590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1192              		.loc 1 1590 0 is_stmt 1 discriminator 2
 1193 000e 436F     		ldr	r3, [r0, #116]
 1194 0010 212B     		cmp	r3, #33
 1195 0012 07D0     		beq	.L97
 1196              	.L94:
1595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1197              		.loc 1 1595 0
 1198 0014 836F     		ldr	r3, [r0, #120]
 1199 0016 222B     		cmp	r3, #34
 1200 0018 0AD0     		beq	.L98
 1201              	.L95:
1609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 87


 1202              		.loc 1 1609 0
 1203 001a 7023     		movs	r3, #112
 1204 001c 0022     		movs	r2, #0
 1205 001e C254     		strb	r2, [r0, r3]
1611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1206              		.loc 1 1611 0
 1207 0020 0020     		movs	r0, #0
 1208              	.LVL83:
 1209              	.L93:
1612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1210              		.loc 1 1612 0
 1211              		@ sp needed
 1212 0022 7047     		bx	lr
 1213              	.LVL84:
 1214              	.L97:
1593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1215              		.loc 1 1593 0
 1216 0024 0268     		ldr	r2, [r0]
 1217 0026 9368     		ldr	r3, [r2, #8]
 1218 0028 8021     		movs	r1, #128
 1219 002a 0B43     		orrs	r3, r1
 1220 002c 9360     		str	r3, [r2, #8]
 1221 002e F1E7     		b	.L94
 1222              	.L98:
1598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1223              		.loc 1 1598 0
 1224 0030 0368     		ldr	r3, [r0]
 1225 0032 0822     		movs	r2, #8
 1226 0034 1A62     		str	r2, [r3, #32]
1601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1227              		.loc 1 1601 0
 1228 0036 0268     		ldr	r2, [r0]
 1229 0038 1168     		ldr	r1, [r2]
 1230 003a 8023     		movs	r3, #128
 1231 003c 5B00     		lsls	r3, r3, #1
 1232 003e 0B43     		orrs	r3, r1
 1233 0040 1360     		str	r3, [r2]
1602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1234              		.loc 1 1602 0
 1235 0042 0268     		ldr	r2, [r0]
 1236 0044 9368     		ldr	r3, [r2, #8]
 1237 0046 0121     		movs	r1, #1
 1238 0048 0B43     		orrs	r3, r1
 1239 004a 9360     		str	r3, [r2, #8]
1605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1240              		.loc 1 1605 0
 1241 004c 0268     		ldr	r2, [r0]
 1242 004e 9368     		ldr	r3, [r2, #8]
 1243 0050 3F31     		adds	r1, r1, #63
 1244 0052 0B43     		orrs	r3, r1
 1245 0054 9360     		str	r3, [r2, #8]
 1246 0056 E0E7     		b	.L95
 1247              	.L96:
1588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1248              		.loc 1 1588 0
 1249 0058 0220     		movs	r0, #2
 1250              	.LVL85:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 88


 1251 005a E2E7     		b	.L93
 1252              		.cfi_endproc
 1253              	.LFE48:
 1255              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1256              		.align	1
 1257              		.global	HAL_UART_DMAStop
 1258              		.syntax unified
 1259              		.code	16
 1260              		.thumb_func
 1261              		.fpu softvfp
 1263              	HAL_UART_DMAStop:
 1264              	.LFB49:
1620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1265              		.loc 1 1620 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 0, uses_anonymous_args = 0
 1269              	.LVL86:
 1270 0000 70B5     		push	{r4, r5, r6, lr}
 1271              	.LCFI6:
 1272              		.cfi_def_cfa_offset 16
 1273              		.cfi_offset 4, -16
 1274              		.cfi_offset 5, -12
 1275              		.cfi_offset 6, -8
 1276              		.cfi_offset 14, -4
 1277 0002 0400     		movs	r4, r0
1628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1278              		.loc 1 1628 0
 1279 0004 416F     		ldr	r1, [r0, #116]
 1280              	.LVL87:
1629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1281              		.loc 1 1629 0
 1282 0006 856F     		ldr	r5, [r0, #120]
 1283              	.LVL88:
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1284              		.loc 1 1632 0
 1285 0008 0368     		ldr	r3, [r0]
 1286 000a 9A68     		ldr	r2, [r3, #8]
 1287 000c 1206     		lsls	r2, r2, #24
 1288 000e 01D5     		bpl	.L100
1632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1289              		.loc 1 1632 0 is_stmt 0 discriminator 1
 1290 0010 2129     		cmp	r1, #33
 1291 0012 07D0     		beq	.L106
 1292              	.LVL89:
 1293              	.L100:
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1294              		.loc 1 1656 0 is_stmt 1
 1295 0014 2368     		ldr	r3, [r4]
 1296 0016 9A68     		ldr	r2, [r3, #8]
 1297 0018 5206     		lsls	r2, r2, #25
 1298 001a 34D5     		bpl	.L104
1656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1299              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1300 001c 222D     		cmp	r5, #34
 1301 001e 19D0     		beq	.L107
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 89


 1302              		.loc 1 1679 0 is_stmt 1
 1303 0020 0020     		movs	r0, #0
 1304 0022 31E0     		b	.L102
 1305              	.LVL90:
 1306              	.L106:
1635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1307              		.loc 1 1635 0
 1308 0024 9A68     		ldr	r2, [r3, #8]
 1309 0026 5F31     		adds	r1, r1, #95
 1310              	.LVL91:
 1311 0028 8A43     		bics	r2, r1
 1312 002a 9A60     		str	r2, [r3, #8]
1638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1313              		.loc 1 1638 0
 1314 002c 806E     		ldr	r0, [r0, #104]
 1315              	.LVL92:
 1316 002e 0028     		cmp	r0, #0
 1317 0030 03D0     		beq	.L101
1640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1318              		.loc 1 1640 0
 1319 0032 FFF7FEFF 		bl	HAL_DMA_Abort
 1320              	.LVL93:
 1321 0036 0028     		cmp	r0, #0
 1322 0038 03D1     		bne	.L108
 1323              	.L101:
1652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1324              		.loc 1 1652 0
 1325 003a 2000     		movs	r0, r4
 1326 003c FFF7FEFF 		bl	UART_EndTxTransfer
 1327              	.LVL94:
 1328 0040 E8E7     		b	.L100
 1329              	.L108:
1642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1330              		.loc 1 1642 0
 1331 0042 A06E     		ldr	r0, [r4, #104]
 1332 0044 FFF7FEFF 		bl	HAL_DMA_GetError
 1333              	.LVL95:
 1334 0048 2028     		cmp	r0, #32
 1335 004a F6D1     		bne	.L101
1645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1336              		.loc 1 1645 0
 1337 004c 1023     		movs	r3, #16
 1338 004e E367     		str	r3, [r4, #124]
1647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1339              		.loc 1 1647 0
 1340 0050 1D38     		subs	r0, r0, #29
 1341 0052 19E0     		b	.L102
 1342              	.L107:
1659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1343              		.loc 1 1659 0
 1344 0054 9A68     		ldr	r2, [r3, #8]
 1345 0056 4021     		movs	r1, #64
 1346 0058 8A43     		bics	r2, r1
 1347 005a 9A60     		str	r2, [r3, #8]
1662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1348              		.loc 1 1662 0
 1349 005c E06E     		ldr	r0, [r4, #108]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 90


 1350 005e 0028     		cmp	r0, #0
 1351 0060 03D0     		beq	.L103
1664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1352              		.loc 1 1664 0
 1353 0062 FFF7FEFF 		bl	HAL_DMA_Abort
 1354              	.LVL96:
 1355 0066 0028     		cmp	r0, #0
 1356 0068 04D1     		bne	.L109
 1357              	.L103:
1676:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1358              		.loc 1 1676 0
 1359 006a 2000     		movs	r0, r4
 1360 006c FFF7FEFF 		bl	UART_EndRxTransfer
 1361              	.LVL97:
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1362              		.loc 1 1679 0
 1363 0070 0020     		movs	r0, #0
 1364 0072 09E0     		b	.L102
 1365              	.L109:
1666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1366              		.loc 1 1666 0
 1367 0074 E06E     		ldr	r0, [r4, #108]
 1368 0076 FFF7FEFF 		bl	HAL_DMA_GetError
 1369              	.LVL98:
 1370 007a 2028     		cmp	r0, #32
 1371 007c F5D1     		bne	.L103
1669:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1372              		.loc 1 1669 0
 1373 007e 1023     		movs	r3, #16
 1374 0080 E367     		str	r3, [r4, #124]
1671:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1375              		.loc 1 1671 0
 1376 0082 1D38     		subs	r0, r0, #29
 1377 0084 00E0     		b	.L102
 1378              	.L104:
1679:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1379              		.loc 1 1679 0
 1380 0086 0020     		movs	r0, #0
 1381              	.L102:
1680:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1382              		.loc 1 1680 0
 1383              		@ sp needed
 1384              	.LVL99:
 1385              	.LVL100:
 1386 0088 70BD     		pop	{r4, r5, r6, pc}
 1387              		.cfi_endproc
 1388              	.LFE49:
 1390              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1391              		.align	1
 1392              		.global	HAL_UART_Abort
 1393              		.syntax unified
 1394              		.code	16
 1395              		.thumb_func
 1396              		.fpu softvfp
 1398              	HAL_UART_Abort:
 1399              	.LFB50:
1695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 91


 1400              		.loc 1 1695 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              	.LVL101:
 1405 0000 10B5     		push	{r4, lr}
 1406              	.LCFI7:
 1407              		.cfi_def_cfa_offset 8
 1408              		.cfi_offset 4, -8
 1409              		.cfi_offset 14, -4
 1410 0002 0400     		movs	r4, r0
1697:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1411              		.loc 1 1697 0
 1412 0004 0268     		ldr	r2, [r0]
 1413 0006 1368     		ldr	r3, [r2]
 1414 0008 2849     		ldr	r1, .L116
 1415 000a 0B40     		ands	r3, r1
 1416 000c 1360     		str	r3, [r2]
1698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1417              		.loc 1 1698 0
 1418 000e 0268     		ldr	r2, [r0]
 1419 0010 9368     		ldr	r3, [r2, #8]
 1420 0012 E331     		adds	r1, r1, #227
 1421 0014 FF31     		adds	r1, r1, #255
 1422 0016 8B43     		bics	r3, r1
 1423 0018 9360     		str	r3, [r2, #8]
1701:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1424              		.loc 1 1701 0
 1425 001a 0368     		ldr	r3, [r0]
 1426 001c 9A68     		ldr	r2, [r3, #8]
 1427 001e 1206     		lsls	r2, r2, #24
 1428 0020 0DD5     		bpl	.L111
1703:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1429              		.loc 1 1703 0
 1430 0022 9A68     		ldr	r2, [r3, #8]
 1431 0024 7F31     		adds	r1, r1, #127
 1432 0026 8A43     		bics	r2, r1
 1433 0028 9A60     		str	r2, [r3, #8]
1706:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1434              		.loc 1 1706 0
 1435 002a 836E     		ldr	r3, [r0, #104]
 1436 002c 002B     		cmp	r3, #0
 1437 002e 06D0     		beq	.L111
1710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1438              		.loc 1 1710 0
 1439 0030 0022     		movs	r2, #0
 1440 0032 9A63     		str	r2, [r3, #56]
1712:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1441              		.loc 1 1712 0
 1442 0034 806E     		ldr	r0, [r0, #104]
 1443              	.LVL102:
 1444 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1445              	.LVL103:
 1446 003a 0028     		cmp	r0, #0
 1447 003c 24D1     		bne	.L114
 1448              	.L111:
1726:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 92


 1449              		.loc 1 1726 0
 1450 003e 2368     		ldr	r3, [r4]
 1451 0040 9A68     		ldr	r2, [r3, #8]
 1452 0042 5206     		lsls	r2, r2, #25
 1453 0044 0DD5     		bpl	.L113
1728:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1454              		.loc 1 1728 0
 1455 0046 9A68     		ldr	r2, [r3, #8]
 1456 0048 4021     		movs	r1, #64
 1457 004a 8A43     		bics	r2, r1
 1458 004c 9A60     		str	r2, [r3, #8]
1731:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1459              		.loc 1 1731 0
 1460 004e E36E     		ldr	r3, [r4, #108]
 1461 0050 002B     		cmp	r3, #0
 1462 0052 06D0     		beq	.L113
1735:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1463              		.loc 1 1735 0
 1464 0054 0022     		movs	r2, #0
 1465 0056 9A63     		str	r2, [r3, #56]
1737:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1466              		.loc 1 1737 0
 1467 0058 E06E     		ldr	r0, [r4, #108]
 1468 005a FFF7FEFF 		bl	HAL_DMA_Abort
 1469              	.LVL104:
 1470 005e 0028     		cmp	r0, #0
 1471 0060 1BD1     		bne	.L115
 1472              	.L113:
1751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1473              		.loc 1 1751 0
 1474 0062 0023     		movs	r3, #0
 1475 0064 5222     		movs	r2, #82
 1476 0066 A352     		strh	r3, [r4, r2]
1752:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1477              		.loc 1 1752 0
 1478 0068 0832     		adds	r2, r2, #8
 1479 006a A352     		strh	r3, [r4, r2]
1755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1480              		.loc 1 1755 0
 1481 006c 2268     		ldr	r2, [r4]
 1482 006e 0F21     		movs	r1, #15
 1483 0070 1162     		str	r1, [r2, #32]
1759:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1484              		.loc 1 1759 0
 1485 0072 2168     		ldr	r1, [r4]
 1486 0074 8A69     		ldr	r2, [r1, #24]
 1487 0076 0820     		movs	r0, #8
 1488 0078 0243     		orrs	r2, r0
 1489 007a 8A61     		str	r2, [r1, #24]
1762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1490              		.loc 1 1762 0
 1491 007c 2022     		movs	r2, #32
 1492 007e 6267     		str	r2, [r4, #116]
1763:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1493              		.loc 1 1763 0
 1494 0080 A267     		str	r2, [r4, #120]
1766:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 93


 1495              		.loc 1 1766 0
 1496 0082 E367     		str	r3, [r4, #124]
1768:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1497              		.loc 1 1768 0
 1498 0084 0020     		movs	r0, #0
 1499              	.L112:
1769:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1500              		.loc 1 1769 0
 1501              		@ sp needed
 1502              	.LVL105:
 1503 0086 10BD     		pop	{r4, pc}
 1504              	.LVL106:
 1505              	.L114:
1714:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1506              		.loc 1 1714 0
 1507 0088 A06E     		ldr	r0, [r4, #104]
 1508 008a FFF7FEFF 		bl	HAL_DMA_GetError
 1509              	.LVL107:
 1510 008e 2028     		cmp	r0, #32
 1511 0090 D5D1     		bne	.L111
1717:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1512              		.loc 1 1717 0
 1513 0092 1023     		movs	r3, #16
 1514 0094 E367     		str	r3, [r4, #124]
1719:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1515              		.loc 1 1719 0
 1516 0096 1D38     		subs	r0, r0, #29
 1517 0098 F5E7     		b	.L112
 1518              	.L115:
1739:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1519              		.loc 1 1739 0
 1520 009a E06E     		ldr	r0, [r4, #108]
 1521 009c FFF7FEFF 		bl	HAL_DMA_GetError
 1522              	.LVL108:
 1523 00a0 2028     		cmp	r0, #32
 1524 00a2 DED1     		bne	.L113
1742:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1525              		.loc 1 1742 0
 1526 00a4 1023     		movs	r3, #16
 1527 00a6 E367     		str	r3, [r4, #124]
1744:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1528              		.loc 1 1744 0
 1529 00a8 1D38     		subs	r0, r0, #29
 1530 00aa ECE7     		b	.L112
 1531              	.L117:
 1532              		.align	2
 1533              	.L116:
 1534 00ac 1FFEFFFF 		.word	-481
 1535              		.cfi_endproc
 1536              	.LFE50:
 1538              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1539              		.align	1
 1540              		.global	HAL_UART_AbortTransmit
 1541              		.syntax unified
 1542              		.code	16
 1543              		.thumb_func
 1544              		.fpu softvfp
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 94


 1546              	HAL_UART_AbortTransmit:
 1547              	.LFB51:
1784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1548              		.loc 1 1784 0
 1549              		.cfi_startproc
 1550              		@ args = 0, pretend = 0, frame = 0
 1551              		@ frame_needed = 0, uses_anonymous_args = 0
 1552              	.LVL109:
 1553 0000 10B5     		push	{r4, lr}
 1554              	.LCFI8:
 1555              		.cfi_def_cfa_offset 8
 1556              		.cfi_offset 4, -8
 1557              		.cfi_offset 14, -4
 1558 0002 0400     		movs	r4, r0
1786:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1559              		.loc 1 1786 0
 1560 0004 0268     		ldr	r2, [r0]
 1561 0006 1368     		ldr	r3, [r2]
 1562 0008 C021     		movs	r1, #192
 1563 000a 8B43     		bics	r3, r1
 1564 000c 1360     		str	r3, [r2]
1789:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1565              		.loc 1 1789 0
 1566 000e 0368     		ldr	r3, [r0]
 1567 0010 9A68     		ldr	r2, [r3, #8]
 1568 0012 1206     		lsls	r2, r2, #24
 1569 0014 0DD5     		bpl	.L119
1791:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1570              		.loc 1 1791 0
 1571 0016 9A68     		ldr	r2, [r3, #8]
 1572 0018 4039     		subs	r1, r1, #64
 1573 001a 8A43     		bics	r2, r1
 1574 001c 9A60     		str	r2, [r3, #8]
1794:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1575              		.loc 1 1794 0
 1576 001e 836E     		ldr	r3, [r0, #104]
 1577 0020 002B     		cmp	r3, #0
 1578 0022 06D0     		beq	.L119
1798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1579              		.loc 1 1798 0
 1580 0024 0022     		movs	r2, #0
 1581 0026 9A63     		str	r2, [r3, #56]
1800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1582              		.loc 1 1800 0
 1583 0028 806E     		ldr	r0, [r0, #104]
 1584              	.LVL110:
 1585 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1586              	.LVL111:
 1587 002e 0028     		cmp	r0, #0
 1588 0030 06D1     		bne	.L121
 1589              	.L119:
1814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1590              		.loc 1 1814 0
 1591 0032 5223     		movs	r3, #82
 1592 0034 0022     		movs	r2, #0
 1593 0036 E252     		strh	r2, [r4, r3]
1818:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 95


 1594              		.loc 1 1818 0
 1595 0038 323B     		subs	r3, r3, #50
 1596 003a 6367     		str	r3, [r4, #116]
1820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1597              		.loc 1 1820 0
 1598 003c 0020     		movs	r0, #0
 1599              	.L120:
1821:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1600              		.loc 1 1821 0
 1601              		@ sp needed
 1602              	.LVL112:
 1603 003e 10BD     		pop	{r4, pc}
 1604              	.LVL113:
 1605              	.L121:
1802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1606              		.loc 1 1802 0
 1607 0040 A06E     		ldr	r0, [r4, #104]
 1608 0042 FFF7FEFF 		bl	HAL_DMA_GetError
 1609              	.LVL114:
 1610 0046 2028     		cmp	r0, #32
 1611 0048 F3D1     		bne	.L119
1805:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1612              		.loc 1 1805 0
 1613 004a 1023     		movs	r3, #16
 1614 004c E367     		str	r3, [r4, #124]
1807:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1615              		.loc 1 1807 0
 1616 004e 1D38     		subs	r0, r0, #29
 1617 0050 F5E7     		b	.L120
 1618              		.cfi_endproc
 1619              	.LFE51:
 1621              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1622              		.align	1
 1623              		.global	HAL_UART_AbortReceive
 1624              		.syntax unified
 1625              		.code	16
 1626              		.thumb_func
 1627              		.fpu softvfp
 1629              	HAL_UART_AbortReceive:
 1630              	.LFB52:
1836:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1631              		.loc 1 1836 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL115:
 1636 0000 10B5     		push	{r4, lr}
 1637              	.LCFI9:
 1638              		.cfi_def_cfa_offset 8
 1639              		.cfi_offset 4, -8
 1640              		.cfi_offset 14, -4
 1641 0002 0400     		movs	r4, r0
1838:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1642              		.loc 1 1838 0
 1643 0004 0268     		ldr	r2, [r0]
 1644 0006 1368     		ldr	r3, [r2]
 1645 0008 1949     		ldr	r1, .L126
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 96


 1646 000a 0B40     		ands	r3, r1
 1647 000c 1360     		str	r3, [r2]
1839:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1648              		.loc 1 1839 0
 1649 000e 0268     		ldr	r2, [r0]
 1650 0010 9368     		ldr	r3, [r2, #8]
 1651 0012 2331     		adds	r1, r1, #35
 1652 0014 FF31     		adds	r1, r1, #255
 1653 0016 8B43     		bics	r3, r1
 1654 0018 9360     		str	r3, [r2, #8]
1842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1655              		.loc 1 1842 0
 1656 001a 0368     		ldr	r3, [r0]
 1657 001c 9A68     		ldr	r2, [r3, #8]
 1658 001e 5206     		lsls	r2, r2, #25
 1659 0020 0DD5     		bpl	.L123
1844:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1660              		.loc 1 1844 0
 1661 0022 9A68     		ldr	r2, [r3, #8]
 1662 0024 3F31     		adds	r1, r1, #63
 1663 0026 8A43     		bics	r2, r1
 1664 0028 9A60     		str	r2, [r3, #8]
1847:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1665              		.loc 1 1847 0
 1666 002a C36E     		ldr	r3, [r0, #108]
 1667 002c 002B     		cmp	r3, #0
 1668 002e 06D0     		beq	.L123
1851:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1669              		.loc 1 1851 0
 1670 0030 0022     		movs	r2, #0
 1671 0032 9A63     		str	r2, [r3, #56]
1853:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 1672              		.loc 1 1853 0
 1673 0034 C06E     		ldr	r0, [r0, #108]
 1674              	.LVL116:
 1675 0036 FFF7FEFF 		bl	HAL_DMA_Abort
 1676              	.LVL117:
 1677 003a 0028     		cmp	r0, #0
 1678 003c 0ED1     		bne	.L125
 1679              	.L123:
1867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1680              		.loc 1 1867 0
 1681 003e 5A23     		movs	r3, #90
 1682 0040 0022     		movs	r2, #0
 1683 0042 E252     		strh	r2, [r4, r3]
1870:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1684              		.loc 1 1870 0
 1685 0044 2368     		ldr	r3, [r4]
 1686 0046 0F32     		adds	r2, r2, #15
 1687 0048 1A62     		str	r2, [r3, #32]
1873:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1688              		.loc 1 1873 0
 1689 004a 2268     		ldr	r2, [r4]
 1690 004c 9369     		ldr	r3, [r2, #24]
 1691 004e 0821     		movs	r1, #8
 1692 0050 0B43     		orrs	r3, r1
 1693 0052 9361     		str	r3, [r2, #24]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 97


1876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1694              		.loc 1 1876 0
 1695 0054 2023     		movs	r3, #32
 1696 0056 A367     		str	r3, [r4, #120]
1878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1697              		.loc 1 1878 0
 1698 0058 0020     		movs	r0, #0
 1699              	.L124:
1879:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1700              		.loc 1 1879 0
 1701              		@ sp needed
 1702              	.LVL118:
 1703 005a 10BD     		pop	{r4, pc}
 1704              	.LVL119:
 1705              	.L125:
1855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 1706              		.loc 1 1855 0
 1707 005c E06E     		ldr	r0, [r4, #108]
 1708 005e FFF7FEFF 		bl	HAL_DMA_GetError
 1709              	.LVL120:
 1710 0062 2028     		cmp	r0, #32
 1711 0064 EBD1     		bne	.L123
1858:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1712              		.loc 1 1858 0
 1713 0066 1023     		movs	r3, #16
 1714 0068 E367     		str	r3, [r4, #124]
1860:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 1715              		.loc 1 1860 0
 1716 006a 1D38     		subs	r0, r0, #29
 1717 006c F5E7     		b	.L124
 1718              	.L127:
 1719 006e C046     		.align	2
 1720              	.L126:
 1721 0070 DFFEFFFF 		.word	-289
 1722              		.cfi_endproc
 1723              	.LFE52:
 1725              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1726              		.align	1
 1727              		.weak	HAL_UART_TxCpltCallback
 1728              		.syntax unified
 1729              		.code	16
 1730              		.thumb_func
 1731              		.fpu softvfp
 1733              	HAL_UART_TxCpltCallback:
 1734              	.LFB57:
2396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1735              		.loc 1 2396 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 0
 1738              		@ frame_needed = 0, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740              	.LVL121:
2403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1741              		.loc 1 2403 0
 1742              		@ sp needed
 1743 0000 7047     		bx	lr
 1744              		.cfi_endproc
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 98


 1745              	.LFE57:
 1747              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1748              		.align	1
 1749              		.syntax unified
 1750              		.code	16
 1751              		.thumb_func
 1752              		.fpu softvfp
 1754              	UART_DMATransmitCplt:
 1755              	.LFB79:
3160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1756              		.loc 1 3160 0
 1757              		.cfi_startproc
 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 0, uses_anonymous_args = 0
 1760              	.LVL122:
 1761 0000 10B5     		push	{r4, lr}
 1762              	.LCFI10:
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 4, -8
 1765              		.cfi_offset 14, -4
3161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1766              		.loc 1 3161 0
 1767 0002 836A     		ldr	r3, [r0, #40]
 1768              	.LVL123:
3164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 1769              		.loc 1 3164 0
 1770 0004 0268     		ldr	r2, [r0]
 1771 0006 1268     		ldr	r2, [r2]
 1772 0008 9206     		lsls	r2, r2, #26
 1773 000a 0DD4     		bmi	.L130
3166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1774              		.loc 1 3166 0
 1775 000c 5222     		movs	r2, #82
 1776 000e 0021     		movs	r1, #0
 1777 0010 9952     		strh	r1, [r3, r2]
3170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1778              		.loc 1 3170 0
 1779 0012 1968     		ldr	r1, [r3]
 1780 0014 8A68     		ldr	r2, [r1, #8]
 1781 0016 8020     		movs	r0, #128
 1782              	.LVL124:
 1783 0018 8243     		bics	r2, r0
 1784 001a 8A60     		str	r2, [r1, #8]
3173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 1785              		.loc 1 3173 0
 1786 001c 1A68     		ldr	r2, [r3]
 1787 001e 1368     		ldr	r3, [r2]
 1788              	.LVL125:
 1789 0020 4021     		movs	r1, #64
 1790 0022 0B43     		orrs	r3, r1
 1791 0024 1360     		str	r3, [r2]
 1792              	.L129:
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1793              		.loc 1 3186 0
 1794              		@ sp needed
 1795 0026 10BD     		pop	{r4, pc}
 1796              	.LVL126:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 99


 1797              	.L130:
3183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1798              		.loc 1 3183 0
 1799 0028 1800     		movs	r0, r3
 1800              	.LVL127:
 1801 002a FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1802              	.LVL128:
3186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1803              		.loc 1 3186 0
 1804 002e FAE7     		b	.L129
 1805              		.cfi_endproc
 1806              	.LFE79:
 1808              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1809              		.align	1
 1810              		.syntax unified
 1811              		.code	16
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	UART_EndTransmit_IT:
 1816              	.LFB91:
3540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1817              		.loc 1 3549 0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 1821              	.LVL129:
 1822 0000 10B5     		push	{r4, lr}
 1823              	.LCFI11:
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 4, -8
 1826              		.cfi_offset 14, -4
3550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1827              		.loc 1 3551 0
 1828 0002 0268     		ldr	r2, [r0]
 1829 0004 1368     		ldr	r3, [r2]
 1830 0006 4021     		movs	r1, #64
 1831 0008 8B43     		bics	r3, r1
 1832 000a 1360     		str	r3, [r2]
3552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1833              		.loc 1 3554 0
 1834 000c 2023     		movs	r3, #32
 1835 000e 4367     		str	r3, [r0, #116]
3555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 100


 1836              		.loc 1 3557 0
 1837 0010 0023     		movs	r3, #0
 1838 0012 4366     		str	r3, [r0, #100]
3558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1839              		.loc 1 3564 0
 1840 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1841              	.LVL130:
3565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1842              		.loc 1 3566 0
 1843              		@ sp needed
 1844 0018 10BD     		pop	{r4, pc}
 1845              		.cfi_endproc
 1846              	.LFE91:
 1848              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1849              		.align	1
 1850              		.weak	HAL_UART_TxHalfCpltCallback
 1851              		.syntax unified
 1852              		.code	16
 1853              		.thumb_func
 1854              		.fpu softvfp
 1856              	HAL_UART_TxHalfCpltCallback:
 1857              	.LFB58:
2411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1858              		.loc 1 2411 0
 1859              		.cfi_startproc
 1860              		@ args = 0, pretend = 0, frame = 0
 1861              		@ frame_needed = 0, uses_anonymous_args = 0
 1862              		@ link register save eliminated.
 1863              	.LVL131:
2418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1864              		.loc 1 2418 0
 1865              		@ sp needed
 1866 0000 7047     		bx	lr
 1867              		.cfi_endproc
 1868              	.LFE58:
 1870              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1871              		.align	1
 1872              		.syntax unified
 1873              		.code	16
 1874              		.thumb_func
 1875              		.fpu softvfp
 1877              	UART_DMATxHalfCplt:
 1878              	.LFB80:
3194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1879              		.loc 1 3194 0
 1880              		.cfi_startproc
 1881              		@ args = 0, pretend = 0, frame = 0
 1882              		@ frame_needed = 0, uses_anonymous_args = 0
 1883              	.LVL132:
 1884 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 101


 1885              	.LCFI12:
 1886              		.cfi_def_cfa_offset 8
 1887              		.cfi_offset 4, -8
 1888              		.cfi_offset 14, -4
3195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1889              		.loc 1 3195 0
 1890 0002 806A     		ldr	r0, [r0, #40]
 1891              	.LVL133:
3202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1892              		.loc 1 3202 0
 1893 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1894              	.LVL134:
3204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1895              		.loc 1 3204 0
 1896              		@ sp needed
 1897 0008 10BD     		pop	{r4, pc}
 1898              		.cfi_endproc
 1899              	.LFE80:
 1901              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1902              		.align	1
 1903              		.weak	HAL_UART_RxCpltCallback
 1904              		.syntax unified
 1905              		.code	16
 1906              		.thumb_func
 1907              		.fpu softvfp
 1909              	HAL_UART_RxCpltCallback:
 1910              	.LFB59:
2426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1911              		.loc 1 2426 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
 1916              	.LVL135:
2433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1917              		.loc 1 2433 0
 1918              		@ sp needed
 1919 0000 7047     		bx	lr
 1920              		.cfi_endproc
 1921              	.LFE59:
 1923              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1924              		.align	1
 1925              		.syntax unified
 1926              		.code	16
 1927              		.thumb_func
 1928              		.fpu softvfp
 1930              	UART_RxISR_8BIT:
 1931              	.LFB92:
3567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 1932              		.loc 1 3574 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 102


 1933              		.cfi_startproc
 1934              		@ args = 0, pretend = 0, frame = 0
 1935              		@ frame_needed = 0, uses_anonymous_args = 0
 1936              	.LVL136:
 1937 0000 10B5     		push	{r4, lr}
 1938              	.LCFI13:
 1939              		.cfi_def_cfa_offset 8
 1940              		.cfi_offset 4, -8
 1941              		.cfi_offset 14, -4
3575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1942              		.loc 1 3575 0
 1943 0002 5C23     		movs	r3, #92
 1944 0004 C35A     		ldrh	r3, [r0, r3]
 1945              	.LVL137:
3576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhdata;
3577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1946              		.loc 1 3579 0
 1947 0006 826F     		ldr	r2, [r0, #120]
 1948 0008 222A     		cmp	r2, #34
 1949 000a 05D0     		beq	.L139
3580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr++;
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
3585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = NULL;
3599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1950              		.loc 1 3612 0
 1951 000c 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 103


 1952 000e 9369     		ldr	r3, [r2, #24]
 1953              	.LVL138:
 1954 0010 0821     		movs	r1, #8
 1955 0012 0B43     		orrs	r3, r1
 1956 0014 9361     		str	r3, [r2, #24]
 1957              	.LVL139:
 1958              	.L136:
3613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 1959              		.loc 1 3614 0
 1960              		@ sp needed
 1961 0016 10BD     		pop	{r4, pc}
 1962              	.LVL140:
 1963              	.L139:
3581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1964              		.loc 1 3581 0
 1965 0018 0268     		ldr	r2, [r0]
 1966 001a 526A     		ldr	r2, [r2, #36]
 1967              	.LVL141:
3582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1968              		.loc 1 3582 0
 1969 001c DBB2     		uxtb	r3, r3
 1970              	.LVL142:
 1971 001e 1340     		ands	r3, r2
 1972 0020 426D     		ldr	r2, [r0, #84]
 1973              	.LVL143:
 1974 0022 1370     		strb	r3, [r2]
 1975              	.LVL144:
3583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
 1976              		.loc 1 3583 0
 1977 0024 436D     		ldr	r3, [r0, #84]
 1978 0026 0133     		adds	r3, r3, #1
 1979 0028 4365     		str	r3, [r0, #84]
3584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1980              		.loc 1 3584 0
 1981 002a 5A22     		movs	r2, #90
 1982 002c 835A     		ldrh	r3, [r0, r2]
 1983 002e 013B     		subs	r3, r3, #1
 1984 0030 9BB2     		uxth	r3, r3
 1985 0032 8352     		strh	r3, [r0, r2]
3586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 1986              		.loc 1 3586 0
 1987 0034 835A     		ldrh	r3, [r0, r2]
 1988 0036 9BB2     		uxth	r3, r3
 1989 0038 002B     		cmp	r3, #0
 1990 003a ECD1     		bne	.L136
3589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1991              		.loc 1 3589 0
 1992 003c 0268     		ldr	r2, [r0]
 1993 003e 1368     		ldr	r3, [r2]
 1994 0040 0749     		ldr	r1, .L140
 1995 0042 0B40     		ands	r3, r1
 1996 0044 1360     		str	r3, [r2]
3592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 1997              		.loc 1 3592 0
 1998 0046 0268     		ldr	r2, [r0]
 1999 0048 9368     		ldr	r3, [r2, #8]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 104


 2000 004a 2331     		adds	r1, r1, #35
 2001 004c FF31     		adds	r1, r1, #255
 2002 004e 8B43     		bics	r3, r1
 2003 0050 9360     		str	r3, [r2, #8]
3595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2004              		.loc 1 3595 0
 2005 0052 2023     		movs	r3, #32
 2006 0054 8367     		str	r3, [r0, #120]
3598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2007              		.loc 1 3598 0
 2008 0056 0023     		movs	r3, #0
 2009 0058 0366     		str	r3, [r0, #96]
3605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2010              		.loc 1 3605 0
 2011 005a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2012              	.LVL145:
 2013 005e DAE7     		b	.L136
 2014              	.L141:
 2015              		.align	2
 2016              	.L140:
 2017 0060 DFFEFFFF 		.word	-289
 2018              		.cfi_endproc
 2019              	.LFE92:
 2021              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 2022              		.align	1
 2023              		.syntax unified
 2024              		.code	16
 2025              		.thumb_func
 2026              		.fpu softvfp
 2028              	UART_RxISR_16BIT:
 2029              	.LFB93:
3615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
3617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @param huart UART handle.
3621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   * @retval None
3622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   */
3623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** {
 2030              		.loc 1 3624 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              	.LVL146:
 2035 0000 10B5     		push	{r4, lr}
 2036              	.LCFI14:
 2037              		.cfi_def_cfa_offset 8
 2038              		.cfi_offset 4, -8
 2039              		.cfi_offset 14, -4
3625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t *tmp;
3626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 2040              		.loc 1 3626 0
 2041 0002 5C23     		movs	r3, #92
 2042 0004 C25A     		ldrh	r2, [r0, r3]
 2043              	.LVL147:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 105


3627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint16_t  uhdata;
3628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2044              		.loc 1 3630 0
 2045 0006 836F     		ldr	r3, [r0, #120]
 2046 0008 222B     		cmp	r3, #34
 2047 000a 05D0     		beq	.L145
3631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
3637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
3640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /* Clear RxISR function pointer */
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxISR = NULL;
3651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
3652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #else
3656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3659:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
3660:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   else
3662:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
3663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2048              		.loc 1 3664 0
 2049 000c 0268     		ldr	r2, [r0]
 2050              	.LVL148:
 2051 000e 9369     		ldr	r3, [r2, #24]
 2052 0010 0821     		movs	r1, #8
 2053 0012 0B43     		orrs	r3, r1
 2054 0014 9361     		str	r3, [r2, #24]
 2055              	.LVL149:
 2056              	.L142:
3665:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
3666:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 2057              		.loc 1 3666 0
 2058              		@ sp needed
 2059 0016 10BD     		pop	{r4, pc}
 2060              	.LVL150:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 106


 2061              	.L145:
3632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 2062              		.loc 1 3632 0
 2063 0018 0368     		ldr	r3, [r0]
 2064 001a 5B6A     		ldr	r3, [r3, #36]
 2065              	.LVL151:
3634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 2066              		.loc 1 3634 0
 2067 001c 1340     		ands	r3, r2
 2068              	.LVL152:
 2069 001e 426D     		ldr	r2, [r0, #84]
 2070              	.LVL153:
 2071 0020 1380     		strh	r3, [r2]
 2072              	.LVL154:
3635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount--;
 2073              		.loc 1 3635 0
 2074 0022 436D     		ldr	r3, [r0, #84]
 2075 0024 0233     		adds	r3, r3, #2
 2076 0026 4365     		str	r3, [r0, #84]
3636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2077              		.loc 1 3636 0
 2078 0028 5A22     		movs	r2, #90
 2079              	.LVL155:
 2080 002a 835A     		ldrh	r3, [r0, r2]
 2081 002c 013B     		subs	r3, r3, #1
 2082 002e 9BB2     		uxth	r3, r3
 2083 0030 8352     		strh	r3, [r0, r2]
3638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2084              		.loc 1 3638 0
 2085 0032 835A     		ldrh	r3, [r0, r2]
 2086 0034 9BB2     		uxth	r3, r3
 2087 0036 002B     		cmp	r3, #0
 2088 0038 EDD1     		bne	.L142
3641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2089              		.loc 1 3641 0
 2090 003a 0268     		ldr	r2, [r0]
 2091 003c 1368     		ldr	r3, [r2]
 2092 003e 0849     		ldr	r1, .L146
 2093 0040 0B40     		ands	r3, r1
 2094 0042 1360     		str	r3, [r2]
3644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2095              		.loc 1 3644 0
 2096 0044 0268     		ldr	r2, [r0]
 2097 0046 9368     		ldr	r3, [r2, #8]
 2098 0048 2331     		adds	r1, r1, #35
 2099 004a FF31     		adds	r1, r1, #255
 2100 004c 8B43     		bics	r3, r1
 2101 004e 9360     		str	r3, [r2, #8]
3647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2102              		.loc 1 3647 0
 2103 0050 2023     		movs	r3, #32
 2104 0052 8367     		str	r3, [r0, #120]
3650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2105              		.loc 1 3650 0
 2106 0054 0023     		movs	r3, #0
 2107 0056 0366     		str	r3, [r0, #96]
3657:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 107


 2108              		.loc 1 3657 0
 2109 0058 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2110              	.LVL156:
 2111 005c DBE7     		b	.L142
 2112              	.L147:
 2113 005e C046     		.align	2
 2114              	.L146:
 2115 0060 DFFEFFFF 		.word	-289
 2116              		.cfi_endproc
 2117              	.LFE93:
 2119              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 2120              		.align	1
 2121              		.syntax unified
 2122              		.code	16
 2123              		.thumb_func
 2124              		.fpu softvfp
 2126              	UART_DMAReceiveCplt:
 2127              	.LFB81:
3212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2128              		.loc 1 3212 0
 2129              		.cfi_startproc
 2130              		@ args = 0, pretend = 0, frame = 0
 2131              		@ frame_needed = 0, uses_anonymous_args = 0
 2132              	.LVL157:
 2133 0000 10B5     		push	{r4, lr}
 2134              	.LCFI15:
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 4, -8
 2137              		.cfi_offset 14, -4
3213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2138              		.loc 1 3213 0
 2139 0002 836A     		ldr	r3, [r0, #40]
 2140              	.LVL158:
3216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2141              		.loc 1 3216 0
 2142 0004 0268     		ldr	r2, [r0]
 2143 0006 1268     		ldr	r2, [r2]
 2144 0008 9206     		lsls	r2, r2, #26
 2145 000a 14D4     		bmi	.L149
3218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2146              		.loc 1 3218 0
 2147 000c 5A22     		movs	r2, #90
 2148 000e 0021     		movs	r1, #0
 2149 0010 9952     		strh	r1, [r3, r2]
3221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2150              		.loc 1 3221 0
 2151 0012 1968     		ldr	r1, [r3]
 2152 0014 0A68     		ldr	r2, [r1]
 2153 0016 0A48     		ldr	r0, .L150
 2154              	.LVL159:
 2155 0018 0240     		ands	r2, r0
 2156 001a 0A60     		str	r2, [r1]
3222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2157              		.loc 1 3222 0
 2158 001c 1968     		ldr	r1, [r3]
 2159 001e 8A68     		ldr	r2, [r1, #8]
 2160 0020 0330     		adds	r0, r0, #3
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 108


 2161 0022 FF30     		adds	r0, r0, #255
 2162 0024 8243     		bics	r2, r0
 2163 0026 8A60     		str	r2, [r1, #8]
3226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2164              		.loc 1 3226 0
 2165 0028 1968     		ldr	r1, [r3]
 2166 002a 8A68     		ldr	r2, [r1, #8]
 2167 002c 3F30     		adds	r0, r0, #63
 2168 002e 8243     		bics	r2, r0
 2169 0030 8A60     		str	r2, [r1, #8]
3229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2170              		.loc 1 3229 0
 2171 0032 2022     		movs	r2, #32
 2172 0034 9A67     		str	r2, [r3, #120]
 2173              	.L149:
3237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2174              		.loc 1 3237 0
 2175 0036 1800     		movs	r0, r3
 2176 0038 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 2177              	.LVL160:
3239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2178              		.loc 1 3239 0
 2179              		@ sp needed
 2180 003c 10BD     		pop	{r4, pc}
 2181              	.L151:
 2182 003e C046     		.align	2
 2183              	.L150:
 2184 0040 FFFEFFFF 		.word	-257
 2185              		.cfi_endproc
 2186              	.LFE81:
 2188              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 2189              		.align	1
 2190              		.weak	HAL_UART_RxHalfCpltCallback
 2191              		.syntax unified
 2192              		.code	16
 2193              		.thumb_func
 2194              		.fpu softvfp
 2196              	HAL_UART_RxHalfCpltCallback:
 2197              	.LFB60:
2441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2198              		.loc 1 2441 0
 2199              		.cfi_startproc
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 0, uses_anonymous_args = 0
 2202              		@ link register save eliminated.
 2203              	.LVL161:
2448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2204              		.loc 1 2448 0
 2205              		@ sp needed
 2206 0000 7047     		bx	lr
 2207              		.cfi_endproc
 2208              	.LFE60:
 2210              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 2211              		.align	1
 2212              		.syntax unified
 2213              		.code	16
 2214              		.thumb_func
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 109


 2215              		.fpu softvfp
 2217              	UART_DMARxHalfCplt:
 2218              	.LFB82:
3247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2219              		.loc 1 3247 0
 2220              		.cfi_startproc
 2221              		@ args = 0, pretend = 0, frame = 0
 2222              		@ frame_needed = 0, uses_anonymous_args = 0
 2223              	.LVL162:
 2224 0000 10B5     		push	{r4, lr}
 2225              	.LCFI16:
 2226              		.cfi_def_cfa_offset 8
 2227              		.cfi_offset 4, -8
 2228              		.cfi_offset 14, -4
3248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2229              		.loc 1 3248 0
 2230 0002 806A     		ldr	r0, [r0, #40]
 2231              	.LVL163:
3255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2232              		.loc 1 3255 0
 2233 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 2234              	.LVL164:
3257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2235              		.loc 1 3257 0
 2236              		@ sp needed
 2237 0008 10BD     		pop	{r4, pc}
 2238              		.cfi_endproc
 2239              	.LFE82:
 2241              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 2242              		.align	1
 2243              		.weak	HAL_UART_ErrorCallback
 2244              		.syntax unified
 2245              		.code	16
 2246              		.thumb_func
 2247              		.fpu softvfp
 2249              	HAL_UART_ErrorCallback:
 2250              	.LFB61:
2456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2251              		.loc 1 2456 0
 2252              		.cfi_startproc
 2253              		@ args = 0, pretend = 0, frame = 0
 2254              		@ frame_needed = 0, uses_anonymous_args = 0
 2255              		@ link register save eliminated.
 2256              	.LVL165:
2463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2257              		.loc 1 2463 0
 2258              		@ sp needed
 2259 0000 7047     		bx	lr
 2260              		.cfi_endproc
 2261              	.LFE61:
 2263              		.section	.text.UART_DMAError,"ax",%progbits
 2264              		.align	1
 2265              		.syntax unified
 2266              		.code	16
 2267              		.thumb_func
 2268              		.fpu softvfp
 2270              	UART_DMAError:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 110


 2271              	.LFB83:
3265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2272              		.loc 1 3265 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 0
 2275              		@ frame_needed = 0, uses_anonymous_args = 0
 2276              	.LVL166:
 2277 0000 70B5     		push	{r4, r5, r6, lr}
 2278              	.LCFI17:
 2279              		.cfi_def_cfa_offset 16
 2280              		.cfi_offset 4, -16
 2281              		.cfi_offset 5, -12
 2282              		.cfi_offset 6, -8
 2283              		.cfi_offset 14, -4
3266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2284              		.loc 1 3266 0
 2285 0002 846A     		ldr	r4, [r0, #40]
 2286              	.LVL167:
3268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2287              		.loc 1 3268 0
 2288 0004 626F     		ldr	r2, [r4, #116]
 2289              	.LVL168:
3269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2290              		.loc 1 3269 0
 2291 0006 A56F     		ldr	r5, [r4, #120]
 2292              	.LVL169:
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2293              		.loc 1 3272 0
 2294 0008 2368     		ldr	r3, [r4]
 2295 000a 9B68     		ldr	r3, [r3, #8]
 2296 000c 1B06     		lsls	r3, r3, #24
 2297 000e 01D5     		bpl	.L156
3272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2298              		.loc 1 3272 0 is_stmt 0 discriminator 1
 2299 0010 212A     		cmp	r2, #33
 2300 0012 0DD0     		beq	.L158
 2301              	.LVL170:
 2302              	.L156:
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2303              		.loc 1 3280 0 is_stmt 1
 2304 0014 2368     		ldr	r3, [r4]
 2305 0016 9B68     		ldr	r3, [r3, #8]
 2306 0018 5B06     		lsls	r3, r3, #25
 2307 001a 01D5     		bpl	.L157
3280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2308              		.loc 1 3280 0 is_stmt 0 discriminator 1
 2309 001c 222D     		cmp	r5, #34
 2310 001e 0ED0     		beq	.L159
 2311              	.L157:
3287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2312              		.loc 1 3287 0 is_stmt 1
 2313 0020 E36F     		ldr	r3, [r4, #124]
 2314 0022 1022     		movs	r2, #16
 2315 0024 1343     		orrs	r3, r2
 2316 0026 E367     		str	r3, [r4, #124]
3294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2317              		.loc 1 3294 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 111


 2318 0028 2000     		movs	r0, r4
 2319 002a FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2320              	.LVL171:
3296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2321              		.loc 1 3296 0
 2322              		@ sp needed
 2323              	.LVL172:
 2324              	.LVL173:
 2325 002e 70BD     		pop	{r4, r5, r6, pc}
 2326              	.LVL174:
 2327              	.L158:
3275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2328              		.loc 1 3275 0
 2329 0030 5223     		movs	r3, #82
 2330 0032 0022     		movs	r2, #0
 2331              	.LVL175:
 2332 0034 E252     		strh	r2, [r4, r3]
3276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2333              		.loc 1 3276 0
 2334 0036 2000     		movs	r0, r4
 2335              	.LVL176:
 2336 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 2337              	.LVL177:
 2338 003c EAE7     		b	.L156
 2339              	.L159:
3283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2340              		.loc 1 3283 0
 2341 003e 5A23     		movs	r3, #90
 2342 0040 0022     		movs	r2, #0
 2343 0042 E252     		strh	r2, [r4, r3]
3284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2344              		.loc 1 3284 0
 2345 0044 2000     		movs	r0, r4
 2346 0046 FFF7FEFF 		bl	UART_EndRxTransfer
 2347              	.LVL178:
 2348 004a E9E7     		b	.L157
 2349              		.cfi_endproc
 2350              	.LFE83:
 2352              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2353              		.align	1
 2354              		.global	HAL_UART_IRQHandler
 2355              		.syntax unified
 2356              		.code	16
 2357              		.thumb_func
 2358              		.fpu softvfp
 2360              	HAL_UART_IRQHandler:
 2361              	.LFB56:
2203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2362              		.loc 1 2203 0
 2363              		.cfi_startproc
 2364              		@ args = 0, pretend = 0, frame = 0
 2365              		@ frame_needed = 0, uses_anonymous_args = 0
 2366              	.LVL179:
 2367 0000 70B5     		push	{r4, r5, r6, lr}
 2368              	.LCFI18:
 2369              		.cfi_def_cfa_offset 16
 2370              		.cfi_offset 4, -16
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 112


 2371              		.cfi_offset 5, -12
 2372              		.cfi_offset 6, -8
 2373              		.cfi_offset 14, -4
 2374 0002 0400     		movs	r4, r0
2204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2375              		.loc 1 2204 0
 2376 0004 0168     		ldr	r1, [r0]
 2377 0006 CB69     		ldr	r3, [r1, #28]
 2378              	.LVL180:
2205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2379              		.loc 1 2205 0
 2380 0008 0868     		ldr	r0, [r1]
 2381              	.LVL181:
2206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2382              		.loc 1 2206 0
 2383 000a 8D68     		ldr	r5, [r1, #8]
 2384              	.LVL182:
2212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   if (errorflags == 0U)
 2385              		.loc 1 2212 0
 2386 000c 0F22     		movs	r2, #15
 2387 000e 1A40     		ands	r2, r3
 2388              	.LVL183:
2213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2389              		.loc 1 2213 0
 2390 0010 0AD1     		bne	.L161
2216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2391              		.loc 1 2216 0
 2392 0012 9E06     		lsls	r6, r3, #26
 2393 0014 08D5     		bpl	.L161
2217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2394              		.loc 1 2217 0
 2395 0016 8606     		lsls	r6, r0, #26
 2396 0018 06D5     		bpl	.L161
2219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2397              		.loc 1 2219 0
 2398 001a 236E     		ldr	r3, [r4, #96]
 2399              	.LVL184:
 2400 001c 002B     		cmp	r3, #0
 2401 001e 00D1     		bne	.LCB2085
 2402 0020 89E0     		b	.L160	@long jump
 2403              	.LCB2085:
2221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2404              		.loc 1 2221 0
 2405 0022 2000     		movs	r0, r4
 2406              	.LVL185:
 2407 0024 9847     		blx	r3
 2408              	.LVL186:
 2409 0026 86E0     		b	.L160
 2410              	.LVL187:
 2411              	.L161:
2228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2412              		.loc 1 2228 0
 2413 0028 002A     		cmp	r2, #0
 2414 002a 6BD0     		beq	.L163
2229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2415              		.loc 1 2229 0
 2416 002c 0122     		movs	r2, #1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 113


 2417              	.LVL188:
 2418 002e 2A40     		ands	r2, r5
 2419 0030 03D1     		bne	.L164
2230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2420              		.loc 1 2230 0
 2421 0032 9026     		movs	r6, #144
 2422 0034 7600     		lsls	r6, r6, #1
 2423 0036 3042     		tst	r0, r6
 2424 0038 64D0     		beq	.L163
 2425              	.L164:
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2426              		.loc 1 2233 0
 2427 003a DD07     		lsls	r5, r3, #31
 2428 003c 06D5     		bpl	.L165
 2429              	.LVL189:
2233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2430              		.loc 1 2233 0 is_stmt 0 discriminator 1
 2431 003e C505     		lsls	r5, r0, #23
 2432 0040 04D5     		bpl	.L165
2235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2433              		.loc 1 2235 0 is_stmt 1
 2434 0042 0125     		movs	r5, #1
 2435 0044 0D62     		str	r5, [r1, #32]
2237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2436              		.loc 1 2237 0
 2437 0046 E16F     		ldr	r1, [r4, #124]
 2438 0048 2943     		orrs	r1, r5
 2439 004a E167     		str	r1, [r4, #124]
 2440              	.L165:
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2441              		.loc 1 2241 0
 2442 004c 9907     		lsls	r1, r3, #30
 2443 004e 08D5     		bpl	.L166
2241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2444              		.loc 1 2241 0 is_stmt 0 discriminator 1
 2445 0050 002A     		cmp	r2, #0
 2446 0052 06D0     		beq	.L166
2243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2447              		.loc 1 2243 0 is_stmt 1
 2448 0054 2168     		ldr	r1, [r4]
 2449 0056 0225     		movs	r5, #2
 2450 0058 0D62     		str	r5, [r1, #32]
2245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2451              		.loc 1 2245 0
 2452 005a E16F     		ldr	r1, [r4, #124]
 2453 005c 0235     		adds	r5, r5, #2
 2454 005e 2943     		orrs	r1, r5
 2455 0060 E167     		str	r1, [r4, #124]
 2456              	.L166:
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2457              		.loc 1 2249 0
 2458 0062 5907     		lsls	r1, r3, #29
 2459 0064 08D5     		bpl	.L167
2249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2460              		.loc 1 2249 0 is_stmt 0 discriminator 1
 2461 0066 002A     		cmp	r2, #0
 2462 0068 06D0     		beq	.L167
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 114


2251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2463              		.loc 1 2251 0 is_stmt 1
 2464 006a 2168     		ldr	r1, [r4]
 2465 006c 0425     		movs	r5, #4
 2466 006e 0D62     		str	r5, [r1, #32]
2253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2467              		.loc 1 2253 0
 2468 0070 E16F     		ldr	r1, [r4, #124]
 2469 0072 023D     		subs	r5, r5, #2
 2470 0074 2943     		orrs	r1, r5
 2471 0076 E167     		str	r1, [r4, #124]
 2472              	.L167:
2257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2473              		.loc 1 2257 0
 2474 0078 1907     		lsls	r1, r3, #28
 2475 007a 09D5     		bpl	.L168
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2476              		.loc 1 2258 0
 2477 007c 8106     		lsls	r1, r0, #26
 2478 007e 01D4     		bmi	.L169
2258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2479              		.loc 1 2258 0 is_stmt 0 discriminator 1
 2480 0080 002A     		cmp	r2, #0
 2481 0082 05D0     		beq	.L168
 2482              	.L169:
2261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2483              		.loc 1 2261 0 is_stmt 1
 2484 0084 2268     		ldr	r2, [r4]
 2485 0086 0821     		movs	r1, #8
 2486 0088 1162     		str	r1, [r2, #32]
2263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2487              		.loc 1 2263 0
 2488 008a E26F     		ldr	r2, [r4, #124]
 2489 008c 0A43     		orrs	r2, r1
 2490 008e E267     		str	r2, [r4, #124]
 2491              	.L168:
2267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2492              		.loc 1 2267 0
 2493 0090 E26F     		ldr	r2, [r4, #124]
 2494 0092 002A     		cmp	r2, #0
 2495 0094 4FD0     		beq	.L160
2270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2496              		.loc 1 2270 0
 2497 0096 9B06     		lsls	r3, r3, #26
 2498 0098 06D5     		bpl	.L170
 2499              	.LVL190:
2271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2500              		.loc 1 2271 0
 2501 009a 8306     		lsls	r3, r0, #26
 2502 009c 04D5     		bpl	.L170
2273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 2503              		.loc 1 2273 0
 2504 009e 236E     		ldr	r3, [r4, #96]
 2505 00a0 002B     		cmp	r3, #0
 2506 00a2 01D0     		beq	.L170
2275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 2507              		.loc 1 2275 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 115


 2508 00a4 2000     		movs	r0, r4
 2509              	.LVL191:
 2510 00a6 9847     		blx	r3
 2511              	.LVL192:
 2512              	.L170:
2281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2513              		.loc 1 2281 0
 2514 00a8 E26F     		ldr	r2, [r4, #124]
 2515              	.LVL193:
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 2516              		.loc 1 2282 0
 2517 00aa 2368     		ldr	r3, [r4]
 2518 00ac 9B68     		ldr	r3, [r3, #8]
 2519 00ae 5B06     		lsls	r3, r3, #25
 2520 00b0 01D4     		bmi	.L171
2282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 2521              		.loc 1 2282 0 is_stmt 0 discriminator 1
 2522 00b2 1307     		lsls	r3, r2, #28
 2523 00b4 20D5     		bpl	.L172
 2524              	.L171:
2288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2525              		.loc 1 2288 0 is_stmt 1
 2526 00b6 2000     		movs	r0, r4
 2527 00b8 FFF7FEFF 		bl	UART_EndRxTransfer
 2528              	.LVL194:
2291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 2529              		.loc 1 2291 0
 2530 00bc 2368     		ldr	r3, [r4]
 2531 00be 9A68     		ldr	r2, [r3, #8]
 2532 00c0 5206     		lsls	r2, r2, #25
 2533 00c2 15D5     		bpl	.L173
2293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2534              		.loc 1 2293 0
 2535 00c4 9A68     		ldr	r2, [r3, #8]
 2536 00c6 4021     		movs	r1, #64
 2537 00c8 8A43     		bics	r2, r1
 2538 00ca 9A60     		str	r2, [r3, #8]
2296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           {
 2539              		.loc 1 2296 0
 2540 00cc E36E     		ldr	r3, [r4, #108]
 2541 00ce 002B     		cmp	r3, #0
 2542 00d0 0AD0     		beq	.L174
2300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2543              		.loc 1 2300 0
 2544 00d2 1B4A     		ldr	r2, .L179
 2545 00d4 9A63     		str	r2, [r3, #56]
2303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             {
 2546              		.loc 1 2303 0
 2547 00d6 E06E     		ldr	r0, [r4, #108]
 2548 00d8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2549              	.LVL195:
 2550 00dc 0028     		cmp	r0, #0
 2551 00de 2AD0     		beq	.L160
2306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****             }
 2552              		.loc 1 2306 0
 2553 00e0 E06E     		ldr	r0, [r4, #108]
 2554 00e2 836B     		ldr	r3, [r0, #56]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 116


 2555 00e4 9847     		blx	r3
 2556              	.LVL196:
 2557 00e6 26E0     		b	.L160
 2558              	.L174:
2317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2559              		.loc 1 2317 0
 2560 00e8 2000     		movs	r0, r4
 2561 00ea FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2562              	.LVL197:
 2563 00ee 22E0     		b	.L160
 2564              	.L173:
2330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2565              		.loc 1 2330 0
 2566 00f0 2000     		movs	r0, r4
 2567 00f2 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2568              	.LVL198:
 2569 00f6 1EE0     		b	.L160
 2570              	.LVL199:
 2571              	.L172:
2343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2572              		.loc 1 2343 0
 2573 00f8 2000     		movs	r0, r4
 2574 00fa FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2575              	.LVL200:
2345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2576              		.loc 1 2345 0
 2577 00fe 0023     		movs	r3, #0
 2578 0100 E367     		str	r3, [r4, #124]
 2579 0102 18E0     		b	.L160
 2580              	.LVL201:
 2581              	.L163:
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2582              		.loc 1 2353 0
 2583 0104 DA02     		lsls	r2, r3, #11
 2584 0106 01D5     		bpl	.L175
2353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2585              		.loc 1 2353 0 is_stmt 0 discriminator 1
 2586 0108 6A02     		lsls	r2, r5, #9
 2587 010a 09D4     		bmi	.L177
 2588              	.L175:
2371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2589              		.loc 1 2371 0 is_stmt 1
 2590 010c 1A06     		lsls	r2, r3, #24
 2591 010e 0ED5     		bpl	.L176
2372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2592              		.loc 1 2372 0
 2593 0110 0206     		lsls	r2, r0, #24
 2594 0112 0CD5     		bpl	.L176
2374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2595              		.loc 1 2374 0
 2596 0114 636E     		ldr	r3, [r4, #100]
 2597              	.LVL202:
 2598 0116 002B     		cmp	r3, #0
 2599 0118 0DD0     		beq	.L160
2376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2600              		.loc 1 2376 0
 2601 011a 2000     		movs	r0, r4
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 117


 2602              	.LVL203:
 2603 011c 9847     		blx	r3
 2604              	.LVL204:
 2605 011e 0AE0     		b	.L160
 2606              	.LVL205:
 2607              	.L177:
2355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2608              		.loc 1 2355 0
 2609 0120 8023     		movs	r3, #128
 2610              	.LVL206:
 2611 0122 5B03     		lsls	r3, r3, #13
 2612 0124 0B62     		str	r3, [r1, #32]
2365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2613              		.loc 1 2365 0
 2614 0126 2000     		movs	r0, r4
 2615              	.LVL207:
 2616 0128 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2617              	.LVL208:
2367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2618              		.loc 1 2367 0
 2619 012c 03E0     		b	.L160
 2620              	.LVL209:
 2621              	.L176:
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2622              		.loc 1 2382 0
 2623 012e 5B06     		lsls	r3, r3, #25
 2624 0130 01D5     		bpl	.L160
 2625              	.LVL210:
2382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2626              		.loc 1 2382 0 is_stmt 0 discriminator 1
 2627 0132 4306     		lsls	r3, r0, #25
 2628 0134 00D4     		bmi	.L178
 2629              	.LVL211:
 2630              	.L160:
2388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2631              		.loc 1 2388 0 is_stmt 1
 2632              		@ sp needed
 2633              	.LVL212:
 2634 0136 70BD     		pop	{r4, r5, r6, pc}
 2635              	.LVL213:
 2636              	.L178:
2384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     return;
 2637              		.loc 1 2384 0
 2638 0138 2000     		movs	r0, r4
 2639              	.LVL214:
 2640 013a FFF7FEFF 		bl	UART_EndTransmit_IT
 2641              	.LVL215:
2385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 2642              		.loc 1 2385 0
 2643 013e FAE7     		b	.L160
 2644              	.L180:
 2645              		.align	2
 2646              	.L179:
 2647 0140 00000000 		.word	UART_DMAAbortOnError
 2648              		.cfi_endproc
 2649              	.LFE56:
 2651              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 118


 2652              		.align	1
 2653              		.syntax unified
 2654              		.code	16
 2655              		.thumb_func
 2656              		.fpu softvfp
 2658              	UART_DMAAbortOnError:
 2659              	.LFB84:
3305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2660              		.loc 1 3305 0
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 0, uses_anonymous_args = 0
 2664              	.LVL216:
 2665 0000 10B5     		push	{r4, lr}
 2666              	.LCFI19:
 2667              		.cfi_def_cfa_offset 8
 2668              		.cfi_offset 4, -8
 2669              		.cfi_offset 14, -4
3306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2670              		.loc 1 3306 0
 2671 0002 806A     		ldr	r0, [r0, #40]
 2672              	.LVL217:
3307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2673              		.loc 1 3307 0
 2674 0004 0023     		movs	r3, #0
 2675 0006 5A22     		movs	r2, #90
 2676 0008 8352     		strh	r3, [r0, r2]
3308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2677              		.loc 1 3308 0
 2678 000a 083A     		subs	r2, r2, #8
 2679 000c 8352     		strh	r3, [r0, r2]
3315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2680              		.loc 1 3315 0
 2681 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2682              	.LVL218:
3317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2683              		.loc 1 3317 0
 2684              		@ sp needed
 2685 0012 10BD     		pop	{r4, pc}
 2686              		.cfi_endproc
 2687              	.LFE84:
 2689              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2690              		.align	1
 2691              		.weak	HAL_UART_AbortCpltCallback
 2692              		.syntax unified
 2693              		.code	16
 2694              		.thumb_func
 2695              		.fpu softvfp
 2697              	HAL_UART_AbortCpltCallback:
 2698              	.LFB62:
2471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2699              		.loc 1 2471 0
 2700              		.cfi_startproc
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 0, uses_anonymous_args = 0
 2703              		@ link register save eliminated.
 2704              	.LVL219:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 119


2478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2705              		.loc 1 2478 0
 2706              		@ sp needed
 2707 0000 7047     		bx	lr
 2708              		.cfi_endproc
 2709              	.LFE62:
 2711              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2712              		.align	1
 2713              		.global	HAL_UART_Abort_IT
 2714              		.syntax unified
 2715              		.code	16
 2716              		.thumb_func
 2717              		.fpu softvfp
 2719              	HAL_UART_Abort_IT:
 2720              	.LFB53:
1896:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2721              		.loc 1 1896 0
 2722              		.cfi_startproc
 2723              		@ args = 0, pretend = 0, frame = 0
 2724              		@ frame_needed = 0, uses_anonymous_args = 0
 2725              	.LVL220:
 2726 0000 10B5     		push	{r4, lr}
 2727              	.LCFI20:
 2728              		.cfi_def_cfa_offset 8
 2729              		.cfi_offset 4, -8
 2730              		.cfi_offset 14, -4
 2731 0002 0400     		movs	r4, r0
 2732              	.LVL221:
1900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2733              		.loc 1 1900 0
 2734 0004 0268     		ldr	r2, [r0]
 2735 0006 1368     		ldr	r3, [r2]
 2736 0008 3349     		ldr	r1, .L195
 2737 000a 0B40     		ands	r3, r1
 2738 000c 1360     		str	r3, [r2]
1901:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2739              		.loc 1 1901 0
 2740 000e 0268     		ldr	r2, [r0]
 2741 0010 9368     		ldr	r3, [r2, #8]
 2742 0012 E331     		adds	r1, r1, #227
 2743 0014 FF31     		adds	r1, r1, #255
 2744 0016 8B43     		bics	r3, r1
 2745 0018 9360     		str	r3, [r2, #8]
1906:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2746              		.loc 1 1906 0
 2747 001a 836E     		ldr	r3, [r0, #104]
 2748 001c 002B     		cmp	r3, #0
 2749 001e 05D0     		beq	.L184
1910:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2750              		.loc 1 1910 0
 2751 0020 0268     		ldr	r2, [r0]
 2752 0022 9268     		ldr	r2, [r2, #8]
 2753 0024 1206     		lsls	r2, r2, #24
 2754 0026 1ED5     		bpl	.L185
1912:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2755              		.loc 1 1912 0
 2756 0028 2C4A     		ldr	r2, .L195+4
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 120


 2757 002a 9A63     		str	r2, [r3, #56]
 2758              	.L184:
1920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2759              		.loc 1 1920 0
 2760 002c E36E     		ldr	r3, [r4, #108]
 2761 002e 002B     		cmp	r3, #0
 2762 0030 05D0     		beq	.L186
1924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2763              		.loc 1 1924 0
 2764 0032 2268     		ldr	r2, [r4]
 2765 0034 9268     		ldr	r2, [r2, #8]
 2766 0036 5206     		lsls	r2, r2, #25
 2767 0038 18D5     		bpl	.L187
1926:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2768              		.loc 1 1926 0
 2769 003a 294A     		ldr	r2, .L195+8
 2770 003c 9A63     		str	r2, [r3, #56]
 2771              	.L186:
1935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2772              		.loc 1 1935 0
 2773 003e 2368     		ldr	r3, [r4]
 2774 0040 9A68     		ldr	r2, [r3, #8]
 2775 0042 1206     		lsls	r2, r2, #24
 2776 0044 15D5     		bpl	.L192
1938:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2777              		.loc 1 1938 0
 2778 0046 9A68     		ldr	r2, [r3, #8]
 2779 0048 8021     		movs	r1, #128
 2780 004a 8A43     		bics	r2, r1
 2781 004c 9A60     		str	r2, [r3, #8]
1941:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2782              		.loc 1 1941 0
 2783 004e A06E     		ldr	r0, [r4, #104]
 2784              	.LVL222:
 2785 0050 0028     		cmp	r0, #0
 2786 0052 38D0     		beq	.L193
1947:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2787              		.loc 1 1947 0
 2788 0054 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2789              	.LVL223:
 2790 0058 0028     		cmp	r0, #0
 2791 005a 36D0     		beq	.L194
1949:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2792              		.loc 1 1949 0
 2793 005c A36E     		ldr	r3, [r4, #104]
 2794 005e 0022     		movs	r2, #0
 2795 0060 9A63     		str	r2, [r3, #56]
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2796              		.loc 1 1897 0
 2797 0062 0121     		movs	r1, #1
 2798 0064 06E0     		b	.L188
 2799              	.LVL224:
 2800              	.L185:
1916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2801              		.loc 1 1916 0
 2802 0066 0022     		movs	r2, #0
 2803 0068 9A63     		str	r2, [r3, #56]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 121


 2804 006a DFE7     		b	.L184
 2805              	.L187:
1930:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 2806              		.loc 1 1930 0
 2807 006c 0022     		movs	r2, #0
 2808 006e 9A63     		str	r2, [r3, #56]
 2809 0070 E5E7     		b	.L186
 2810              	.L192:
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2811              		.loc 1 1897 0
 2812 0072 0121     		movs	r1, #1
 2813              	.LVL225:
 2814              	.L188:
1959:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2815              		.loc 1 1959 0
 2816 0074 2368     		ldr	r3, [r4]
 2817 0076 9A68     		ldr	r2, [r3, #8]
 2818 0078 5206     		lsls	r2, r2, #25
 2819 007a 28D5     		bpl	.L189
1961:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2820              		.loc 1 1961 0
 2821 007c 9A68     		ldr	r2, [r3, #8]
 2822 007e 4020     		movs	r0, #64
 2823 0080 8243     		bics	r2, r0
 2824 0082 9A60     		str	r2, [r3, #8]
1964:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2825              		.loc 1 1964 0
 2826 0084 E06E     		ldr	r0, [r4, #108]
 2827 0086 0028     		cmp	r0, #0
 2828 0088 21D0     		beq	.L189
1970:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 2829              		.loc 1 1970 0
 2830 008a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2831              	.LVL226:
 2832 008e 0028     		cmp	r0, #0
 2833 0090 1FD0     		beq	.L190
1972:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         abortcplt = 1U;
 2834              		.loc 1 1972 0
 2835 0092 E36E     		ldr	r3, [r4, #108]
 2836 0094 0022     		movs	r2, #0
 2837 0096 9A63     		str	r2, [r3, #56]
 2838              	.LVL227:
 2839              	.L191:
1986:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2840              		.loc 1 1986 0
 2841 0098 0023     		movs	r3, #0
 2842 009a 5222     		movs	r2, #82
 2843 009c A352     		strh	r3, [r4, r2]
1987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2844              		.loc 1 1987 0
 2845 009e 0832     		adds	r2, r2, #8
 2846 00a0 A352     		strh	r3, [r4, r2]
1990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxISR = NULL;
 2847              		.loc 1 1990 0
 2848 00a2 2366     		str	r3, [r4, #96]
1991:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2849              		.loc 1 1991 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 122


 2850 00a4 6366     		str	r3, [r4, #100]
1994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2851              		.loc 1 1994 0
 2852 00a6 E367     		str	r3, [r4, #124]
1997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2853              		.loc 1 1997 0
 2854 00a8 2368     		ldr	r3, [r4]
 2855 00aa 4B3A     		subs	r2, r2, #75
 2856 00ac 1A62     		str	r2, [r3, #32]
2001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2857              		.loc 1 2001 0
 2858 00ae 2268     		ldr	r2, [r4]
 2859 00b0 9369     		ldr	r3, [r2, #24]
 2860 00b2 0821     		movs	r1, #8
 2861 00b4 0B43     		orrs	r3, r1
 2862 00b6 9361     		str	r3, [r2, #24]
2004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2863              		.loc 1 2004 0
 2864 00b8 2023     		movs	r3, #32
 2865 00ba 6367     		str	r3, [r4, #116]
2005:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2866              		.loc 1 2005 0
 2867 00bc A367     		str	r3, [r4, #120]
2013:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2868              		.loc 1 2013 0
 2869 00be 2000     		movs	r0, r4
 2870 00c0 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2871              	.LVL228:
 2872 00c4 05E0     		b	.L190
 2873              	.LVL229:
 2874              	.L193:
1897:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2875              		.loc 1 1897 0
 2876 00c6 0121     		movs	r1, #1
 2877 00c8 D4E7     		b	.L188
 2878              	.L194:
1953:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 2879              		.loc 1 1953 0
 2880 00ca 0021     		movs	r1, #0
 2881 00cc D2E7     		b	.L188
 2882              	.LVL230:
 2883              	.L189:
1983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2884              		.loc 1 1983 0
 2885 00ce 0129     		cmp	r1, #1
 2886 00d0 E2D0     		beq	.L191
 2887              	.LVL231:
 2888              	.L190:
2018:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2889              		.loc 1 2018 0
 2890 00d2 0020     		movs	r0, #0
 2891              		@ sp needed
 2892              	.LVL232:
 2893 00d4 10BD     		pop	{r4, pc}
 2894              	.L196:
 2895 00d6 C046     		.align	2
 2896              	.L195:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 123


 2897 00d8 1FFEFFFF 		.word	-481
 2898 00dc 00000000 		.word	UART_DMATxAbortCallback
 2899 00e0 00000000 		.word	UART_DMARxAbortCallback
 2900              		.cfi_endproc
 2901              	.LFE53:
 2903              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2904              		.align	1
 2905              		.syntax unified
 2906              		.code	16
 2907              		.thumb_func
 2908              		.fpu softvfp
 2910              	UART_DMARxAbortCallback:
 2911              	.LFB86:
3377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2912              		.loc 1 3377 0
 2913              		.cfi_startproc
 2914              		@ args = 0, pretend = 0, frame = 0
 2915              		@ frame_needed = 0, uses_anonymous_args = 0
 2916              	.LVL233:
 2917 0000 10B5     		push	{r4, lr}
 2918              	.LCFI21:
 2919              		.cfi_def_cfa_offset 8
 2920              		.cfi_offset 4, -8
 2921              		.cfi_offset 14, -4
3378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2922              		.loc 1 3378 0
 2923 0002 806A     		ldr	r0, [r0, #40]
 2924              	.LVL234:
3380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2925              		.loc 1 3380 0
 2926 0004 C36E     		ldr	r3, [r0, #108]
 2927 0006 0022     		movs	r2, #0
 2928 0008 9A63     		str	r2, [r3, #56]
3383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 2929              		.loc 1 3383 0
 2930 000a 836E     		ldr	r3, [r0, #104]
 2931 000c 002B     		cmp	r3, #0
 2932 000e 03D0     		beq	.L198
3385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 2933              		.loc 1 3385 0
 2934 0010 9B6B     		ldr	r3, [r3, #56]
 2935 0012 002B     		cmp	r3, #0
 2936 0014 00D0     		beq	.L198
 2937              	.LVL235:
 2938              	.L197:
3416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2939              		.loc 1 3416 0
 2940              		@ sp needed
 2941 0016 10BD     		pop	{r4, pc}
 2942              	.LVL236:
 2943              	.L198:
3392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2944              		.loc 1 3392 0
 2945 0018 0023     		movs	r3, #0
 2946 001a 5222     		movs	r2, #82
 2947 001c 8352     		strh	r3, [r0, r2]
3393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 124


 2948              		.loc 1 3393 0
 2949 001e 0832     		adds	r2, r2, #8
 2950 0020 8352     		strh	r3, [r0, r2]
3396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2951              		.loc 1 3396 0
 2952 0022 C367     		str	r3, [r0, #124]
3399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2953              		.loc 1 3399 0
 2954 0024 0368     		ldr	r3, [r0]
 2955 0026 4B3A     		subs	r2, r2, #75
 2956 0028 1A62     		str	r2, [r3, #32]
3402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2957              		.loc 1 3402 0
 2958 002a 0268     		ldr	r2, [r0]
 2959 002c 9369     		ldr	r3, [r2, #24]
 2960 002e 0821     		movs	r1, #8
 2961 0030 0B43     		orrs	r3, r1
 2962 0032 9361     		str	r3, [r2, #24]
3405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2963              		.loc 1 3405 0
 2964 0034 2023     		movs	r3, #32
 2965 0036 4367     		str	r3, [r0, #116]
3406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2966              		.loc 1 3406 0
 2967 0038 8367     		str	r3, [r0, #120]
3414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2968              		.loc 1 3414 0
 2969 003a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2970              	.LVL237:
 2971 003e EAE7     		b	.L197
 2972              		.cfi_endproc
 2973              	.LFE86:
 2975              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2976              		.align	1
 2977              		.syntax unified
 2978              		.code	16
 2979              		.thumb_func
 2980              		.fpu softvfp
 2982              	UART_DMATxAbortCallback:
 2983              	.LFB85:
3328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2984              		.loc 1 3328 0
 2985              		.cfi_startproc
 2986              		@ args = 0, pretend = 0, frame = 0
 2987              		@ frame_needed = 0, uses_anonymous_args = 0
 2988              	.LVL238:
 2989 0000 10B5     		push	{r4, lr}
 2990              	.LCFI22:
 2991              		.cfi_def_cfa_offset 8
 2992              		.cfi_offset 4, -8
 2993              		.cfi_offset 14, -4
3329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2994              		.loc 1 3329 0
 2995 0002 806A     		ldr	r0, [r0, #40]
 2996              	.LVL239:
3331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 2997              		.loc 1 3331 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 125


 2998 0004 836E     		ldr	r3, [r0, #104]
 2999 0006 0022     		movs	r2, #0
 3000 0008 9A63     		str	r2, [r3, #56]
3334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3001              		.loc 1 3334 0
 3002 000a C36E     		ldr	r3, [r0, #108]
 3003 000c 002B     		cmp	r3, #0
 3004 000e 03D0     		beq	.L201
3336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3005              		.loc 1 3336 0
 3006 0010 9B6B     		ldr	r3, [r3, #56]
 3007 0012 002B     		cmp	r3, #0
 3008 0014 00D0     		beq	.L201
 3009              	.LVL240:
 3010              	.L200:
3365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3011              		.loc 1 3365 0
 3012              		@ sp needed
 3013 0016 10BD     		pop	{r4, pc}
 3014              	.LVL241:
 3015              	.L201:
3343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxXferCount = 0U;
 3016              		.loc 1 3343 0
 3017 0018 0023     		movs	r3, #0
 3018 001a 5222     		movs	r2, #82
 3019 001c 8352     		strh	r3, [r0, r2]
3344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3020              		.loc 1 3344 0
 3021 001e 0832     		adds	r2, r2, #8
 3022 0020 8352     		strh	r3, [r0, r2]
3347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3023              		.loc 1 3347 0
 3024 0022 C367     		str	r3, [r0, #124]
3350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3025              		.loc 1 3350 0
 3026 0024 0368     		ldr	r3, [r0]
 3027 0026 4B3A     		subs	r2, r2, #75
 3028 0028 1A62     		str	r2, [r3, #32]
3354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3029              		.loc 1 3354 0
 3030 002a 2023     		movs	r3, #32
 3031 002c 4367     		str	r3, [r0, #116]
3355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3032              		.loc 1 3355 0
 3033 002e 8367     		str	r3, [r0, #120]
3363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3034              		.loc 1 3363 0
 3035 0030 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3036              	.LVL242:
 3037 0034 EFE7     		b	.L200
 3038              		.cfi_endproc
 3039              	.LFE85:
 3041              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 3042              		.align	1
 3043              		.weak	HAL_UART_AbortTransmitCpltCallback
 3044              		.syntax unified
 3045              		.code	16
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 126


 3046              		.thumb_func
 3047              		.fpu softvfp
 3049              	HAL_UART_AbortTransmitCpltCallback:
 3050              	.LFB63:
2486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3051              		.loc 1 2486 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 0
 3054              		@ frame_needed = 0, uses_anonymous_args = 0
 3055              		@ link register save eliminated.
 3056              	.LVL243:
2493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3057              		.loc 1 2493 0
 3058              		@ sp needed
 3059 0000 7047     		bx	lr
 3060              		.cfi_endproc
 3061              	.LFE63:
 3063              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3064              		.align	1
 3065              		.global	HAL_UART_AbortTransmit_IT
 3066              		.syntax unified
 3067              		.code	16
 3068              		.thumb_func
 3069              		.fpu softvfp
 3071              	HAL_UART_AbortTransmit_IT:
 3072              	.LFB54:
2035:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable interrupts */
 3073              		.loc 1 2035 0
 3074              		.cfi_startproc
 3075              		@ args = 0, pretend = 0, frame = 0
 3076              		@ frame_needed = 0, uses_anonymous_args = 0
 3077              	.LVL244:
 3078 0000 10B5     		push	{r4, lr}
 3079              	.LCFI23:
 3080              		.cfi_def_cfa_offset 8
 3081              		.cfi_offset 4, -8
 3082              		.cfi_offset 14, -4
 3083 0002 0400     		movs	r4, r0
2037:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3084              		.loc 1 2037 0
 3085 0004 0268     		ldr	r2, [r0]
 3086 0006 1368     		ldr	r3, [r2]
 3087 0008 C021     		movs	r1, #192
 3088 000a 8B43     		bics	r3, r1
 3089 000c 1360     		str	r3, [r2]
2040:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3090              		.loc 1 2040 0
 3091 000e 0368     		ldr	r3, [r0]
 3092 0010 9A68     		ldr	r2, [r3, #8]
 3093 0012 1206     		lsls	r2, r2, #24
 3094 0014 1BD5     		bpl	.L205
2042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3095              		.loc 1 2042 0
 3096 0016 9A68     		ldr	r2, [r3, #8]
 3097 0018 4039     		subs	r1, r1, #64
 3098 001a 8A43     		bics	r2, r1
 3099 001c 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 127


2045:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3100              		.loc 1 2045 0
 3101 001e 836E     		ldr	r3, [r0, #104]
 3102 0020 002B     		cmp	r3, #0
 3103 0022 0BD0     		beq	.L206
2049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3104              		.loc 1 2049 0
 3105 0024 0E4A     		ldr	r2, .L208
 3106 0026 9A63     		str	r2, [r3, #56]
2052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3107              		.loc 1 2052 0
 3108 0028 806E     		ldr	r0, [r0, #104]
 3109              	.LVL245:
 3110 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3111              	.LVL246:
 3112 002e 0028     		cmp	r0, #0
 3113 0030 02D0     		beq	.L207
2055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3114              		.loc 1 2055 0
 3115 0032 A06E     		ldr	r0, [r4, #104]
 3116 0034 836B     		ldr	r3, [r0, #56]
 3117 0036 9847     		blx	r3
 3118              	.LVL247:
 3119              	.L207:
2102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3120              		.loc 1 2102 0
 3121 0038 0020     		movs	r0, #0
 3122              		@ sp needed
 3123              	.LVL248:
 3124 003a 10BD     		pop	{r4, pc}
 3125              	.LVL249:
 3126              	.L206:
2061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3127              		.loc 1 2061 0
 3128 003c 0023     		movs	r3, #0
 3129 003e 5222     		movs	r2, #82
 3130 0040 8352     		strh	r3, [r0, r2]
2064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3131              		.loc 1 2064 0
 3132 0042 4366     		str	r3, [r0, #100]
2067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3133              		.loc 1 2067 0
 3134 0044 2033     		adds	r3, r3, #32
 3135 0046 4367     		str	r3, [r0, #116]
2075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3136              		.loc 1 2075 0
 3137 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3138              	.LVL250:
 3139 004c F4E7     		b	.L207
 3140              	.LVL251:
 3141              	.L205:
2082:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3142              		.loc 1 2082 0
 3143 004e 0023     		movs	r3, #0
 3144 0050 5222     		movs	r2, #82
 3145 0052 8352     		strh	r3, [r0, r2]
2085:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 128


 3146              		.loc 1 2085 0
 3147 0054 4366     		str	r3, [r0, #100]
2089:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3148              		.loc 1 2089 0
 3149 0056 2033     		adds	r3, r3, #32
 3150 0058 4367     		str	r3, [r0, #116]
2097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3151              		.loc 1 2097 0
 3152 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3153              	.LVL252:
 3154 005e EBE7     		b	.L207
 3155              	.L209:
 3156              		.align	2
 3157              	.L208:
 3158 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 3159              		.cfi_endproc
 3160              	.LFE54:
 3162              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 3163              		.align	1
 3164              		.syntax unified
 3165              		.code	16
 3166              		.thumb_func
 3167              		.fpu softvfp
 3169              	UART_DMATxOnlyAbortCallback:
 3170              	.LFB87:
3428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 3171              		.loc 1 3428 0
 3172              		.cfi_startproc
 3173              		@ args = 0, pretend = 0, frame = 0
 3174              		@ frame_needed = 0, uses_anonymous_args = 0
 3175              	.LVL253:
 3176 0000 10B5     		push	{r4, lr}
 3177              	.LCFI24:
 3178              		.cfi_def_cfa_offset 8
 3179              		.cfi_offset 4, -8
 3180              		.cfi_offset 14, -4
3429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3181              		.loc 1 3429 0
 3182 0002 806A     		ldr	r0, [r0, #40]
 3183              	.LVL254:
3431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3184              		.loc 1 3431 0
 3185 0004 5223     		movs	r3, #82
 3186 0006 0022     		movs	r2, #0
 3187 0008 C252     		strh	r2, [r0, r3]
3435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3188              		.loc 1 3435 0
 3189 000a 323B     		subs	r3, r3, #50
 3190 000c 4367     		str	r3, [r0, #116]
3443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3191              		.loc 1 3443 0
 3192 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3193              	.LVL255:
3445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3194              		.loc 1 3445 0
 3195              		@ sp needed
 3196 0012 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 129


 3197              		.cfi_endproc
 3198              	.LFE87:
 3200              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 3201              		.align	1
 3202              		.weak	HAL_UART_AbortReceiveCpltCallback
 3203              		.syntax unified
 3204              		.code	16
 3205              		.thumb_func
 3206              		.fpu softvfp
 3208              	HAL_UART_AbortReceiveCpltCallback:
 3209              	.LFB64:
2501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 3210              		.loc 1 2501 0
 3211              		.cfi_startproc
 3212              		@ args = 0, pretend = 0, frame = 0
 3213              		@ frame_needed = 0, uses_anonymous_args = 0
 3214              		@ link register save eliminated.
 3215              	.LVL256:
2508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3216              		.loc 1 2508 0
 3217              		@ sp needed
 3218 0000 7047     		bx	lr
 3219              		.cfi_endproc
 3220              	.LFE64:
 3222              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3223              		.align	1
 3224              		.global	HAL_UART_AbortReceive_IT
 3225              		.syntax unified
 3226              		.code	16
 3227              		.thumb_func
 3228              		.fpu softvfp
 3230              	HAL_UART_AbortReceive_IT:
 3231              	.LFB55:
2119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 3232              		.loc 1 2119 0
 3233              		.cfi_startproc
 3234              		@ args = 0, pretend = 0, frame = 0
 3235              		@ frame_needed = 0, uses_anonymous_args = 0
 3236              	.LVL257:
 3237 0000 10B5     		push	{r4, lr}
 3238              	.LCFI25:
 3239              		.cfi_def_cfa_offset 8
 3240              		.cfi_offset 4, -8
 3241              		.cfi_offset 14, -4
 3242 0002 0400     		movs	r4, r0
2121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3243              		.loc 1 2121 0
 3244 0004 0268     		ldr	r2, [r0]
 3245 0006 1368     		ldr	r3, [r2]
 3246 0008 1D49     		ldr	r1, .L216
 3247 000a 0B40     		ands	r3, r1
 3248 000c 1360     		str	r3, [r2]
2122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3249              		.loc 1 2122 0
 3250 000e 0268     		ldr	r2, [r0]
 3251 0010 9368     		ldr	r3, [r2, #8]
 3252 0012 2331     		adds	r1, r1, #35
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 130


 3253 0014 FF31     		adds	r1, r1, #255
 3254 0016 8B43     		bics	r3, r1
 3255 0018 9360     		str	r3, [r2, #8]
2125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3256              		.loc 1 2125 0
 3257 001a 0368     		ldr	r3, [r0]
 3258 001c 9A68     		ldr	r2, [r3, #8]
 3259 001e 5206     		lsls	r2, r2, #25
 3260 0020 23D5     		bpl	.L213
2127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3261              		.loc 1 2127 0
 3262 0022 9A68     		ldr	r2, [r3, #8]
 3263 0024 3F31     		adds	r1, r1, #63
 3264 0026 8A43     		bics	r2, r1
 3265 0028 9A60     		str	r2, [r3, #8]
2130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3266              		.loc 1 2130 0
 3267 002a C36E     		ldr	r3, [r0, #108]
 3268 002c 002B     		cmp	r3, #0
 3269 002e 0BD0     		beq	.L214
2134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3270              		.loc 1 2134 0
 3271 0030 144A     		ldr	r2, .L216+4
 3272 0032 9A63     		str	r2, [r3, #56]
2137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3273              		.loc 1 2137 0
 3274 0034 C06E     		ldr	r0, [r0, #108]
 3275              	.LVL258:
 3276 0036 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3277              	.LVL259:
 3278 003a 0028     		cmp	r0, #0
 3279 003c 02D0     		beq	.L215
2140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 3280              		.loc 1 2140 0
 3281 003e E06E     		ldr	r0, [r4, #108]
 3282 0040 836B     		ldr	r3, [r0, #56]
 3283 0042 9847     		blx	r3
 3284              	.LVL260:
 3285              	.L215:
2195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3286              		.loc 1 2195 0
 3287 0044 0020     		movs	r0, #0
 3288              		@ sp needed
 3289              	.LVL261:
 3290 0046 10BD     		pop	{r4, pc}
 3291              	.LVL262:
 3292              	.L214:
2146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3293              		.loc 1 2146 0
 3294 0048 0023     		movs	r3, #0
 3295 004a 5A22     		movs	r2, #90
 3296 004c 8352     		strh	r3, [r0, r2]
2149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3297              		.loc 1 2149 0
 3298 004e 4365     		str	r3, [r0, #84]
2152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3299              		.loc 1 2152 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 131


 3300 0050 0368     		ldr	r3, [r0]
 3301 0052 4B3A     		subs	r2, r2, #75
 3302 0054 1A62     		str	r2, [r3, #32]
2155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3303              		.loc 1 2155 0
 3304 0056 0268     		ldr	r2, [r0]
 3305 0058 9369     		ldr	r3, [r2, #24]
 3306 005a 0821     		movs	r1, #8
 3307 005c 0B43     		orrs	r3, r1
 3308 005e 9361     		str	r3, [r2, #24]
2158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3309              		.loc 1 2158 0
 3310 0060 2023     		movs	r3, #32
 3311 0062 8367     		str	r3, [r0, #120]
2166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3312              		.loc 1 2166 0
 3313 0064 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3314              	.LVL263:
 3315 0068 ECE7     		b	.L215
 3316              	.LVL264:
 3317              	.L213:
2173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3318              		.loc 1 2173 0
 3319 006a 0022     		movs	r2, #0
 3320 006c 5A21     		movs	r1, #90
 3321 006e 4252     		strh	r2, [r0, r1]
2176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3322              		.loc 1 2176 0
 3323 0070 4265     		str	r2, [r0, #84]
2179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3324              		.loc 1 2179 0
 3325 0072 0F32     		adds	r2, r2, #15
 3326 0074 1A62     		str	r2, [r3, #32]
2182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3327              		.loc 1 2182 0
 3328 0076 2023     		movs	r3, #32
 3329 0078 8367     		str	r3, [r0, #120]
2190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3330              		.loc 1 2190 0
 3331 007a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3332              	.LVL265:
 3333 007e E1E7     		b	.L215
 3334              	.L217:
 3335              		.align	2
 3336              	.L216:
 3337 0080 DFFEFFFF 		.word	-289
 3338 0084 00000000 		.word	UART_DMARxOnlyAbortCallback
 3339              		.cfi_endproc
 3340              	.LFE55:
 3342              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 3343              		.align	1
 3344              		.syntax unified
 3345              		.code	16
 3346              		.thumb_func
 3347              		.fpu softvfp
 3349              	UART_DMARxOnlyAbortCallback:
 3350              	.LFB88:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 132


3456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 3351              		.loc 1 3456 0
 3352              		.cfi_startproc
 3353              		@ args = 0, pretend = 0, frame = 0
 3354              		@ frame_needed = 0, uses_anonymous_args = 0
 3355              	.LVL266:
 3356 0000 10B5     		push	{r4, lr}
 3357              	.LCFI26:
 3358              		.cfi_def_cfa_offset 8
 3359              		.cfi_offset 4, -8
 3360              		.cfi_offset 14, -4
3457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3361              		.loc 1 3457 0
 3362 0002 806A     		ldr	r0, [r0, #40]
 3363              	.LVL267:
3459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3364              		.loc 1 3459 0
 3365 0004 5A23     		movs	r3, #90
 3366 0006 0022     		movs	r2, #0
 3367 0008 C252     		strh	r2, [r0, r3]
3462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3368              		.loc 1 3462 0
 3369 000a 0368     		ldr	r3, [r0]
 3370 000c 0F32     		adds	r2, r2, #15
 3371 000e 1A62     		str	r2, [r3, #32]
3465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3372              		.loc 1 3465 0
 3373 0010 0268     		ldr	r2, [r0]
 3374 0012 9369     		ldr	r3, [r2, #24]
 3375 0014 0821     		movs	r1, #8
 3376 0016 0B43     		orrs	r3, r1
 3377 0018 9361     		str	r3, [r2, #24]
3468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3378              		.loc 1 3468 0
 3379 001a 2023     		movs	r3, #32
 3380 001c 8367     		str	r3, [r0, #120]
3476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3381              		.loc 1 3476 0
 3382 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3383              	.LVL268:
3478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3384              		.loc 1 3478 0
 3385              		@ sp needed
 3386 0022 10BD     		pop	{r4, pc}
 3387              		.cfi_endproc
 3388              	.LFE88:
 3390              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3391              		.align	1
 3392              		.global	HAL_MultiProcessor_EnterMuteMode
 3393              		.syntax unified
 3394              		.code	16
 3395              		.thumb_func
 3396              		.fpu softvfp
 3398              	HAL_MultiProcessor_EnterMuteMode:
 3399              	.LFB67:
2585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3400              		.loc 1 2585 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 133


 3401              		.cfi_startproc
 3402              		@ args = 0, pretend = 0, frame = 0
 3403              		@ frame_needed = 0, uses_anonymous_args = 0
 3404              		@ link register save eliminated.
 3405              	.LVL269:
2586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3406              		.loc 1 2586 0
 3407 0000 0268     		ldr	r2, [r0]
 3408 0002 9369     		ldr	r3, [r2, #24]
 3409 0004 0421     		movs	r1, #4
 3410 0006 0B43     		orrs	r3, r1
 3411 0008 9361     		str	r3, [r2, #24]
2587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3412              		.loc 1 2587 0
 3413              		@ sp needed
 3414 000a 7047     		bx	lr
 3415              		.cfi_endproc
 3416              	.LFE67:
 3418              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3419              		.align	1
 3420              		.global	HAL_HalfDuplex_EnableTransmitter
 3421              		.syntax unified
 3422              		.code	16
 3423              		.thumb_func
 3424              		.fpu softvfp
 3426              	HAL_HalfDuplex_EnableTransmitter:
 3427              	.LFB68:
2595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 3428              		.loc 1 2595 0
 3429              		.cfi_startproc
 3430              		@ args = 0, pretend = 0, frame = 0
 3431              		@ frame_needed = 0, uses_anonymous_args = 0
 3432              	.LVL270:
 3433 0000 10B5     		push	{r4, lr}
 3434              	.LCFI27:
 3435              		.cfi_def_cfa_offset 8
 3436              		.cfi_offset 4, -8
 3437              		.cfi_offset 14, -4
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3438              		.loc 1 2597 0
 3439 0002 7023     		movs	r3, #112
 3440 0004 C35C     		ldrb	r3, [r0, r3]
 3441 0006 012B     		cmp	r3, #1
 3442 0008 14D0     		beq	.L222
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3443              		.loc 1 2597 0 is_stmt 0 discriminator 2
 3444 000a 7022     		movs	r2, #112
 3445 000c 0123     		movs	r3, #1
 3446 000e 8354     		strb	r3, [r0, r2]
2598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3447              		.loc 1 2598 0 is_stmt 1 discriminator 2
 3448 0010 2333     		adds	r3, r3, #35
 3449 0012 4367     		str	r3, [r0, #116]
2601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3450              		.loc 1 2601 0 discriminator 2
 3451 0014 0168     		ldr	r1, [r0]
 3452 0016 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 134


 3453 0018 0C24     		movs	r4, #12
 3454 001a A343     		bics	r3, r4
 3455 001c 0B60     		str	r3, [r1]
2604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3456              		.loc 1 2604 0 discriminator 2
 3457 001e 0168     		ldr	r1, [r0]
 3458 0020 0B68     		ldr	r3, [r1]
 3459 0022 043C     		subs	r4, r4, #4
 3460 0024 2343     		orrs	r3, r4
 3461 0026 0B60     		str	r3, [r1]
2606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3462              		.loc 1 2606 0 discriminator 2
 3463 0028 2023     		movs	r3, #32
 3464 002a 4367     		str	r3, [r0, #116]
2609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3465              		.loc 1 2609 0 discriminator 2
 3466 002c 0023     		movs	r3, #0
 3467 002e 8354     		strb	r3, [r0, r2]
2611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3468              		.loc 1 2611 0 discriminator 2
 3469 0030 0020     		movs	r0, #0
 3470              	.LVL271:
 3471              	.L221:
2612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3472              		.loc 1 2612 0
 3473              		@ sp needed
 3474 0032 10BD     		pop	{r4, pc}
 3475              	.LVL272:
 3476              	.L222:
2597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3477              		.loc 1 2597 0
 3478 0034 0220     		movs	r0, #2
 3479              	.LVL273:
 3480 0036 FCE7     		b	.L221
 3481              		.cfi_endproc
 3482              	.LFE68:
 3484              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3485              		.align	1
 3486              		.global	HAL_HalfDuplex_EnableReceiver
 3487              		.syntax unified
 3488              		.code	16
 3489              		.thumb_func
 3490              		.fpu softvfp
 3492              	HAL_HalfDuplex_EnableReceiver:
 3493              	.LFB69:
2620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 3494              		.loc 1 2620 0
 3495              		.cfi_startproc
 3496              		@ args = 0, pretend = 0, frame = 0
 3497              		@ frame_needed = 0, uses_anonymous_args = 0
 3498              	.LVL274:
 3499 0000 10B5     		push	{r4, lr}
 3500              	.LCFI28:
 3501              		.cfi_def_cfa_offset 8
 3502              		.cfi_offset 4, -8
 3503              		.cfi_offset 14, -4
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 135


 3504              		.loc 1 2622 0
 3505 0002 7023     		movs	r3, #112
 3506 0004 C35C     		ldrb	r3, [r0, r3]
 3507 0006 012B     		cmp	r3, #1
 3508 0008 14D0     		beq	.L225
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3509              		.loc 1 2622 0 is_stmt 0 discriminator 2
 3510 000a 7022     		movs	r2, #112
 3511 000c 0123     		movs	r3, #1
 3512 000e 8354     		strb	r3, [r0, r2]
2623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3513              		.loc 1 2623 0 is_stmt 1 discriminator 2
 3514 0010 2333     		adds	r3, r3, #35
 3515 0012 4367     		str	r3, [r0, #116]
2626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3516              		.loc 1 2626 0 discriminator 2
 3517 0014 0168     		ldr	r1, [r0]
 3518 0016 0B68     		ldr	r3, [r1]
 3519 0018 0C24     		movs	r4, #12
 3520 001a A343     		bics	r3, r4
 3521 001c 0B60     		str	r3, [r1]
2629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3522              		.loc 1 2629 0 discriminator 2
 3523 001e 0168     		ldr	r1, [r0]
 3524 0020 0B68     		ldr	r3, [r1]
 3525 0022 083C     		subs	r4, r4, #8
 3526 0024 2343     		orrs	r3, r4
 3527 0026 0B60     		str	r3, [r1]
2631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3528              		.loc 1 2631 0 discriminator 2
 3529 0028 2023     		movs	r3, #32
 3530 002a 4367     		str	r3, [r0, #116]
2634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3531              		.loc 1 2634 0 discriminator 2
 3532 002c 0023     		movs	r3, #0
 3533 002e 8354     		strb	r3, [r0, r2]
2636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3534              		.loc 1 2636 0 discriminator 2
 3535 0030 0020     		movs	r0, #0
 3536              	.LVL275:
 3537              	.L224:
2637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3538              		.loc 1 2637 0
 3539              		@ sp needed
 3540 0032 10BD     		pop	{r4, pc}
 3541              	.LVL276:
 3542              	.L225:
2622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3543              		.loc 1 2622 0
 3544 0034 0220     		movs	r0, #2
 3545              	.LVL277:
 3546 0036 FCE7     		b	.L224
 3547              		.cfi_endproc
 3548              	.LFE69:
 3550              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3551              		.align	1
 3552              		.global	HAL_LIN_SendBreak
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 136


 3553              		.syntax unified
 3554              		.code	16
 3555              		.thumb_func
 3556              		.fpu softvfp
 3558              	HAL_LIN_SendBreak:
 3559              	.LFB70:
2646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the parameters */
 3560              		.loc 1 2646 0
 3561              		.cfi_startproc
 3562              		@ args = 0, pretend = 0, frame = 0
 3563              		@ frame_needed = 0, uses_anonymous_args = 0
 3564              	.LVL278:
 3565 0000 10B5     		push	{r4, lr}
 3566              	.LCFI29:
 3567              		.cfi_def_cfa_offset 8
 3568              		.cfi_offset 4, -8
 3569              		.cfi_offset 14, -4
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3570              		.loc 1 2651 0
 3571 0002 7023     		movs	r3, #112
 3572 0004 C35C     		ldrb	r3, [r0, r3]
 3573 0006 012B     		cmp	r3, #1
 3574 0008 0FD0     		beq	.L228
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3575              		.loc 1 2651 0 is_stmt 0 discriminator 2
 3576 000a 7022     		movs	r2, #112
 3577 000c 0123     		movs	r3, #1
 3578 000e 8354     		strb	r3, [r0, r2]
2653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3579              		.loc 1 2653 0 is_stmt 1 discriminator 2
 3580 0010 2333     		adds	r3, r3, #35
 3581 0012 4367     		str	r3, [r0, #116]
2656:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3582              		.loc 1 2656 0 discriminator 2
 3583 0014 0168     		ldr	r1, [r0]
 3584 0016 8B69     		ldr	r3, [r1, #24]
 3585 0018 0224     		movs	r4, #2
 3586 001a 2343     		orrs	r3, r4
 3587 001c 8B61     		str	r3, [r1, #24]
2658:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3588              		.loc 1 2658 0 discriminator 2
 3589 001e 2023     		movs	r3, #32
 3590 0020 4367     		str	r3, [r0, #116]
2661:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3591              		.loc 1 2661 0 discriminator 2
 3592 0022 0023     		movs	r3, #0
 3593 0024 8354     		strb	r3, [r0, r2]
2663:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3594              		.loc 1 2663 0 discriminator 2
 3595 0026 0020     		movs	r0, #0
 3596              	.LVL279:
 3597              	.L227:
2664:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3598              		.loc 1 2664 0
 3599              		@ sp needed
 3600 0028 10BD     		pop	{r4, pc}
 3601              	.LVL280:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 137


 3602              	.L228:
2651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3603              		.loc 1 2651 0
 3604 002a 0220     		movs	r0, #2
 3605              	.LVL281:
 3606 002c FCE7     		b	.L227
 3607              		.cfi_endproc
 3608              	.LFE70:
 3610              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3611              		.align	1
 3612              		.global	HAL_UART_GetState
 3613              		.syntax unified
 3614              		.code	16
 3615              		.thumb_func
 3616              		.fpu softvfp
 3618              	HAL_UART_GetState:
 3619              	.LFB71:
2693:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t temp1, temp2;
 3620              		.loc 1 2693 0
 3621              		.cfi_startproc
 3622              		@ args = 0, pretend = 0, frame = 0
 3623              		@ frame_needed = 0, uses_anonymous_args = 0
 3624              		@ link register save eliminated.
 3625              	.LVL282:
2695:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   temp2 = huart->RxState;
 3626              		.loc 1 2695 0
 3627 0000 436F     		ldr	r3, [r0, #116]
 3628              	.LVL283:
2696:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3629              		.loc 1 2696 0
 3630 0002 806F     		ldr	r0, [r0, #120]
 3631              	.LVL284:
2698:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3632              		.loc 1 2698 0
 3633 0004 1843     		orrs	r0, r3
 3634              	.LVL285:
2699:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3635              		.loc 1 2699 0
 3636              		@ sp needed
 3637 0006 7047     		bx	lr
 3638              		.cfi_endproc
 3639              	.LFE71:
 3641              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3642              		.align	1
 3643              		.global	HAL_UART_GetError
 3644              		.syntax unified
 3645              		.code	16
 3646              		.thumb_func
 3647              		.fpu softvfp
 3649              	HAL_UART_GetError:
 3650              	.LFB72:
2708:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   return huart->ErrorCode;
 3651              		.loc 1 2708 0
 3652              		.cfi_startproc
 3653              		@ args = 0, pretend = 0, frame = 0
 3654              		@ frame_needed = 0, uses_anonymous_args = 0
 3655              		@ link register save eliminated.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 138


 3656              	.LVL286:
2709:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 3657              		.loc 1 2709 0
 3658 0000 C06F     		ldr	r0, [r0, #124]
 3659              	.LVL287:
2710:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** /**
 3660              		.loc 1 2710 0
 3661              		@ sp needed
 3662 0002 7047     		bx	lr
 3663              		.cfi_endproc
 3664              	.LFE72:
 3666              		.global	__aeabi_uldivmod
 3667              		.global	__aeabi_uidiv
 3668              		.section	.text.UART_SetConfig,"ax",%progbits
 3669              		.align	1
 3670              		.global	UART_SetConfig
 3671              		.syntax unified
 3672              		.code	16
 3673              		.thumb_func
 3674              		.fpu softvfp
 3676              	UART_SetConfig:
 3677              	.LFB73:
2751:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tmpreg;
 3678              		.loc 1 2751 0
 3679              		.cfi_startproc
 3680              		@ args = 0, pretend = 0, frame = 0
 3681              		@ frame_needed = 0, uses_anonymous_args = 0
 3682              	.LVL288:
 3683 0000 D0B5     		push	{r4, r6, r7, lr}
 3684              	.LCFI30:
 3685              		.cfi_def_cfa_offset 16
 3686              		.cfi_offset 4, -16
 3687              		.cfi_offset 6, -12
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0002 0400     		movs	r4, r0
 3691              	.LVL289:
2762:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3692              		.loc 1 2762 0
 3693 0004 0168     		ldr	r1, [r0]
2784:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3694              		.loc 1 2784 0
 3695 0006 8368     		ldr	r3, [r0, #8]
 3696 0008 0269     		ldr	r2, [r0, #16]
 3697 000a 1343     		orrs	r3, r2
 3698 000c 4269     		ldr	r2, [r0, #20]
 3699 000e 1343     		orrs	r3, r2
 3700 0010 C269     		ldr	r2, [r0, #28]
 3701 0012 1343     		orrs	r3, r2
 3702              	.LVL290:
2785:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3703              		.loc 1 2785 0
 3704 0014 0A68     		ldr	r2, [r1]
 3705 0016 B748     		ldr	r0, .L292
 3706              	.LVL291:
 3707 0018 0240     		ands	r2, r0
 3708 001a 1343     		orrs	r3, r2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 139


 3709              	.LVL292:
 3710 001c 0B60     		str	r3, [r1]
 3711              	.LVL293:
2790:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3712              		.loc 1 2790 0
 3713 001e 2268     		ldr	r2, [r4]
 3714 0020 5368     		ldr	r3, [r2, #4]
 3715 0022 B549     		ldr	r1, .L292+4
 3716 0024 0B40     		ands	r3, r1
 3717 0026 E168     		ldr	r1, [r4, #12]
 3718 0028 0B43     		orrs	r3, r1
 3719 002a 5360     		str	r3, [r2, #4]
2798:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3720              		.loc 1 2798 0
 3721 002c A169     		ldr	r1, [r4, #24]
 3722              	.LVL294:
2800:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3723              		.loc 1 2800 0
 3724 002e 2268     		ldr	r2, [r4]
 3725 0030 B24B     		ldr	r3, .L292+8
 3726 0032 9A42     		cmp	r2, r3
 3727 0034 01D0     		beq	.L232
2802:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 3728              		.loc 1 2802 0
 3729 0036 236A     		ldr	r3, [r4, #32]
 3730 0038 1943     		orrs	r1, r3
 3731              	.LVL295:
 3732              	.L232:
2804:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3733              		.loc 1 2804 0
 3734 003a 9368     		ldr	r3, [r2, #8]
 3735 003c B048     		ldr	r0, .L292+12
 3736 003e 0340     		ands	r3, r0
 3737 0040 0B43     		orrs	r3, r1
 3738 0042 9360     		str	r3, [r2, #8]
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3739              		.loc 1 2808 0
 3740 0044 2268     		ldr	r2, [r4]
 3741 0046 AF4B     		ldr	r3, .L292+16
 3742 0048 9A42     		cmp	r2, r3
 3743 004a 12D0     		beq	.L284
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3744              		.loc 1 2808 0 is_stmt 0 discriminator 2
 3745 004c AB4B     		ldr	r3, .L292+8
 3746 004e 9A42     		cmp	r2, r3
 3747 0050 24D0     		beq	.L285
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3748              		.loc 1 2808 0
 3749 0052 1023     		movs	r3, #16
 3750              	.LVL296:
 3751              	.L238:
2811:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 3752              		.loc 1 2811 0 is_stmt 1
 3753 0054 A949     		ldr	r1, .L292+8
 3754 0056 8A42     		cmp	r2, r1
 3755 0058 40D0     		beq	.L286
2867:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 140


 3756              		.loc 1 2867 0
 3757 005a 8022     		movs	r2, #128
 3758 005c 1202     		lsls	r2, r2, #8
 3759 005e E169     		ldr	r1, [r4, #28]
 3760 0060 9142     		cmp	r1, r2
 3761 0062 76D0     		beq	.L287
2913:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3762              		.loc 1 2913 0
 3763 0064 082B     		cmp	r3, #8
 3764 0066 00D9     		bls	.LCB3257
 3765 0068 32E1     		b	.L282	@long jump
 3766              	.LCB3257:
 3767 006a 9B00     		lsls	r3, r3, #2
 3768              	.LVL297:
 3769 006c A64A     		ldr	r2, .L292+20
 3770 006e D358     		ldr	r3, [r2, r3]
 3771 0070 9F46     		mov	pc, r3
 3772              		.section	.rodata.UART_SetConfig,"a",%progbits
 3773              		.align	2
 3774              	.L264:
 3775 0000 22020000 		.word	.L263
 3776 0004 4E020000 		.word	.L265
 3777 0008 66020000 		.word	.L266
 3778 000c D0020000 		.word	.L282
 3779 0010 9E020000 		.word	.L267
 3780 0014 D0020000 		.word	.L282
 3781 0018 D0020000 		.word	.L282
 3782 001c D0020000 		.word	.L282
 3783 0020 B6020000 		.word	.L268
 3784              		.section	.text.UART_SetConfig
 3785              	.LVL298:
 3786              	.L284:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3787              		.loc 1 2808 0 discriminator 1
 3788 0072 A64B     		ldr	r3, .L292+24
 3789 0074 D96C     		ldr	r1, [r3, #76]
 3790              	.LVL299:
 3791 0076 0C23     		movs	r3, #12
 3792 0078 0B40     		ands	r3, r1
 3793 007a 042B     		cmp	r3, #4
 3794 007c 0AD0     		beq	.L235
 3795 007e 05D9     		bls	.L288
 3796 0080 082B     		cmp	r3, #8
 3797 0082 27D0     		beq	.L270
 3798 0084 0C2B     		cmp	r3, #12
 3799 0086 07D1     		bne	.L234
 3800              	.LVL300:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3801              		.loc 1 2808 0 is_stmt 0 discriminator 7
 3802 0088 0823     		movs	r3, #8
 3803 008a E3E7     		b	.L238
 3804              	.LVL301:
 3805              	.L288:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3806              		.loc 1 2808 0 discriminator 1
 3807 008c 002B     		cmp	r3, #0
 3808 008e 03D1     		bne	.L234
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 141


2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3809              		.loc 1 2808 0
 3810 0090 0023     		movs	r3, #0
 3811 0092 DFE7     		b	.L238
 3812              	.L235:
 3813              	.LVL302:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3814              		.loc 1 2808 0 discriminator 5
 3815 0094 0423     		movs	r3, #4
 3816 0096 DDE7     		b	.L238
 3817              	.LVL303:
 3818              	.L234:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3819              		.loc 1 2808 0 discriminator 3
 3820 0098 1023     		movs	r3, #16
 3821 009a DBE7     		b	.L238
 3822              	.LVL304:
 3823              	.L285:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3824              		.loc 1 2808 0 discriminator 13
 3825 009c 9B4B     		ldr	r3, .L292+24
 3826 009e DB6C     		ldr	r3, [r3, #76]
 3827 00a0 C021     		movs	r1, #192
 3828              	.LVL305:
 3829 00a2 0901     		lsls	r1, r1, #4
 3830 00a4 0B40     		ands	r3, r1
 3831 00a6 8021     		movs	r1, #128
 3832 00a8 C900     		lsls	r1, r1, #3
 3833 00aa 8B42     		cmp	r3, r1
 3834 00ac 0ED0     		beq	.L241
 3835 00ae 09D9     		bls	.L289
 3836 00b0 8021     		movs	r1, #128
 3837 00b2 0901     		lsls	r1, r1, #4
 3838 00b4 8B42     		cmp	r3, r1
 3839 00b6 0FD0     		beq	.L272
 3840 00b8 C021     		movs	r1, #192
 3841 00ba 0901     		lsls	r1, r1, #4
 3842 00bc 8B42     		cmp	r3, r1
 3843 00be 07D1     		bne	.L240
 3844              	.LVL306:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3845              		.loc 1 2808 0 discriminator 19
 3846 00c0 0823     		movs	r3, #8
 3847 00c2 C7E7     		b	.L238
 3848              	.LVL307:
 3849              	.L289:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3850              		.loc 1 2808 0 discriminator 13
 3851 00c4 002B     		cmp	r3, #0
 3852 00c6 03D1     		bne	.L240
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3853              		.loc 1 2808 0
 3854 00c8 0023     		movs	r3, #0
 3855 00ca C3E7     		b	.L238
 3856              	.L241:
 3857              	.LVL308:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 142


 3858              		.loc 1 2808 0 discriminator 17
 3859 00cc 0423     		movs	r3, #4
 3860 00ce C1E7     		b	.L238
 3861              	.LVL309:
 3862              	.L240:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3863              		.loc 1 2808 0 discriminator 15
 3864 00d0 1023     		movs	r3, #16
 3865 00d2 BFE7     		b	.L238
 3866              	.L270:
2808:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3867              		.loc 1 2808 0
 3868 00d4 0223     		movs	r3, #2
 3869 00d6 BDE7     		b	.L238
 3870              	.L272:
 3871 00d8 0223     		movs	r3, #2
 3872 00da BBE7     		b	.L238
 3873              	.LVL310:
 3874              	.L286:
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3875              		.loc 1 2814 0 is_stmt 1
 3876 00dc 022B     		cmp	r3, #2
 3877 00de 2DD0     		beq	.L247
 3878 00e0 07D9     		bls	.L290
 3879 00e2 042B     		cmp	r3, #4
 3880 00e4 30D0     		beq	.L250
 3881 00e6 082B     		cmp	r3, #8
 3882 00e8 00D0     		beq	.LCB3379
 3883 00ea F4E0     		b	.L273	@long jump
 3884              	.LCB3379:
2833:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3885              		.loc 1 2833 0
 3886 00ec 8020     		movs	r0, #128
 3887 00ee 0002     		lsls	r0, r0, #8
 3888 00f0 07E0     		b	.L251
 3889              	.L290:
2814:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3890              		.loc 1 2814 0
 3891 00f2 002B     		cmp	r3, #0
 3892 00f4 00D0     		beq	.LCB3387
 3893 00f6 EEE0     		b	.L273	@long jump
 3894              	.LCB3387:
2817:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3895              		.loc 1 2817 0
 3896 00f8 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3897              	.LVL311:
 3898              	.L252:
2842:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3899              		.loc 1 2842 0
 3900 00fc 0028     		cmp	r0, #0
 3901 00fe 00D1     		bne	.LCB3398
 3902 0100 EBE0     		b	.L291	@long jump
 3903              	.LCB3398:
 3904              	.LVL312:
 3905              	.L251:
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3906              		.loc 1 2845 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 143


 3907 0102 6268     		ldr	r2, [r4, #4]
 3908 0104 5300     		lsls	r3, r2, #1
 3909 0106 9B18     		adds	r3, r3, r2
 3910 0108 8342     		cmp	r3, r0
 3911 010a 00D9     		bls	.LCB3405
 3912 010c E7E0     		b	.L277	@long jump
 3913              	.LCB3405:
2846:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 3914              		.loc 1 2846 0 discriminator 1
 3915 010e 1303     		lsls	r3, r2, #12
2845:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 3916              		.loc 1 2845 0 discriminator 1
 3917 0110 8342     		cmp	r3, r0
 3918 0112 00D2     		bcs	.LCB3408
 3919 0114 E5E0     		b	.L278	@long jump
 3920              	.LCB3408:
2852:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 3921              		.loc 1 2852 0
 3922 0116 070E     		lsrs	r7, r0, #24
 3923 0118 0602     		lsls	r6, r0, #8
 3924 011a 5008     		lsrs	r0, r2, #1
 3925 011c 0021     		movs	r1, #0
 3926 011e 8019     		adds	r0, r0, r6
 3927 0120 7941     		adcs	r1, r1, r7
 3928 0122 0023     		movs	r3, #0
 3929 0124 FFF7FEFF 		bl	__aeabi_uldivmod
 3930              	.LVL313:
2855:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3931              		.loc 1 2855 0
 3932 0128 794B     		ldr	r3, .L292+28
 3933 012a C218     		adds	r2, r0, r3
 3934 012c 794B     		ldr	r3, .L292+32
 3935 012e 9A42     		cmp	r2, r3
 3936 0130 00D9     		bls	.LCB3425
 3937 0132 D8E0     		b	.L279	@long jump
 3938              	.LCB3425:
2857:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3939              		.loc 1 2857 0
 3940 0134 2368     		ldr	r3, [r4]
 3941 0136 D860     		str	r0, [r3, #12]
 3942 0138 0020     		movs	r0, #0
 3943              	.LVL314:
 3944 013a 84E0     		b	.L246
 3945              	.LVL315:
 3946              	.L247:
2820:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 3947              		.loc 1 2820 0
 3948 013c 734B     		ldr	r3, .L292+24
 3949              	.LVL316:
 3950 013e 1B68     		ldr	r3, [r3]
 3951 0140 DB06     		lsls	r3, r3, #27
 3952 0142 04D4     		bmi	.L275
2826:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3953              		.loc 1 2826 0
 3954 0144 7448     		ldr	r0, .L292+36
 3955 0146 DCE7     		b	.L251
 3956              	.LVL317:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 144


 3957              	.L250:
2830:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3958              		.loc 1 2830 0
 3959 0148 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3960              	.LVL318:
2831:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3961              		.loc 1 2831 0
 3962 014c D6E7     		b	.L252
 3963              	.LVL319:
 3964              	.L275:
2822:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 3965              		.loc 1 2822 0
 3966 014e 7348     		ldr	r0, .L292+40
 3967 0150 D7E7     		b	.L251
 3968              	.LVL320:
 3969              	.L287:
2869:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 3970              		.loc 1 2869 0
 3971 0152 082B     		cmp	r3, #8
 3972 0154 62D8     		bhi	.L280
 3973 0156 9B00     		lsls	r3, r3, #2
 3974              	.LVL321:
 3975 0158 714A     		ldr	r2, .L292+44
 3976 015a D358     		ldr	r3, [r2, r3]
 3977 015c 9F46     		mov	pc, r3
 3978              		.section	.rodata.UART_SetConfig
 3979              		.align	2
 3980              	.L256:
 3981 0024 5E010000 		.word	.L255
 3982 0028 96010000 		.word	.L257
 3983 002c B0010000 		.word	.L258
 3984 0030 1C020000 		.word	.L280
 3985 0034 E8010000 		.word	.L259
 3986 0038 1C020000 		.word	.L280
 3987 003c 1C020000 		.word	.L280
 3988 0040 1C020000 		.word	.L280
 3989 0044 02020000 		.word	.L260
 3990              		.section	.text.UART_SetConfig
 3991              	.L255:
2872:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 3992              		.loc 1 2872 0
 3993 015e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3994              	.LVL322:
 3995 0162 4000     		lsls	r0, r0, #1
 3996 0164 6368     		ldr	r3, [r4, #4]
 3997 0166 5B08     		lsrs	r3, r3, #1
 3998 0168 C018     		adds	r0, r0, r3
 3999 016a 6168     		ldr	r1, [r4, #4]
 4000 016c FFF7FEFF 		bl	__aeabi_uidiv
 4001              	.LVL323:
 4002 0170 0304     		lsls	r3, r0, #16
 4003 0172 1B0C     		lsrs	r3, r3, #16
 4004              	.LVL324:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4005              		.loc 1 2756 0
 4006 0174 0020     		movs	r0, #0
 4007              	.LVL325:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 145


 4008              	.L254:
2900:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4009              		.loc 1 2900 0
 4010 0176 6B49     		ldr	r1, .L292+48
 4011 0178 1A00     		movs	r2, r3
 4012 017a 103A     		subs	r2, r2, #16
 4013 017c 8A42     		cmp	r2, r1
 4014 017e 00D9     		bls	.LCB3505
 4015 0180 B3E0     		b	.L281	@long jump
 4016              	.LCB3505:
2902:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 4017              		.loc 1 2902 0
 4018 0182 0F22     		movs	r2, #15
 4019 0184 1900     		movs	r1, r3
 4020 0186 9143     		bics	r1, r2
 4021              	.LVL326:
2903:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 4022              		.loc 1 2903 0
 4023 0188 5B08     		lsrs	r3, r3, #1
 4024              	.LVL327:
 4025 018a 083A     		subs	r2, r2, #8
 4026 018c 1340     		ands	r3, r2
 4027 018e 0B43     		orrs	r3, r1
 4028              	.LVL328:
2904:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4029              		.loc 1 2904 0
 4030 0190 2268     		ldr	r2, [r4]
 4031 0192 D360     		str	r3, [r2, #12]
 4032 0194 57E0     		b	.L246
 4033              	.LVL329:
 4034              	.L257:
2875:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4035              		.loc 1 2875 0
 4036 0196 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4037              	.LVL330:
 4038 019a 4000     		lsls	r0, r0, #1
 4039 019c 6368     		ldr	r3, [r4, #4]
 4040 019e 5B08     		lsrs	r3, r3, #1
 4041 01a0 C018     		adds	r0, r0, r3
 4042 01a2 6168     		ldr	r1, [r4, #4]
 4043 01a4 FFF7FEFF 		bl	__aeabi_uidiv
 4044              	.LVL331:
 4045 01a8 0304     		lsls	r3, r0, #16
 4046 01aa 1B0C     		lsrs	r3, r3, #16
 4047              	.LVL332:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4048              		.loc 1 2756 0
 4049 01ac 0020     		movs	r0, #0
2876:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4050              		.loc 1 2876 0
 4051 01ae E2E7     		b	.L254
 4052              	.LVL333:
 4053              	.L258:
2878:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 4054              		.loc 1 2878 0
 4055 01b0 564B     		ldr	r3, .L292+24
 4056 01b2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 146


 4057 01b4 DB06     		lsls	r3, r3, #27
 4058 01b6 0BD5     		bpl	.L261
2880:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4059              		.loc 1 2880 0
 4060 01b8 6368     		ldr	r3, [r4, #4]
 4061 01ba 5808     		lsrs	r0, r3, #1
 4062 01bc 5A4B     		ldr	r3, .L292+52
 4063 01be 9C46     		mov	ip, r3
 4064 01c0 6044     		add	r0, r0, ip
 4065 01c2 6168     		ldr	r1, [r4, #4]
 4066 01c4 FFF7FEFF 		bl	__aeabi_uidiv
 4067              	.LVL334:
 4068 01c8 0304     		lsls	r3, r0, #16
 4069 01ca 1B0C     		lsrs	r3, r3, #16
 4070              	.LVL335:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4071              		.loc 1 2756 0
 4072 01cc 0020     		movs	r0, #0
 4073 01ce D2E7     		b	.L254
 4074              	.LVL336:
 4075              	.L261:
2884:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4076              		.loc 1 2884 0
 4077 01d0 6368     		ldr	r3, [r4, #4]
 4078 01d2 5808     		lsrs	r0, r3, #1
 4079 01d4 554B     		ldr	r3, .L292+56
 4080 01d6 9C46     		mov	ip, r3
 4081 01d8 6044     		add	r0, r0, ip
 4082 01da 6168     		ldr	r1, [r4, #4]
 4083 01dc FFF7FEFF 		bl	__aeabi_uidiv
 4084              	.LVL337:
 4085 01e0 0304     		lsls	r3, r0, #16
 4086 01e2 1B0C     		lsrs	r3, r3, #16
 4087              	.LVL338:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4088              		.loc 1 2756 0
 4089 01e4 0020     		movs	r0, #0
 4090 01e6 C6E7     		b	.L254
 4091              	.LVL339:
 4092              	.L259:
2888:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4093              		.loc 1 2888 0
 4094 01e8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4095              	.LVL340:
 4096 01ec 4000     		lsls	r0, r0, #1
 4097 01ee 6368     		ldr	r3, [r4, #4]
 4098 01f0 5B08     		lsrs	r3, r3, #1
 4099 01f2 C018     		adds	r0, r0, r3
 4100 01f4 6168     		ldr	r1, [r4, #4]
 4101 01f6 FFF7FEFF 		bl	__aeabi_uidiv
 4102              	.LVL341:
 4103 01fa 0304     		lsls	r3, r0, #16
 4104 01fc 1B0C     		lsrs	r3, r3, #16
 4105              	.LVL342:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4106              		.loc 1 2756 0
 4107 01fe 0020     		movs	r0, #0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 147


2889:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4108              		.loc 1 2889 0
 4109 0200 B9E7     		b	.L254
 4110              	.LVL343:
 4111              	.L260:
2891:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4112              		.loc 1 2891 0
 4113 0202 6368     		ldr	r3, [r4, #4]
 4114 0204 5808     		lsrs	r0, r3, #1
 4115 0206 8023     		movs	r3, #128
 4116 0208 5B02     		lsls	r3, r3, #9
 4117 020a 9C46     		mov	ip, r3
 4118 020c 6044     		add	r0, r0, ip
 4119 020e 6168     		ldr	r1, [r4, #4]
 4120 0210 FFF7FEFF 		bl	__aeabi_uidiv
 4121              	.LVL344:
 4122 0214 0304     		lsls	r3, r0, #16
 4123 0216 1B0C     		lsrs	r3, r3, #16
 4124              	.LVL345:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4125              		.loc 1 2756 0
 4126 0218 0020     		movs	r0, #0
2892:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 4127              		.loc 1 2892 0
 4128 021a ACE7     		b	.L254
 4129              	.LVL346:
 4130              	.L280:
2895:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4131              		.loc 1 2895 0
 4132 021c 0120     		movs	r0, #1
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4133              		.loc 1 2755 0
 4134 021e 0023     		movs	r3, #0
 4135 0220 A9E7     		b	.L254
 4136              	.L263:
2916:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4137              		.loc 1 2916 0
 4138 0222 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 4139              	.LVL347:
 4140 0226 6368     		ldr	r3, [r4, #4]
 4141 0228 5B08     		lsrs	r3, r3, #1
 4142 022a C018     		adds	r0, r0, r3
 4143 022c 6168     		ldr	r1, [r4, #4]
 4144 022e FFF7FEFF 		bl	__aeabi_uidiv
 4145              	.LVL348:
 4146 0232 0304     		lsls	r3, r0, #16
 4147 0234 1B0C     		lsrs	r3, r3, #16
 4148              	.LVL349:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4149              		.loc 1 2756 0
 4150 0236 0020     		movs	r0, #0
 4151              	.LVL350:
 4152              	.L262:
2944:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4153              		.loc 1 2944 0
 4154 0238 3A49     		ldr	r1, .L292+48
 4155 023a 1A00     		movs	r2, r3
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 148


 4156 023c 103A     		subs	r2, r2, #16
 4157 023e 8A42     		cmp	r2, r1
 4158 0240 55D8     		bhi	.L283
2946:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4159              		.loc 1 2946 0
 4160 0242 2268     		ldr	r2, [r4]
 4161 0244 D360     		str	r3, [r2, #12]
 4162              	.LVL351:
 4163              	.L246:
2956:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->TxISR = NULL;
 4164              		.loc 1 2956 0
 4165 0246 0023     		movs	r3, #0
 4166 0248 2366     		str	r3, [r4, #96]
2957:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4167              		.loc 1 2957 0
 4168 024a 6366     		str	r3, [r4, #100]
2960:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4169              		.loc 1 2960 0
 4170              		@ sp needed
 4171              	.LVL352:
 4172 024c D0BD     		pop	{r4, r6, r7, pc}
 4173              	.LVL353:
 4174              	.L265:
2919:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4175              		.loc 1 2919 0
 4176 024e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 4177              	.LVL354:
 4178 0252 6368     		ldr	r3, [r4, #4]
 4179 0254 5B08     		lsrs	r3, r3, #1
 4180 0256 C018     		adds	r0, r0, r3
 4181 0258 6168     		ldr	r1, [r4, #4]
 4182 025a FFF7FEFF 		bl	__aeabi_uidiv
 4183              	.LVL355:
 4184 025e 0304     		lsls	r3, r0, #16
 4185 0260 1B0C     		lsrs	r3, r3, #16
 4186              	.LVL356:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4187              		.loc 1 2756 0
 4188 0262 0020     		movs	r0, #0
2920:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 4189              		.loc 1 2920 0
 4190 0264 E8E7     		b	.L262
 4191              	.LVL357:
 4192              	.L266:
2922:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         {
 4193              		.loc 1 2922 0
 4194 0266 294B     		ldr	r3, .L292+24
 4195 0268 1B68     		ldr	r3, [r3]
 4196 026a DB06     		lsls	r3, r3, #27
 4197 026c 0BD5     		bpl	.L269
2924:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4198              		.loc 1 2924 0
 4199 026e 6368     		ldr	r3, [r4, #4]
 4200 0270 5808     		lsrs	r0, r3, #1
 4201 0272 2A4B     		ldr	r3, .L292+40
 4202 0274 9C46     		mov	ip, r3
 4203 0276 6044     		add	r0, r0, ip
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 149


 4204 0278 6168     		ldr	r1, [r4, #4]
 4205 027a FFF7FEFF 		bl	__aeabi_uidiv
 4206              	.LVL358:
 4207 027e 0304     		lsls	r3, r0, #16
 4208 0280 1B0C     		lsrs	r3, r3, #16
 4209              	.LVL359:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4210              		.loc 1 2756 0
 4211 0282 0020     		movs	r0, #0
 4212 0284 D8E7     		b	.L262
 4213              	.LVL360:
 4214              	.L269:
2928:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4215              		.loc 1 2928 0
 4216 0286 6368     		ldr	r3, [r4, #4]
 4217 0288 5808     		lsrs	r0, r3, #1
 4218 028a 234B     		ldr	r3, .L292+36
 4219 028c 9C46     		mov	ip, r3
 4220 028e 6044     		add	r0, r0, ip
 4221 0290 6168     		ldr	r1, [r4, #4]
 4222 0292 FFF7FEFF 		bl	__aeabi_uidiv
 4223              	.LVL361:
 4224 0296 0304     		lsls	r3, r0, #16
 4225 0298 1B0C     		lsrs	r3, r3, #16
 4226              	.LVL362:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4227              		.loc 1 2756 0
 4228 029a 0020     		movs	r0, #0
 4229 029c CCE7     		b	.L262
 4230              	.LVL363:
 4231              	.L267:
2932:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4232              		.loc 1 2932 0
 4233 029e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 4234              	.LVL364:
 4235 02a2 6368     		ldr	r3, [r4, #4]
 4236 02a4 5B08     		lsrs	r3, r3, #1
 4237 02a6 C018     		adds	r0, r0, r3
 4238 02a8 6168     		ldr	r1, [r4, #4]
 4239 02aa FFF7FEFF 		bl	__aeabi_uidiv
 4240              	.LVL365:
 4241 02ae 0304     		lsls	r3, r0, #16
 4242 02b0 1B0C     		lsrs	r3, r3, #16
 4243              	.LVL366:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4244              		.loc 1 2756 0
 4245 02b2 0020     		movs	r0, #0
2933:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 4246              		.loc 1 2933 0
 4247 02b4 C0E7     		b	.L262
 4248              	.LVL367:
 4249              	.L268:
2935:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4250              		.loc 1 2935 0
 4251 02b6 6368     		ldr	r3, [r4, #4]
 4252 02b8 5808     		lsrs	r0, r3, #1
 4253 02ba 8023     		movs	r3, #128
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 150


 4254 02bc 1B02     		lsls	r3, r3, #8
 4255 02be 9C46     		mov	ip, r3
 4256 02c0 6044     		add	r0, r0, ip
 4257 02c2 6168     		ldr	r1, [r4, #4]
 4258 02c4 FFF7FEFF 		bl	__aeabi_uidiv
 4259              	.LVL368:
 4260 02c8 0304     		lsls	r3, r0, #16
 4261 02ca 1B0C     		lsrs	r3, r3, #16
 4262              	.LVL369:
2756:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4263              		.loc 1 2756 0
 4264 02cc 0020     		movs	r0, #0
2936:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
 4265              		.loc 1 2936 0
 4266 02ce B3E7     		b	.L262
 4267              	.LVL370:
 4268              	.L282:
2939:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4269              		.loc 1 2939 0
 4270 02d0 0120     		movs	r0, #1
2755:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4271              		.loc 1 2755 0
 4272 02d2 0023     		movs	r3, #0
 4273 02d4 B0E7     		b	.L262
 4274              	.LVL371:
 4275              	.L273:
2837:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         break;
 4276              		.loc 1 2837 0
 4277 02d6 0120     		movs	r0, #1
 4278 02d8 B5E7     		b	.L246
 4279              	.LVL372:
 4280              	.L291:
 4281 02da 0020     		movs	r0, #0
 4282              	.LVL373:
 4283 02dc B3E7     		b	.L246
 4284              	.L277:
2848:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4285              		.loc 1 2848 0
 4286 02de 0120     		movs	r0, #1
 4287 02e0 B1E7     		b	.L246
 4288              	.L278:
 4289 02e2 0120     		movs	r0, #1
 4290 02e4 AFE7     		b	.L246
 4291              	.LVL374:
 4292              	.L279:
2861:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         }
 4293              		.loc 1 2861 0
 4294 02e6 0120     		movs	r0, #1
 4295              	.LVL375:
 4296 02e8 ADE7     		b	.L246
 4297              	.LVL376:
 4298              	.L281:
2908:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4299              		.loc 1 2908 0
 4300 02ea 0120     		movs	r0, #1
 4301              	.LVL377:
 4302 02ec ABE7     		b	.L246
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 151


 4303              	.LVL378:
 4304              	.L283:
2950:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4305              		.loc 1 2950 0
 4306 02ee 0120     		movs	r0, #1
 4307              	.LVL379:
 4308 02f0 A9E7     		b	.L246
 4309              	.L293:
 4310 02f2 C046     		.align	2
 4311              	.L292:
 4312 02f4 F369FFEF 		.word	-268473869
 4313 02f8 FFCFFFFF 		.word	-12289
 4314 02fc 00480040 		.word	1073760256
 4315 0300 FFF4FFFF 		.word	-2817
 4316 0304 00440040 		.word	1073759232
 4317 0308 00000000 		.word	.L264
 4318 030c 00100240 		.word	1073876992
 4319 0310 00FDFFFF 		.word	-768
 4320 0314 FFFC0F00 		.word	1047807
 4321 0318 0024F400 		.word	16000000
 4322 031c 00093D00 		.word	4000000
 4323 0320 24000000 		.word	.L256
 4324 0324 EFFF0000 		.word	65519
 4325 0328 00127A00 		.word	8000000
 4326 032c 0048E801 		.word	32000000
 4327              		.cfi_endproc
 4328              	.LFE73:
 4330              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 4331              		.align	1
 4332              		.global	UART_AdvFeatureConfig
 4333              		.syntax unified
 4334              		.code	16
 4335              		.thumb_func
 4336              		.fpu softvfp
 4338              	UART_AdvFeatureConfig:
 4339              	.LFB74:
2968:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 4340              		.loc 1 2968 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 0
 4343              		@ frame_needed = 0, uses_anonymous_args = 0
 4344              		@ link register save eliminated.
 4345              	.LVL380:
2973:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4346              		.loc 1 2973 0
 4347 0000 436A     		ldr	r3, [r0, #36]
 4348 0002 DB07     		lsls	r3, r3, #31
 4349 0004 06D5     		bpl	.L295
2976:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4350              		.loc 1 2976 0
 4351 0006 0268     		ldr	r2, [r0]
 4352 0008 5368     		ldr	r3, [r2, #4]
 4353 000a 2C49     		ldr	r1, .L304
 4354 000c 0B40     		ands	r3, r1
 4355 000e 816A     		ldr	r1, [r0, #40]
 4356 0010 0B43     		orrs	r3, r1
 4357 0012 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 152


 4358              	.L295:
2980:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4359              		.loc 1 2980 0
 4360 0014 436A     		ldr	r3, [r0, #36]
 4361 0016 9B07     		lsls	r3, r3, #30
 4362 0018 06D5     		bpl	.L296
2983:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4363              		.loc 1 2983 0
 4364 001a 0268     		ldr	r2, [r0]
 4365 001c 5368     		ldr	r3, [r2, #4]
 4366 001e 2849     		ldr	r1, .L304+4
 4367 0020 0B40     		ands	r3, r1
 4368 0022 C16A     		ldr	r1, [r0, #44]
 4369 0024 0B43     		orrs	r3, r1
 4370 0026 5360     		str	r3, [r2, #4]
 4371              	.L296:
2987:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4372              		.loc 1 2987 0
 4373 0028 436A     		ldr	r3, [r0, #36]
 4374 002a 5B07     		lsls	r3, r3, #29
 4375 002c 06D5     		bpl	.L297
2990:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4376              		.loc 1 2990 0
 4377 002e 0268     		ldr	r2, [r0]
 4378 0030 5368     		ldr	r3, [r2, #4]
 4379 0032 2449     		ldr	r1, .L304+8
 4380 0034 0B40     		ands	r3, r1
 4381 0036 016B     		ldr	r1, [r0, #48]
 4382 0038 0B43     		orrs	r3, r1
 4383 003a 5360     		str	r3, [r2, #4]
 4384              	.L297:
2994:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4385              		.loc 1 2994 0
 4386 003c 436A     		ldr	r3, [r0, #36]
 4387 003e 1B07     		lsls	r3, r3, #28
 4388 0040 06D5     		bpl	.L298
2997:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4389              		.loc 1 2997 0
 4390 0042 0268     		ldr	r2, [r0]
 4391 0044 5368     		ldr	r3, [r2, #4]
 4392 0046 2049     		ldr	r1, .L304+12
 4393 0048 0B40     		ands	r3, r1
 4394 004a 416B     		ldr	r1, [r0, #52]
 4395 004c 0B43     		orrs	r3, r1
 4396 004e 5360     		str	r3, [r2, #4]
 4397              	.L298:
3001:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4398              		.loc 1 3001 0
 4399 0050 436A     		ldr	r3, [r0, #36]
 4400 0052 DB06     		lsls	r3, r3, #27
 4401 0054 06D5     		bpl	.L299
3004:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4402              		.loc 1 3004 0
 4403 0056 0268     		ldr	r2, [r0]
 4404 0058 9368     		ldr	r3, [r2, #8]
 4405 005a 1C49     		ldr	r1, .L304+16
 4406 005c 0B40     		ands	r3, r1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 153


 4407 005e 816B     		ldr	r1, [r0, #56]
 4408 0060 0B43     		orrs	r3, r1
 4409 0062 9360     		str	r3, [r2, #8]
 4410              	.L299:
3008:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4411              		.loc 1 3008 0
 4412 0064 436A     		ldr	r3, [r0, #36]
 4413 0066 9B06     		lsls	r3, r3, #26
 4414 0068 06D5     		bpl	.L300
3011:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4415              		.loc 1 3011 0
 4416 006a 0268     		ldr	r2, [r0]
 4417 006c 9368     		ldr	r3, [r2, #8]
 4418 006e 1849     		ldr	r1, .L304+20
 4419 0070 0B40     		ands	r3, r1
 4420 0072 C16B     		ldr	r1, [r0, #60]
 4421 0074 0B43     		orrs	r3, r1
 4422 0076 9360     		str	r3, [r2, #8]
 4423              	.L300:
3015:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4424              		.loc 1 3015 0
 4425 0078 436A     		ldr	r3, [r0, #36]
 4426 007a 5B06     		lsls	r3, r3, #25
 4427 007c 0BD5     		bpl	.L301
3019:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 4428              		.loc 1 3019 0
 4429 007e 0268     		ldr	r2, [r0]
 4430 0080 5368     		ldr	r3, [r2, #4]
 4431 0082 1449     		ldr	r1, .L304+24
 4432 0084 0B40     		ands	r3, r1
 4433 0086 016C     		ldr	r1, [r0, #64]
 4434 0088 0B43     		orrs	r3, r1
 4435 008a 5360     		str	r3, [r2, #4]
3021:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4436              		.loc 1 3021 0
 4437 008c 8023     		movs	r3, #128
 4438 008e 5B03     		lsls	r3, r3, #13
 4439 0090 026C     		ldr	r2, [r0, #64]
 4440 0092 9A42     		cmp	r2, r3
 4441 0094 0AD0     		beq	.L303
 4442              	.L301:
3029:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4443              		.loc 1 3029 0
 4444 0096 436A     		ldr	r3, [r0, #36]
 4445 0098 1B06     		lsls	r3, r3, #24
 4446 009a 06D5     		bpl	.L294
3032:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4447              		.loc 1 3032 0
 4448 009c 0268     		ldr	r2, [r0]
 4449 009e 5368     		ldr	r3, [r2, #4]
 4450 00a0 0D49     		ldr	r1, .L304+28
 4451 00a2 0B40     		ands	r3, r1
 4452 00a4 816C     		ldr	r1, [r0, #72]
 4453 00a6 0B43     		orrs	r3, r1
 4454 00a8 5360     		str	r3, [r2, #4]
 4455              	.L294:
3034:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 154


 4456              		.loc 1 3034 0
 4457              		@ sp needed
 4458 00aa 7047     		bx	lr
 4459              	.L303:
3024:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4460              		.loc 1 3024 0
 4461 00ac 0268     		ldr	r2, [r0]
 4462 00ae 5368     		ldr	r3, [r2, #4]
 4463 00b0 0A49     		ldr	r1, .L304+32
 4464 00b2 0B40     		ands	r3, r1
 4465 00b4 416C     		ldr	r1, [r0, #68]
 4466 00b6 0B43     		orrs	r3, r1
 4467 00b8 5360     		str	r3, [r2, #4]
 4468 00ba ECE7     		b	.L301
 4469              	.L305:
 4470              		.align	2
 4471              	.L304:
 4472 00bc FFFFFDFF 		.word	-131073
 4473 00c0 FFFFFEFF 		.word	-65537
 4474 00c4 FFFFFBFF 		.word	-262145
 4475 00c8 FF7FFFFF 		.word	-32769
 4476 00cc FFEFFFFF 		.word	-4097
 4477 00d0 FFDFFFFF 		.word	-8193
 4478 00d4 FFFFEFFF 		.word	-1048577
 4479 00d8 FFFFF7FF 		.word	-524289
 4480 00dc FFFF9FFF 		.word	-6291457
 4481              		.cfi_endproc
 4482              	.LFE74:
 4484              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4485              		.align	1
 4486              		.global	UART_WaitOnFlagUntilTimeout
 4487              		.syntax unified
 4488              		.code	16
 4489              		.thumb_func
 4490              		.fpu softvfp
 4492              	UART_WaitOnFlagUntilTimeout:
 4493              	.LFB76:
3093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Wait until flag is set */
 4494              		.loc 1 3093 0
 4495              		.cfi_startproc
 4496              		@ args = 4, pretend = 0, frame = 0
 4497              		@ frame_needed = 0, uses_anonymous_args = 0
 4498              	.LVL381:
 4499 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4500              	.LCFI31:
 4501              		.cfi_def_cfa_offset 20
 4502              		.cfi_offset 4, -20
 4503              		.cfi_offset 5, -16
 4504              		.cfi_offset 6, -12
 4505              		.cfi_offset 7, -8
 4506              		.cfi_offset 14, -4
 4507 0002 C646     		mov	lr, r8
 4508 0004 00B5     		push	{lr}
 4509              	.LCFI32:
 4510              		.cfi_def_cfa_offset 24
 4511              		.cfi_offset 8, -24
 4512 0006 0600     		movs	r6, r0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 155


 4513 0008 0C00     		movs	r4, r1
 4514 000a 1700     		movs	r7, r2
 4515 000c 9846     		mov	r8, r3
 4516 000e 069D     		ldr	r5, [sp, #24]
 4517              	.LVL382:
 4518              	.L308:
3095:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4519              		.loc 1 3095 0
 4520 0010 3368     		ldr	r3, [r6]
 4521 0012 DB69     		ldr	r3, [r3, #28]
 4522 0014 2340     		ands	r3, r4
 4523 0016 1B1B     		subs	r3, r3, r4
 4524 0018 5A42     		rsbs	r2, r3, #0
 4525 001a 5341     		adcs	r3, r3, r2
 4526 001c BB42     		cmp	r3, r7
 4527 001e 1CD1     		bne	.L312
3098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4528              		.loc 1 3098 0
 4529 0020 6B1C     		adds	r3, r5, #1
 4530 0022 F5D0     		beq	.L308
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4531              		.loc 1 3100 0
 4532 0024 FFF7FEFF 		bl	HAL_GetTick
 4533              	.LVL383:
 4534 0028 4346     		mov	r3, r8
 4535 002a C01A     		subs	r0, r0, r3
 4536 002c A842     		cmp	r0, r5
 4537 002e 01D8     		bhi	.L309
 4538              	.LVL384:
3100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4539              		.loc 1 3100 0 is_stmt 0 discriminator 1
 4540 0030 002D     		cmp	r5, #0
 4541 0032 EDD1     		bne	.L308
 4542              	.L309:
3103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4543              		.loc 1 3103 0 is_stmt 1
 4544 0034 3268     		ldr	r2, [r6]
 4545 0036 1368     		ldr	r3, [r2]
 4546              	.LVL385:
 4547 0038 0A49     		ldr	r1, .L313
 4548 003a 0B40     		ands	r3, r1
 4549 003c 1360     		str	r3, [r2]
3104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4550              		.loc 1 3104 0
 4551 003e 3268     		ldr	r2, [r6]
 4552 0040 9368     		ldr	r3, [r2, #8]
 4553 0042 A331     		adds	r1, r1, #163
 4554 0044 FF31     		adds	r1, r1, #255
 4555 0046 8B43     		bics	r3, r1
 4556 0048 9360     		str	r3, [r2, #8]
3106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4557              		.loc 1 3106 0
 4558 004a 2023     		movs	r3, #32
 4559 004c 7367     		str	r3, [r6, #116]
3107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4560              		.loc 1 3107 0
 4561 004e B367     		str	r3, [r6, #120]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 156


3110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4562              		.loc 1 3110 0
 4563 0050 5033     		adds	r3, r3, #80
 4564 0052 0022     		movs	r2, #0
 4565 0054 F254     		strb	r2, [r6, r3]
3112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4566              		.loc 1 3112 0
 4567 0056 0320     		movs	r0, #3
 4568 0058 00E0     		b	.L310
 4569              	.L312:
3116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 4570              		.loc 1 3116 0
 4571 005a 0020     		movs	r0, #0
 4572              	.L310:
3117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4573              		.loc 1 3117 0
 4574              		@ sp needed
 4575              	.LVL386:
 4576              	.LVL387:
 4577              	.LVL388:
 4578 005c 04BC     		pop	{r2}
 4579 005e 9046     		mov	r8, r2
 4580 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 4581              	.L314:
 4582 0062 C046     		.align	2
 4583              	.L313:
 4584 0064 5FFEFFFF 		.word	-417
 4585              		.cfi_endproc
 4586              	.LFE76:
 4588              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4589              		.align	1
 4590              		.global	HAL_UART_Transmit
 4591              		.syntax unified
 4592              		.code	16
 4593              		.thumb_func
 4594              		.fpu softvfp
 4596              	HAL_UART_Transmit:
 4597              	.LFB41:
1036:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4598              		.loc 1 1036 0
 4599              		.cfi_startproc
 4600              		@ args = 0, pretend = 0, frame = 8
 4601              		@ frame_needed = 0, uses_anonymous_args = 0
 4602              	.LVL389:
 4603 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4604              	.LCFI33:
 4605              		.cfi_def_cfa_offset 20
 4606              		.cfi_offset 4, -20
 4607              		.cfi_offset 5, -16
 4608              		.cfi_offset 6, -12
 4609              		.cfi_offset 7, -8
 4610              		.cfi_offset 14, -4
 4611 0002 85B0     		sub	sp, sp, #20
 4612              	.LCFI34:
 4613              		.cfi_def_cfa_offset 40
 4614 0004 0400     		movs	r4, r0
 4615 0006 0E00     		movs	r6, r1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 157


 4616 0008 1700     		movs	r7, r2
 4617 000a 1D00     		movs	r5, r3
1042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4618              		.loc 1 1042 0
 4619 000c 436F     		ldr	r3, [r0, #116]
 4620              	.LVL390:
 4621 000e 202B     		cmp	r3, #32
 4622 0010 5FD1     		bne	.L323
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4623              		.loc 1 1044 0
 4624 0012 0029     		cmp	r1, #0
 4625 0014 60D0     		beq	.L324
1044:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4626              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4627 0016 002A     		cmp	r2, #0
 4628 0018 60D0     		beq	.L325
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4629              		.loc 1 1052 0 is_stmt 1
 4630 001a 8023     		movs	r3, #128
 4631 001c 5B01     		lsls	r3, r3, #5
 4632 001e 8268     		ldr	r2, [r0, #8]
 4633              	.LVL391:
 4634 0020 9A42     		cmp	r2, r3
 4635 0022 18D0     		beq	.L332
 4636              	.L317:
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4637              		.loc 1 1061 0
 4638 0024 7023     		movs	r3, #112
 4639 0026 E35C     		ldrb	r3, [r4, r3]
 4640 0028 012B     		cmp	r3, #1
 4641 002a 59D0     		beq	.L327
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4642              		.loc 1 1061 0 is_stmt 0 discriminator 2
 4643 002c 7023     		movs	r3, #112
 4644 002e 0122     		movs	r2, #1
 4645 0030 E254     		strb	r2, [r4, r3]
1063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4646              		.loc 1 1063 0 is_stmt 1 discriminator 2
 4647 0032 0023     		movs	r3, #0
 4648 0034 E367     		str	r3, [r4, #124]
1064:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4649              		.loc 1 1064 0 discriminator 2
 4650 0036 2133     		adds	r3, r3, #33
 4651 0038 6367     		str	r3, [r4, #116]
1067:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4652              		.loc 1 1067 0 discriminator 2
 4653 003a FFF7FEFF 		bl	HAL_GetTick
 4654              	.LVL392:
 4655 003e 0390     		str	r0, [sp, #12]
 4656              	.LVL393:
1069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->TxXferCount = Size;
 4657              		.loc 1 1069 0 discriminator 2
 4658 0040 5023     		movs	r3, #80
 4659 0042 E752     		strh	r7, [r4, r3]
1070:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4660              		.loc 1 1070 0 discriminator 2
 4661 0044 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 158


 4662 0046 E752     		strh	r7, [r4, r3]
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4663              		.loc 1 1073 0 discriminator 2
 4664 0048 8023     		movs	r3, #128
 4665 004a 5B01     		lsls	r3, r3, #5
 4666 004c A268     		ldr	r2, [r4, #8]
 4667 004e 9A42     		cmp	r2, r3
 4668 0050 08D0     		beq	.L333
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4669              		.loc 1 1081 0
 4670 0052 0027     		movs	r7, #0
 4671 0054 16E0     		b	.L321
 4672              	.LVL394:
 4673              	.L332:
1052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4674              		.loc 1 1052 0 discriminator 1
 4675 0056 0369     		ldr	r3, [r0, #16]
 4676 0058 002B     		cmp	r3, #0
 4677 005a E3D1     		bne	.L317
1054:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4678              		.loc 1 1054 0
 4679 005c CB07     		lsls	r3, r1, #31
 4680 005e E1D5     		bpl	.L317
1056:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4681              		.loc 1 1056 0
 4682 0060 0120     		movs	r0, #1
 4683              	.LVL395:
 4684 0062 37E0     		b	.L316
 4685              	.LVL396:
 4686              	.L333:
1073:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4687              		.loc 1 1073 0 discriminator 1
 4688 0064 2369     		ldr	r3, [r4, #16]
 4689 0066 002B     		cmp	r3, #0
 4690 0068 21D0     		beq	.L329
1081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4691              		.loc 1 1081 0
 4692 006a 0027     		movs	r7, #0
 4693 006c 0AE0     		b	.L321
 4694              	.LVL397:
 4695              	.L335:
1092:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
 4696              		.loc 1 1092 0
 4697 006e 3B88     		ldrh	r3, [r7]
 4698 0070 2268     		ldr	r2, [r4]
 4699 0072 DB05     		lsls	r3, r3, #23
 4700 0074 DB0D     		lsrs	r3, r3, #23
 4701 0076 9362     		str	r3, [r2, #40]
1093:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4702              		.loc 1 1093 0
 4703 0078 0237     		adds	r7, r7, #2
 4704              	.LVL398:
 4705              	.L320:
1100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4706              		.loc 1 1100 0
 4707 007a 5222     		movs	r2, #82
 4708 007c A35A     		ldrh	r3, [r4, r2]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 159


 4709 007e 013B     		subs	r3, r3, #1
 4710 0080 9BB2     		uxth	r3, r3
 4711 0082 A352     		strh	r3, [r4, r2]
 4712              	.LVL399:
 4713              	.L321:
1084:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4714              		.loc 1 1084 0
 4715 0084 5223     		movs	r3, #82
 4716 0086 E35A     		ldrh	r3, [r4, r3]
 4717 0088 9BB2     		uxth	r3, r3
 4718 008a 002B     		cmp	r3, #0
 4719 008c 12D0     		beq	.L334
1086:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4720              		.loc 1 1086 0
 4721 008e 0095     		str	r5, [sp]
 4722 0090 039B     		ldr	r3, [sp, #12]
 4723 0092 0022     		movs	r2, #0
 4724 0094 8021     		movs	r1, #128
 4725 0096 2000     		movs	r0, r4
 4726 0098 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4727              	.LVL400:
 4728 009c 0028     		cmp	r0, #0
 4729 009e 21D1     		bne	.L330
1090:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4730              		.loc 1 1090 0
 4731 00a0 002E     		cmp	r6, #0
 4732 00a2 E4D0     		beq	.L335
1097:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
 4733              		.loc 1 1097 0
 4734 00a4 3278     		ldrb	r2, [r6]
 4735 00a6 2368     		ldr	r3, [r4]
 4736 00a8 9A62     		str	r2, [r3, #40]
1098:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4737              		.loc 1 1098 0
 4738 00aa 0136     		adds	r6, r6, #1
 4739              	.LVL401:
 4740 00ac E5E7     		b	.L320
 4741              	.LVL402:
 4742              	.L329:
1076:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4743              		.loc 1 1076 0
 4744 00ae 3700     		movs	r7, r6
1075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4745              		.loc 1 1075 0
 4746 00b0 0026     		movs	r6, #0
 4747              	.LVL403:
 4748 00b2 E7E7     		b	.L321
 4749              	.LVL404:
 4750              	.L334:
1103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4751              		.loc 1 1103 0
 4752 00b4 0095     		str	r5, [sp]
 4753 00b6 039B     		ldr	r3, [sp, #12]
 4754 00b8 0022     		movs	r2, #0
 4755 00ba 4021     		movs	r1, #64
 4756 00bc 2000     		movs	r0, r4
 4757 00be FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 160


 4758              	.LVL405:
 4759 00c2 0028     		cmp	r0, #0
 4760 00c4 10D1     		bne	.L331
1109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4761              		.loc 1 1109 0
 4762 00c6 2023     		movs	r3, #32
 4763 00c8 6367     		str	r3, [r4, #116]
1112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4764              		.loc 1 1112 0
 4765 00ca 5033     		adds	r3, r3, #80
 4766 00cc 0022     		movs	r2, #0
 4767 00ce E254     		strb	r2, [r4, r3]
1114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4768              		.loc 1 1114 0
 4769 00d0 00E0     		b	.L316
 4770              	.LVL406:
 4771              	.L323:
1118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 4772              		.loc 1 1118 0
 4773 00d2 0220     		movs	r0, #2
 4774              	.LVL407:
 4775              	.L316:
1120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4776              		.loc 1 1120 0
 4777 00d4 05B0     		add	sp, sp, #20
 4778              		@ sp needed
 4779              	.LVL408:
 4780              	.LVL409:
 4781 00d6 F0BD     		pop	{r4, r5, r6, r7, pc}
 4782              	.LVL410:
 4783              	.L324:
1046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4784              		.loc 1 1046 0
 4785 00d8 0120     		movs	r0, #1
 4786              	.LVL411:
 4787 00da FBE7     		b	.L316
 4788              	.LVL412:
 4789              	.L325:
 4790 00dc 0120     		movs	r0, #1
 4791              	.LVL413:
 4792 00de F9E7     		b	.L316
 4793              	.LVL414:
 4794              	.L327:
1061:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4795              		.loc 1 1061 0
 4796 00e0 0220     		movs	r0, #2
 4797              	.LVL415:
 4798 00e2 F7E7     		b	.L316
 4799              	.LVL416:
 4800              	.L330:
1088:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4801              		.loc 1 1088 0
 4802 00e4 0320     		movs	r0, #3
 4803 00e6 F5E7     		b	.L316
 4804              	.L331:
1105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4805              		.loc 1 1105 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 161


 4806 00e8 0320     		movs	r0, #3
 4807 00ea F3E7     		b	.L316
 4808              		.cfi_endproc
 4809              	.LFE41:
 4811              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4812              		.align	1
 4813              		.global	HAL_UART_Receive
 4814              		.syntax unified
 4815              		.code	16
 4816              		.thumb_func
 4817              		.fpu softvfp
 4819              	HAL_UART_Receive:
 4820              	.LFB42:
1135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4821              		.loc 1 1135 0
 4822              		.cfi_startproc
 4823              		@ args = 0, pretend = 0, frame = 8
 4824              		@ frame_needed = 0, uses_anonymous_args = 0
 4825              	.LVL417:
 4826 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4827              	.LCFI35:
 4828              		.cfi_def_cfa_offset 20
 4829              		.cfi_offset 4, -20
 4830              		.cfi_offset 5, -16
 4831              		.cfi_offset 6, -12
 4832              		.cfi_offset 7, -8
 4833              		.cfi_offset 14, -4
 4834 0002 C646     		mov	lr, r8
 4835 0004 00B5     		push	{lr}
 4836              	.LCFI36:
 4837              		.cfi_def_cfa_offset 24
 4838              		.cfi_offset 8, -24
 4839 0006 84B0     		sub	sp, sp, #16
 4840              	.LCFI37:
 4841              		.cfi_def_cfa_offset 40
 4842 0008 0400     		movs	r4, r0
 4843 000a 0F00     		movs	r7, r1
 4844 000c 1600     		movs	r6, r2
 4845 000e 1D00     		movs	r5, r3
1142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 4846              		.loc 1 1142 0
 4847 0010 836F     		ldr	r3, [r0, #120]
 4848              	.LVL418:
 4849 0012 202B     		cmp	r3, #32
 4850 0014 00D0     		beq	.LCB4440
 4851 0016 90E0     		b	.L351	@long jump
 4852              	.LCB4440:
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4853              		.loc 1 1144 0
 4854 0018 0029     		cmp	r1, #0
 4855 001a 00D1     		bne	.LCB4442
 4856 001c 92E0     		b	.L352	@long jump
 4857              	.LCB4442:
1144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4858              		.loc 1 1144 0 is_stmt 0 discriminator 1
 4859 001e 002A     		cmp	r2, #0
 4860 0020 00D1     		bne	.LCB4444
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 162


 4861 0022 91E0     		b	.L353	@long jump
 4862              	.LCB4444:
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4863              		.loc 1 1152 0 is_stmt 1
 4864 0024 8023     		movs	r3, #128
 4865 0026 5B01     		lsls	r3, r3, #5
 4866 0028 8268     		ldr	r2, [r0, #8]
 4867              	.LVL419:
 4868 002a 9A42     		cmp	r2, r3
 4869 002c 20D0     		beq	.L359
 4870              	.L338:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4871              		.loc 1 1161 0
 4872 002e 7023     		movs	r3, #112
 4873 0030 E35C     		ldrb	r3, [r4, r3]
 4874 0032 012B     		cmp	r3, #1
 4875 0034 00D1     		bne	.LCB4456
 4876 0036 89E0     		b	.L355	@long jump
 4877              	.LCB4456:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4878              		.loc 1 1161 0 is_stmt 0 discriminator 2
 4879 0038 7023     		movs	r3, #112
 4880 003a 0122     		movs	r2, #1
 4881 003c E254     		strb	r2, [r4, r3]
1163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4882              		.loc 1 1163 0 is_stmt 1 discriminator 2
 4883 003e 0023     		movs	r3, #0
 4884 0040 E367     		str	r3, [r4, #124]
1164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4885              		.loc 1 1164 0 discriminator 2
 4886 0042 2233     		adds	r3, r3, #34
 4887 0044 A367     		str	r3, [r4, #120]
1167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4888              		.loc 1 1167 0 discriminator 2
 4889 0046 FFF7FEFF 		bl	HAL_GetTick
 4890              	.LVL420:
 4891 004a 0390     		str	r0, [sp, #12]
 4892              	.LVL421:
1169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     huart->RxXferCount = Size;
 4893              		.loc 1 1169 0 discriminator 2
 4894 004c 5823     		movs	r3, #88
 4895 004e E652     		strh	r6, [r4, r3]
1170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4896              		.loc 1 1170 0 discriminator 2
 4897 0050 0233     		adds	r3, r3, #2
 4898 0052 E652     		strh	r6, [r4, r3]
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4899              		.loc 1 1173 0 discriminator 2
 4900 0054 A368     		ldr	r3, [r4, #8]
 4901 0056 8022     		movs	r2, #128
 4902 0058 5201     		lsls	r2, r2, #5
 4903 005a 9342     		cmp	r3, r2
 4904 005c 0FD0     		beq	.L360
 4905 005e 002B     		cmp	r3, #0
 4906 0060 1CD1     		bne	.L342
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4907              		.loc 1 1173 0 is_stmt 0 discriminator 5
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 163


 4908 0062 2269     		ldr	r2, [r4, #16]
 4909 0064 002A     		cmp	r2, #0
 4910 0066 15D1     		bne	.L343
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4911              		.loc 1 1173 0 discriminator 7
 4912 0068 5C32     		adds	r2, r2, #92
 4913 006a FF21     		movs	r1, #255
 4914 006c A152     		strh	r1, [r4, r2]
 4915 006e 1CE0     		b	.L341
 4916              	.LVL422:
 4917              	.L359:
1152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4918              		.loc 1 1152 0 is_stmt 1 discriminator 1
 4919 0070 0369     		ldr	r3, [r0, #16]
 4920 0072 002B     		cmp	r3, #0
 4921 0074 DBD1     		bne	.L338
1154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 4922              		.loc 1 1154 0
 4923 0076 CB07     		lsls	r3, r1, #31
 4924 0078 D9D5     		bpl	.L338
1156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 4925              		.loc 1 1156 0
 4926 007a 0120     		movs	r0, #1
 4927              	.LVL423:
 4928 007c 5EE0     		b	.L337
 4929              	.LVL424:
 4930              	.L360:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4931              		.loc 1 1173 0 discriminator 1
 4932 007e 2269     		ldr	r2, [r4, #16]
 4933 0080 002A     		cmp	r2, #0
 4934 0082 03D1     		bne	.L340
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4935              		.loc 1 1173 0 is_stmt 0 discriminator 3
 4936 0084 5C32     		adds	r2, r2, #92
 4937 0086 3349     		ldr	r1, .L365
 4938 0088 A152     		strh	r1, [r4, r2]
 4939 008a 0EE0     		b	.L341
 4940              	.L340:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4941              		.loc 1 1173 0 discriminator 4
 4942 008c 5C22     		movs	r2, #92
 4943 008e FF21     		movs	r1, #255
 4944 0090 A152     		strh	r1, [r4, r2]
 4945 0092 0AE0     		b	.L341
 4946              	.L343:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4947              		.loc 1 1173 0 discriminator 8
 4948 0094 5C22     		movs	r2, #92
 4949 0096 7F21     		movs	r1, #127
 4950 0098 A152     		strh	r1, [r4, r2]
 4951 009a 06E0     		b	.L341
 4952              	.L342:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4953              		.loc 1 1173 0 discriminator 6
 4954 009c 8022     		movs	r2, #128
 4955 009e 5205     		lsls	r2, r2, #21
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 164


 4956 00a0 9342     		cmp	r3, r2
 4957 00a2 0BD0     		beq	.L361
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4958              		.loc 1 1173 0 discriminator 10
 4959 00a4 5C22     		movs	r2, #92
 4960 00a6 0021     		movs	r1, #0
 4961 00a8 A152     		strh	r1, [r4, r2]
 4962              	.L341:
1174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 4963              		.loc 1 1174 0 is_stmt 1
 4964 00aa 5C22     		movs	r2, #92
 4965 00ac A65A     		ldrh	r6, [r4, r2]
 4966              	.LVL425:
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4967              		.loc 1 1177 0
 4968 00ae 8022     		movs	r2, #128
 4969 00b0 5201     		lsls	r2, r2, #5
 4970 00b2 9342     		cmp	r3, r2
 4971 00b4 0DD0     		beq	.L362
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4972              		.loc 1 1185 0
 4973 00b6 0023     		movs	r3, #0
 4974 00b8 9846     		mov	r8, r3
 4975 00ba 20E0     		b	.L347
 4976              	.LVL426:
 4977              	.L361:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4978              		.loc 1 1173 0 discriminator 9
 4979 00bc 2269     		ldr	r2, [r4, #16]
 4980 00be 002A     		cmp	r2, #0
 4981 00c0 03D1     		bne	.L345
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4982              		.loc 1 1173 0 is_stmt 0 discriminator 11
 4983 00c2 5C32     		adds	r2, r2, #92
 4984 00c4 7F21     		movs	r1, #127
 4985 00c6 A152     		strh	r1, [r4, r2]
 4986 00c8 EFE7     		b	.L341
 4987              	.L345:
1173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     uhMask = huart->Mask;
 4988              		.loc 1 1173 0 discriminator 12
 4989 00ca 5C22     		movs	r2, #92
 4990 00cc 3F21     		movs	r1, #63
 4991 00ce A152     		strh	r1, [r4, r2]
 4992 00d0 EBE7     		b	.L341
 4993              	.LVL427:
 4994              	.L362:
1177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 4995              		.loc 1 1177 0 is_stmt 1 discriminator 1
 4996 00d2 2369     		ldr	r3, [r4, #16]
 4997 00d4 002B     		cmp	r3, #0
 4998 00d6 02D0     		beq	.L357
1185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 4999              		.loc 1 1185 0
 5000 00d8 0023     		movs	r3, #0
 5001 00da 9846     		mov	r8, r3
 5002 00dc 0FE0     		b	.L347
 5003              	.L357:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 165


1180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 5004              		.loc 1 1180 0
 5005 00de B846     		mov	r8, r7
1179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 5006              		.loc 1 1179 0
 5007 00e0 0027     		movs	r7, #0
 5008              	.LVL428:
 5009 00e2 0CE0     		b	.L347
 5010              	.LVL429:
 5011              	.L364:
1197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata16bits++;
 5012              		.loc 1 1197 0
 5013 00e4 2368     		ldr	r3, [r4]
 5014 00e6 5B6A     		ldr	r3, [r3, #36]
 5015 00e8 3340     		ands	r3, r6
 5016 00ea 4246     		mov	r2, r8
 5017 00ec 1380     		strh	r3, [r2]
1198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 5018              		.loc 1 1198 0
 5019 00ee 0223     		movs	r3, #2
 5020 00f0 9C46     		mov	ip, r3
 5021 00f2 E044     		add	r8, r8, ip
 5022              	.LVL430:
 5023              	.L349:
1205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 5024              		.loc 1 1205 0
 5025 00f4 5A22     		movs	r2, #90
 5026 00f6 A35A     		ldrh	r3, [r4, r2]
 5027 00f8 013B     		subs	r3, r3, #1
 5028 00fa 9BB2     		uxth	r3, r3
 5029 00fc A352     		strh	r3, [r4, r2]
 5030              	.LVL431:
 5031              	.L347:
1189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 5032              		.loc 1 1189 0
 5033 00fe 5A23     		movs	r3, #90
 5034 0100 E35A     		ldrh	r3, [r4, r3]
 5035 0102 9BB2     		uxth	r3, r3
 5036 0104 002B     		cmp	r3, #0
 5037 0106 11D0     		beq	.L363
1191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 5038              		.loc 1 1191 0
 5039 0108 0095     		str	r5, [sp]
 5040 010a 039B     		ldr	r3, [sp, #12]
 5041 010c 0022     		movs	r2, #0
 5042 010e 2021     		movs	r1, #32
 5043 0110 2000     		movs	r0, r4
 5044 0112 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5045              	.LVL432:
 5046 0116 0028     		cmp	r0, #0
 5047 0118 1AD1     		bne	.L358
1195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       {
 5048              		.loc 1 1195 0
 5049 011a 002F     		cmp	r7, #0
 5050 011c E2D0     		beq	.L364
1202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****         pdata8bits++;
 5051              		.loc 1 1202 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 166


 5052 011e 2368     		ldr	r3, [r4]
 5053 0120 5B6A     		ldr	r3, [r3, #36]
 5054 0122 F2B2     		uxtb	r2, r6
 5055 0124 1340     		ands	r3, r2
 5056 0126 3B70     		strb	r3, [r7]
1203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 5057              		.loc 1 1203 0
 5058 0128 0137     		adds	r7, r7, #1
 5059              	.LVL433:
 5060 012a E3E7     		b	.L349
 5061              	.L363:
1209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5062              		.loc 1 1209 0
 5063 012c 2033     		adds	r3, r3, #32
 5064 012e A367     		str	r3, [r4, #120]
1212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5065              		.loc 1 1212 0
 5066 0130 5033     		adds	r3, r3, #80
 5067 0132 0022     		movs	r2, #0
 5068 0134 E254     		strb	r2, [r4, r3]
1214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5069              		.loc 1 1214 0
 5070 0136 0020     		movs	r0, #0
 5071 0138 00E0     		b	.L337
 5072              	.LVL434:
 5073              	.L351:
1218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5074              		.loc 1 1218 0
 5075 013a 0220     		movs	r0, #2
 5076              	.LVL435:
 5077              	.L337:
1220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5078              		.loc 1 1220 0
 5079 013c 04B0     		add	sp, sp, #16
 5080              		@ sp needed
 5081              	.LVL436:
 5082              	.LVL437:
 5083 013e 04BC     		pop	{r2}
 5084 0140 9046     		mov	r8, r2
 5085 0142 F0BD     		pop	{r4, r5, r6, r7, pc}
 5086              	.LVL438:
 5087              	.L352:
1146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 5088              		.loc 1 1146 0
 5089 0144 0120     		movs	r0, #1
 5090              	.LVL439:
 5091 0146 F9E7     		b	.L337
 5092              	.LVL440:
 5093              	.L353:
 5094 0148 0120     		movs	r0, #1
 5095              	.LVL441:
 5096 014a F7E7     		b	.L337
 5097              	.LVL442:
 5098              	.L355:
1161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5099              		.loc 1 1161 0
 5100 014c 0220     		movs	r0, #2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 167


 5101              	.LVL443:
 5102 014e F5E7     		b	.L337
 5103              	.LVL444:
 5104              	.L358:
1193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****       }
 5105              		.loc 1 1193 0
 5106 0150 0320     		movs	r0, #3
 5107 0152 F3E7     		b	.L337
 5108              	.L366:
 5109              		.align	2
 5110              	.L365:
 5111 0154 FF010000 		.word	511
 5112              		.cfi_endproc
 5113              	.LFE42:
 5115              		.section	.text.UART_CheckIdleState,"ax",%progbits
 5116              		.align	1
 5117              		.global	UART_CheckIdleState
 5118              		.syntax unified
 5119              		.code	16
 5120              		.thumb_func
 5121              		.fpu softvfp
 5123              	UART_CheckIdleState:
 5124              	.LFB75:
3042:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   uint32_t tickstart;
 5125              		.loc 1 3042 0
 5126              		.cfi_startproc
 5127              		@ args = 0, pretend = 0, frame = 0
 5128              		@ frame_needed = 0, uses_anonymous_args = 0
 5129              	.LVL445:
 5130 0000 30B5     		push	{r4, r5, lr}
 5131              	.LCFI38:
 5132              		.cfi_def_cfa_offset 12
 5133              		.cfi_offset 4, -12
 5134              		.cfi_offset 5, -8
 5135              		.cfi_offset 14, -4
 5136 0002 83B0     		sub	sp, sp, #12
 5137              	.LCFI39:
 5138              		.cfi_def_cfa_offset 24
 5139 0004 0400     		movs	r4, r0
3046:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5140              		.loc 1 3046 0
 5141 0006 0023     		movs	r3, #0
 5142 0008 C367     		str	r3, [r0, #124]
3049:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5143              		.loc 1 3049 0
 5144 000a FFF7FEFF 		bl	HAL_GetTick
 5145              	.LVL446:
 5146 000e 0500     		movs	r5, r0
 5147              	.LVL447:
3052:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5148              		.loc 1 3052 0
 5149 0010 2368     		ldr	r3, [r4]
 5150 0012 1B68     		ldr	r3, [r3]
 5151 0014 1B07     		lsls	r3, r3, #28
 5152 0016 0CD4     		bmi	.L373
 5153              	.LVL448:
 5154              	.L368:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 168


3063:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5155              		.loc 1 3063 0
 5156 0018 2368     		ldr	r3, [r4]
 5157 001a 1B68     		ldr	r3, [r3]
 5158 001c 5B07     		lsls	r3, r3, #29
 5159 001e 15D4     		bmi	.L374
 5160              	.L370:
3074:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 5161              		.loc 1 3074 0
 5162 0020 2023     		movs	r3, #32
 5163 0022 6367     		str	r3, [r4, #116]
3075:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5164              		.loc 1 3075 0
 5165 0024 A367     		str	r3, [r4, #120]
3078:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5166              		.loc 1 3078 0
 5167 0026 5033     		adds	r3, r3, #80
 5168 0028 0022     		movs	r2, #0
 5169 002a E254     		strb	r2, [r4, r3]
3080:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5170              		.loc 1 3080 0
 5171 002c 0020     		movs	r0, #0
 5172              	.L369:
3081:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5173              		.loc 1 3081 0
 5174 002e 03B0     		add	sp, sp, #12
 5175              		@ sp needed
 5176              	.LVL449:
 5177              	.LVL450:
 5178 0030 30BD     		pop	{r4, r5, pc}
 5179              	.LVL451:
 5180              	.L373:
3055:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 5181              		.loc 1 3055 0
 5182 0032 8021     		movs	r1, #128
 5183 0034 0C4B     		ldr	r3, .L375
 5184 0036 0093     		str	r3, [sp]
 5185 0038 0300     		movs	r3, r0
 5186 003a 0022     		movs	r2, #0
 5187 003c 8903     		lsls	r1, r1, #14
 5188 003e 2000     		movs	r0, r4
 5189              	.LVL452:
 5190 0040 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5191              	.LVL453:
 5192 0044 0028     		cmp	r0, #0
 5193 0046 E7D0     		beq	.L368
3058:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 5194              		.loc 1 3058 0
 5195 0048 0320     		movs	r0, #3
 5196 004a F0E7     		b	.L369
 5197              	.L374:
3066:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     {
 5198              		.loc 1 3066 0
 5199 004c 8021     		movs	r1, #128
 5200 004e 064B     		ldr	r3, .L375
 5201 0050 0093     		str	r3, [sp]
 5202 0052 2B00     		movs	r3, r5
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 169


 5203 0054 0022     		movs	r2, #0
 5204 0056 C903     		lsls	r1, r1, #15
 5205 0058 2000     		movs	r0, r4
 5206 005a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 5207              	.LVL454:
 5208 005e 0028     		cmp	r0, #0
 5209 0060 DED0     		beq	.L370
3069:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****     }
 5210              		.loc 1 3069 0
 5211 0062 0320     		movs	r0, #3
 5212 0064 E3E7     		b	.L369
 5213              	.L376:
 5214 0066 C046     		.align	2
 5215              	.L375:
 5216 0068 FFFFFF01 		.word	33554431
 5217              		.cfi_endproc
 5218              	.LFE75:
 5220              		.section	.text.HAL_UART_Init,"ax",%progbits
 5221              		.align	1
 5222              		.global	HAL_UART_Init
 5223              		.syntax unified
 5224              		.code	16
 5225              		.thumb_func
 5226              		.fpu softvfp
 5228              	HAL_UART_Init:
 5229              	.LFB34:
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5230              		.loc 1 293 0
 5231              		.cfi_startproc
 5232              		@ args = 0, pretend = 0, frame = 0
 5233              		@ frame_needed = 0, uses_anonymous_args = 0
 5234              	.LVL455:
 5235 0000 10B5     		push	{r4, lr}
 5236              	.LCFI40:
 5237              		.cfi_def_cfa_offset 8
 5238              		.cfi_offset 4, -8
 5239              		.cfi_offset 14, -4
 5240 0002 041E     		subs	r4, r0, #0
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5241              		.loc 1 295 0
 5242 0004 2ED0     		beq	.L381
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5243              		.loc 1 311 0
 5244 0006 436F     		ldr	r3, [r0, #116]
 5245 0008 002B     		cmp	r3, #0
 5246 000a 21D0     		beq	.L382
 5247              	.LVL456:
 5248              	.L379:
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5249              		.loc 1 332 0
 5250 000c 2423     		movs	r3, #36
 5251 000e 6367     		str	r3, [r4, #116]
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5252              		.loc 1 335 0
 5253 0010 2268     		ldr	r2, [r4]
 5254 0012 1368     		ldr	r3, [r2]
 5255 0014 0121     		movs	r1, #1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 170


 5256 0016 8B43     		bics	r3, r1
 5257 0018 1360     		str	r3, [r2]
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5258              		.loc 1 338 0
 5259 001a 2000     		movs	r0, r4
 5260 001c FFF7FEFF 		bl	UART_SetConfig
 5261              	.LVL457:
 5262 0020 0128     		cmp	r0, #1
 5263 0022 14D0     		beq	.L378
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5264              		.loc 1 343 0
 5265 0024 636A     		ldr	r3, [r4, #36]
 5266 0026 002B     		cmp	r3, #0
 5267 0028 18D1     		bne	.L383
 5268              	.L380:
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5269              		.loc 1 351 0
 5270 002a 2268     		ldr	r2, [r4]
 5271 002c 5368     		ldr	r3, [r2, #4]
 5272 002e 0E49     		ldr	r1, .L384
 5273 0030 0B40     		ands	r3, r1
 5274 0032 5360     		str	r3, [r2, #4]
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5275              		.loc 1 352 0
 5276 0034 2268     		ldr	r2, [r4]
 5277 0036 9368     		ldr	r3, [r2, #8]
 5278 0038 2A21     		movs	r1, #42
 5279 003a 8B43     		bics	r3, r1
 5280 003c 9360     		str	r3, [r2, #8]
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5281              		.loc 1 355 0
 5282 003e 2268     		ldr	r2, [r4]
 5283 0040 1368     		ldr	r3, [r2]
 5284 0042 2939     		subs	r1, r1, #41
 5285 0044 0B43     		orrs	r3, r1
 5286 0046 1360     		str	r3, [r2]
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5287              		.loc 1 358 0
 5288 0048 2000     		movs	r0, r4
 5289 004a FFF7FEFF 		bl	UART_CheckIdleState
 5290              	.LVL458:
 5291              	.L378:
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5292              		.loc 1 359 0
 5293              		@ sp needed
 5294              	.LVL459:
 5295 004e 10BD     		pop	{r4, pc}
 5296              	.LVL460:
 5297              	.L382:
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5298              		.loc 1 314 0
 5299 0050 7033     		adds	r3, r3, #112
 5300 0052 0022     		movs	r2, #0
 5301 0054 C254     		strb	r2, [r0, r3]
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5302              		.loc 1 328 0
 5303 0056 FFF7FEFF 		bl	HAL_UART_MspInit
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 171


 5304              	.LVL461:
 5305 005a D7E7     		b	.L379
 5306              	.L383:
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5307              		.loc 1 345 0
 5308 005c 2000     		movs	r0, r4
 5309 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 5310              	.LVL462:
 5311 0062 E2E7     		b	.L380
 5312              	.LVL463:
 5313              	.L381:
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5314              		.loc 1 297 0
 5315 0064 0120     		movs	r0, #1
 5316              	.LVL464:
 5317 0066 F2E7     		b	.L378
 5318              	.L385:
 5319              		.align	2
 5320              	.L384:
 5321 0068 FFB7FFFF 		.word	-18433
 5322              		.cfi_endproc
 5323              	.LFE34:
 5325              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 5326              		.align	1
 5327              		.global	HAL_HalfDuplex_Init
 5328              		.syntax unified
 5329              		.code	16
 5330              		.thumb_func
 5331              		.fpu softvfp
 5333              	HAL_HalfDuplex_Init:
 5334              	.LFB35:
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5335              		.loc 1 368 0
 5336              		.cfi_startproc
 5337              		@ args = 0, pretend = 0, frame = 0
 5338              		@ frame_needed = 0, uses_anonymous_args = 0
 5339              	.LVL465:
 5340 0000 10B5     		push	{r4, lr}
 5341              	.LCFI41:
 5342              		.cfi_def_cfa_offset 8
 5343              		.cfi_offset 4, -8
 5344              		.cfi_offset 14, -4
 5345 0002 041E     		subs	r4, r0, #0
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5346              		.loc 1 370 0
 5347 0004 33D0     		beq	.L390
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5348              		.loc 1 378 0
 5349 0006 436F     		ldr	r3, [r0, #116]
 5350 0008 002B     		cmp	r3, #0
 5351 000a 26D0     		beq	.L391
 5352              	.LVL466:
 5353              	.L388:
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5354              		.loc 1 399 0
 5355 000c 2423     		movs	r3, #36
 5356 000e 6367     		str	r3, [r4, #116]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 172


 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5357              		.loc 1 402 0
 5358 0010 2268     		ldr	r2, [r4]
 5359 0012 1368     		ldr	r3, [r2]
 5360 0014 0121     		movs	r1, #1
 5361 0016 8B43     		bics	r3, r1
 5362 0018 1360     		str	r3, [r2]
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5363              		.loc 1 405 0
 5364 001a 2000     		movs	r0, r4
 5365 001c FFF7FEFF 		bl	UART_SetConfig
 5366              	.LVL467:
 5367 0020 0128     		cmp	r0, #1
 5368 0022 19D0     		beq	.L387
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5369              		.loc 1 410 0
 5370 0024 636A     		ldr	r3, [r4, #36]
 5371 0026 002B     		cmp	r3, #0
 5372 0028 1DD1     		bne	.L392
 5373              	.L389:
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 5374              		.loc 1 418 0
 5375 002a 2268     		ldr	r2, [r4]
 5376 002c 5368     		ldr	r3, [r2, #4]
 5377 002e 1149     		ldr	r1, .L393
 5378 0030 0B40     		ands	r3, r1
 5379 0032 5360     		str	r3, [r2, #4]
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5380              		.loc 1 419 0
 5381 0034 2268     		ldr	r2, [r4]
 5382 0036 9368     		ldr	r3, [r2, #8]
 5383 0038 2221     		movs	r1, #34
 5384 003a 8B43     		bics	r3, r1
 5385 003c 9360     		str	r3, [r2, #8]
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5386              		.loc 1 422 0
 5387 003e 2268     		ldr	r2, [r4]
 5388 0040 9368     		ldr	r3, [r2, #8]
 5389 0042 1A39     		subs	r1, r1, #26
 5390 0044 0B43     		orrs	r3, r1
 5391 0046 9360     		str	r3, [r2, #8]
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5392              		.loc 1 425 0
 5393 0048 2268     		ldr	r2, [r4]
 5394 004a 1368     		ldr	r3, [r2]
 5395 004c 0739     		subs	r1, r1, #7
 5396 004e 0B43     		orrs	r3, r1
 5397 0050 1360     		str	r3, [r2]
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5398              		.loc 1 428 0
 5399 0052 2000     		movs	r0, r4
 5400 0054 FFF7FEFF 		bl	UART_CheckIdleState
 5401              	.LVL468:
 5402              	.L387:
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5403              		.loc 1 429 0
 5404              		@ sp needed
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 173


 5405              	.LVL469:
 5406 0058 10BD     		pop	{r4, pc}
 5407              	.LVL470:
 5408              	.L391:
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5409              		.loc 1 381 0
 5410 005a 7033     		adds	r3, r3, #112
 5411 005c 0022     		movs	r2, #0
 5412 005e C254     		strb	r2, [r0, r3]
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5413              		.loc 1 395 0
 5414 0060 FFF7FEFF 		bl	HAL_UART_MspInit
 5415              	.LVL471:
 5416 0064 D2E7     		b	.L388
 5417              	.L392:
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5418              		.loc 1 412 0
 5419 0066 2000     		movs	r0, r4
 5420 0068 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5421              	.LVL472:
 5422 006c DDE7     		b	.L389
 5423              	.LVL473:
 5424              	.L390:
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5425              		.loc 1 372 0
 5426 006e 0120     		movs	r0, #1
 5427              	.LVL474:
 5428 0070 F2E7     		b	.L387
 5429              	.L394:
 5430 0072 C046     		.align	2
 5431              	.L393:
 5432 0074 FFB7FFFF 		.word	-18433
 5433              		.cfi_endproc
 5434              	.LFE35:
 5436              		.section	.text.HAL_LIN_Init,"ax",%progbits
 5437              		.align	1
 5438              		.global	HAL_LIN_Init
 5439              		.syntax unified
 5440              		.code	16
 5441              		.thumb_func
 5442              		.fpu softvfp
 5444              	HAL_LIN_Init:
 5445              	.LFB36:
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5446              		.loc 1 443 0
 5447              		.cfi_startproc
 5448              		@ args = 0, pretend = 0, frame = 0
 5449              		@ frame_needed = 0, uses_anonymous_args = 0
 5450              	.LVL475:
 5451 0000 70B5     		push	{r4, r5, r6, lr}
 5452              	.LCFI42:
 5453              		.cfi_def_cfa_offset 16
 5454              		.cfi_offset 4, -16
 5455              		.cfi_offset 5, -12
 5456              		.cfi_offset 6, -8
 5457              		.cfi_offset 14, -4
 5458 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 174


 5459 0004 0D00     		movs	r5, r1
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5460              		.loc 1 445 0
 5461 0006 0028     		cmp	r0, #0
 5462 0008 42D0     		beq	.L399
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5463              		.loc 1 456 0
 5464 000a 8023     		movs	r3, #128
 5465 000c 1B02     		lsls	r3, r3, #8
 5466 000e C269     		ldr	r2, [r0, #28]
 5467 0010 9A42     		cmp	r2, r3
 5468 0012 3FD0     		beq	.L400
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5469              		.loc 1 461 0
 5470 0014 8368     		ldr	r3, [r0, #8]
 5471 0016 002B     		cmp	r3, #0
 5472 0018 3ED1     		bne	.L401
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5473              		.loc 1 466 0
 5474 001a 436F     		ldr	r3, [r0, #116]
 5475 001c 002B     		cmp	r3, #0
 5476 001e 2DD0     		beq	.L402
 5477              	.LVL476:
 5478              	.L397:
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5479              		.loc 1 487 0
 5480 0020 2423     		movs	r3, #36
 5481 0022 6367     		str	r3, [r4, #116]
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5482              		.loc 1 490 0
 5483 0024 2268     		ldr	r2, [r4]
 5484 0026 1368     		ldr	r3, [r2]
 5485 0028 0121     		movs	r1, #1
 5486 002a 8B43     		bics	r3, r1
 5487 002c 1360     		str	r3, [r2]
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5488              		.loc 1 493 0
 5489 002e 2000     		movs	r0, r4
 5490 0030 FFF7FEFF 		bl	UART_SetConfig
 5491              	.LVL477:
 5492 0034 0128     		cmp	r0, #1
 5493 0036 2CD0     		beq	.L396
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5494              		.loc 1 498 0
 5495 0038 636A     		ldr	r3, [r4, #36]
 5496 003a 002B     		cmp	r3, #0
 5497 003c 24D1     		bne	.L403
 5498              	.L398:
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 5499              		.loc 1 506 0
 5500 003e 2268     		ldr	r2, [r4]
 5501 0040 5368     		ldr	r3, [r2, #4]
 5502 0042 1649     		ldr	r1, .L404
 5503 0044 0B40     		ands	r3, r1
 5504 0046 5360     		str	r3, [r2, #4]
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5505              		.loc 1 507 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 175


 5506 0048 2268     		ldr	r2, [r4]
 5507 004a 9368     		ldr	r3, [r2, #8]
 5508 004c 2A21     		movs	r1, #42
 5509 004e 8B43     		bics	r3, r1
 5510 0050 9360     		str	r3, [r2, #8]
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5511              		.loc 1 510 0
 5512 0052 2268     		ldr	r2, [r4]
 5513 0054 5168     		ldr	r1, [r2, #4]
 5514 0056 8023     		movs	r3, #128
 5515 0058 DB01     		lsls	r3, r3, #7
 5516 005a 0B43     		orrs	r3, r1
 5517 005c 5360     		str	r3, [r2, #4]
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5518              		.loc 1 513 0
 5519 005e 2268     		ldr	r2, [r4]
 5520 0060 5368     		ldr	r3, [r2, #4]
 5521 0062 2021     		movs	r1, #32
 5522 0064 8B43     		bics	r3, r1
 5523 0066 1D43     		orrs	r5, r3
 5524              	.LVL478:
 5525 0068 5560     		str	r5, [r2, #4]
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5526              		.loc 1 516 0
 5527 006a 2268     		ldr	r2, [r4]
 5528 006c 1368     		ldr	r3, [r2]
 5529 006e 1F39     		subs	r1, r1, #31
 5530 0070 0B43     		orrs	r3, r1
 5531 0072 1360     		str	r3, [r2]
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5532              		.loc 1 519 0
 5533 0074 2000     		movs	r0, r4
 5534 0076 FFF7FEFF 		bl	UART_CheckIdleState
 5535              	.LVL479:
 5536 007a 0AE0     		b	.L396
 5537              	.LVL480:
 5538              	.L402:
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5539              		.loc 1 469 0
 5540 007c 7033     		adds	r3, r3, #112
 5541 007e 0022     		movs	r2, #0
 5542 0080 C254     		strb	r2, [r0, r3]
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5543              		.loc 1 483 0
 5544 0082 FFF7FEFF 		bl	HAL_UART_MspInit
 5545              	.LVL481:
 5546 0086 CBE7     		b	.L397
 5547              	.L403:
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5548              		.loc 1 500 0
 5549 0088 2000     		movs	r0, r4
 5550 008a FFF7FEFF 		bl	UART_AdvFeatureConfig
 5551              	.LVL482:
 5552 008e D6E7     		b	.L398
 5553              	.LVL483:
 5554              	.L399:
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 176


 5555              		.loc 1 447 0
 5556 0090 0120     		movs	r0, #1
 5557              	.LVL484:
 5558              	.L396:
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5559              		.loc 1 520 0
 5560              		@ sp needed
 5561              	.LVL485:
 5562 0092 70BD     		pop	{r4, r5, r6, pc}
 5563              	.LVL486:
 5564              	.L400:
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5565              		.loc 1 458 0
 5566 0094 0120     		movs	r0, #1
 5567              	.LVL487:
 5568 0096 FCE7     		b	.L396
 5569              	.LVL488:
 5570              	.L401:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5571              		.loc 1 463 0
 5572 0098 0120     		movs	r0, #1
 5573              	.LVL489:
 5574 009a FAE7     		b	.L396
 5575              	.L405:
 5576              		.align	2
 5577              	.L404:
 5578 009c FFF7FFFF 		.word	-2049
 5579              		.cfi_endproc
 5580              	.LFE36:
 5582              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5583              		.align	1
 5584              		.global	HAL_MultiProcessor_Init
 5585              		.syntax unified
 5586              		.code	16
 5587              		.thumb_func
 5588              		.fpu softvfp
 5590              	HAL_MultiProcessor_Init:
 5591              	.LFB37:
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Check the UART handle allocation */
 5592              		.loc 1 542 0
 5593              		.cfi_startproc
 5594              		@ args = 0, pretend = 0, frame = 0
 5595              		@ frame_needed = 0, uses_anonymous_args = 0
 5596              	.LVL490:
 5597 0000 70B5     		push	{r4, r5, r6, lr}
 5598              	.LCFI43:
 5599              		.cfi_def_cfa_offset 16
 5600              		.cfi_offset 4, -16
 5601              		.cfi_offset 5, -12
 5602              		.cfi_offset 6, -8
 5603              		.cfi_offset 14, -4
 5604 0002 0400     		movs	r4, r0
 5605 0004 0D00     		movs	r5, r1
 5606 0006 1600     		movs	r6, r2
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5607              		.loc 1 544 0
 5608 0008 0028     		cmp	r0, #0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 177


 5609 000a 40D0     		beq	.L411
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5610              		.loc 1 552 0
 5611 000c 436F     		ldr	r3, [r0, #116]
 5612 000e 002B     		cmp	r3, #0
 5613 0010 2BD0     		beq	.L412
 5614              	.LVL491:
 5615              	.L408:
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5616              		.loc 1 573 0
 5617 0012 2423     		movs	r3, #36
 5618 0014 6367     		str	r3, [r4, #116]
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5619              		.loc 1 576 0
 5620 0016 2268     		ldr	r2, [r4]
 5621 0018 1368     		ldr	r3, [r2]
 5622 001a 0121     		movs	r1, #1
 5623 001c 8B43     		bics	r3, r1
 5624 001e 1360     		str	r3, [r2]
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5625              		.loc 1 579 0
 5626 0020 2000     		movs	r0, r4
 5627 0022 FFF7FEFF 		bl	UART_SetConfig
 5628              	.LVL492:
 5629 0026 0128     		cmp	r0, #1
 5630 0028 1ED0     		beq	.L407
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5631              		.loc 1 584 0
 5632 002a 636A     		ldr	r3, [r4, #36]
 5633 002c 002B     		cmp	r3, #0
 5634 002e 22D1     		bne	.L413
 5635              	.L409:
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5636              		.loc 1 592 0
 5637 0030 2268     		ldr	r2, [r4]
 5638 0032 5368     		ldr	r3, [r2, #4]
 5639 0034 1749     		ldr	r1, .L415
 5640 0036 0B40     		ands	r3, r1
 5641 0038 5360     		str	r3, [r2, #4]
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5642              		.loc 1 593 0
 5643 003a 2268     		ldr	r2, [r4]
 5644 003c 9368     		ldr	r3, [r2, #8]
 5645 003e 2A21     		movs	r1, #42
 5646 0040 8B43     		bics	r3, r1
 5647 0042 9360     		str	r3, [r2, #8]
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   {
 5648              		.loc 1 595 0
 5649 0044 8023     		movs	r3, #128
 5650 0046 1B01     		lsls	r3, r3, #4
 5651 0048 9E42     		cmp	r6, r3
 5652 004a 18D0     		beq	.L414
 5653              	.L410:
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5654              		.loc 1 602 0
 5655 004c 2368     		ldr	r3, [r4]
 5656 004e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 178


 5657 0050 1149     		ldr	r1, .L415+4
 5658 0052 0A40     		ands	r2, r1
 5659 0054 3243     		orrs	r2, r6
 5660 0056 1A60     		str	r2, [r3]
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5661              		.loc 1 605 0
 5662 0058 2268     		ldr	r2, [r4]
 5663 005a 1368     		ldr	r3, [r2]
 5664 005c 0121     		movs	r1, #1
 5665 005e 0B43     		orrs	r3, r1
 5666 0060 1360     		str	r3, [r2]
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5667              		.loc 1 608 0
 5668 0062 2000     		movs	r0, r4
 5669 0064 FFF7FEFF 		bl	UART_CheckIdleState
 5670              	.LVL493:
 5671              	.L407:
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5672              		.loc 1 609 0
 5673              		@ sp needed
 5674              	.LVL494:
 5675              	.LVL495:
 5676 0068 70BD     		pop	{r4, r5, r6, pc}
 5677              	.LVL496:
 5678              	.L412:
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5679              		.loc 1 555 0
 5680 006a 7033     		adds	r3, r3, #112
 5681 006c 0022     		movs	r2, #0
 5682              	.LVL497:
 5683 006e C254     		strb	r2, [r0, r3]
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5684              		.loc 1 569 0
 5685 0070 FFF7FEFF 		bl	HAL_UART_MspInit
 5686              	.LVL498:
 5687 0074 CDE7     		b	.L408
 5688              	.L413:
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5689              		.loc 1 586 0
 5690 0076 2000     		movs	r0, r4
 5691 0078 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5692              	.LVL499:
 5693 007c D8E7     		b	.L409
 5694              	.L414:
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
 5695              		.loc 1 598 0
 5696 007e 2268     		ldr	r2, [r4]
 5697 0080 5368     		ldr	r3, [r2, #4]
 5698 0082 1B02     		lsls	r3, r3, #8
 5699 0084 1B0A     		lsrs	r3, r3, #8
 5700 0086 2D06     		lsls	r5, r5, #24
 5701 0088 1D43     		orrs	r5, r3
 5702 008a 5560     		str	r5, [r2, #4]
 5703 008c DEE7     		b	.L410
 5704              	.LVL500:
 5705              	.L411:
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   }
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 179


 5706              		.loc 1 546 0
 5707 008e 0120     		movs	r0, #1
 5708              	.LVL501:
 5709 0090 EAE7     		b	.L407
 5710              	.L416:
 5711 0092 C046     		.align	2
 5712              	.L415:
 5713 0094 FFB7FFFF 		.word	-18433
 5714 0098 FFF7FFFF 		.word	-2049
 5715              		.cfi_endproc
 5716              	.LFE37:
 5718              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5719              		.align	1
 5720              		.global	HAL_MultiProcessor_EnableMuteMode
 5721              		.syntax unified
 5722              		.code	16
 5723              		.thumb_func
 5724              		.fpu softvfp
 5726              	HAL_MultiProcessor_EnableMuteMode:
 5727              	.LFB65:
2543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5728              		.loc 1 2543 0
 5729              		.cfi_startproc
 5730              		@ args = 0, pretend = 0, frame = 0
 5731              		@ frame_needed = 0, uses_anonymous_args = 0
 5732              	.LVL502:
 5733 0000 10B5     		push	{r4, lr}
 5734              	.LCFI44:
 5735              		.cfi_def_cfa_offset 8
 5736              		.cfi_offset 4, -8
 5737              		.cfi_offset 14, -4
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5738              		.loc 1 2545 0
 5739 0002 7023     		movs	r3, #112
 5740 0004 C35C     		ldrb	r3, [r0, r3]
 5741 0006 012B     		cmp	r3, #1
 5742 0008 0FD0     		beq	.L419
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5743              		.loc 1 2545 0 is_stmt 0 discriminator 2
 5744 000a 7023     		movs	r3, #112
 5745 000c 0122     		movs	r2, #1
 5746 000e C254     		strb	r2, [r0, r3]
2547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5747              		.loc 1 2547 0 is_stmt 1 discriminator 2
 5748 0010 4C3B     		subs	r3, r3, #76
 5749 0012 4367     		str	r3, [r0, #116]
2550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5750              		.loc 1 2550 0 discriminator 2
 5751 0014 0268     		ldr	r2, [r0]
 5752 0016 1168     		ldr	r1, [r2]
 5753 0018 8023     		movs	r3, #128
 5754 001a 9B01     		lsls	r3, r3, #6
 5755 001c 0B43     		orrs	r3, r1
 5756 001e 1360     		str	r3, [r2]
2552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5757              		.loc 1 2552 0 discriminator 2
 5758 0020 2023     		movs	r3, #32
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 180


 5759 0022 4367     		str	r3, [r0, #116]
2554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5760              		.loc 1 2554 0 discriminator 2
 5761 0024 FFF7FEFF 		bl	UART_CheckIdleState
 5762              	.LVL503:
 5763              	.L418:
2555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5764              		.loc 1 2555 0
 5765              		@ sp needed
 5766 0028 10BD     		pop	{r4, pc}
 5767              	.LVL504:
 5768              	.L419:
2545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5769              		.loc 1 2545 0
 5770 002a 0220     		movs	r0, #2
 5771              	.LVL505:
 5772 002c FCE7     		b	.L418
 5773              		.cfi_endproc
 5774              	.LFE65:
 5776              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5777              		.align	1
 5778              		.global	HAL_MultiProcessor_DisableMuteMode
 5779              		.syntax unified
 5780              		.code	16
 5781              		.thumb_func
 5782              		.fpu softvfp
 5784              	HAL_MultiProcessor_DisableMuteMode:
 5785              	.LFB66:
2564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c ****   /* Process Locked */
 5786              		.loc 1 2564 0
 5787              		.cfi_startproc
 5788              		@ args = 0, pretend = 0, frame = 0
 5789              		@ frame_needed = 0, uses_anonymous_args = 0
 5790              	.LVL506:
 5791 0000 10B5     		push	{r4, lr}
 5792              	.LCFI45:
 5793              		.cfi_def_cfa_offset 8
 5794              		.cfi_offset 4, -8
 5795              		.cfi_offset 14, -4
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5796              		.loc 1 2566 0
 5797 0002 7023     		movs	r3, #112
 5798 0004 C35C     		ldrb	r3, [r0, r3]
 5799 0006 012B     		cmp	r3, #1
 5800 0008 0ED0     		beq	.L422
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5801              		.loc 1 2566 0 is_stmt 0 discriminator 2
 5802 000a 7023     		movs	r3, #112
 5803 000c 0122     		movs	r2, #1
 5804 000e C254     		strb	r2, [r0, r3]
2568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5805              		.loc 1 2568 0 is_stmt 1 discriminator 2
 5806 0010 4C3B     		subs	r3, r3, #76
 5807 0012 4367     		str	r3, [r0, #116]
2571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5808              		.loc 1 2571 0 discriminator 2
 5809 0014 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 181


 5810 0016 1368     		ldr	r3, [r2]
 5811 0018 0449     		ldr	r1, .L423
 5812 001a 0B40     		ands	r3, r1
 5813 001c 1360     		str	r3, [r2]
2573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5814              		.loc 1 2573 0 discriminator 2
 5815 001e 2023     		movs	r3, #32
 5816 0020 4367     		str	r3, [r0, #116]
2575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** }
 5817              		.loc 1 2575 0 discriminator 2
 5818 0022 FFF7FEFF 		bl	UART_CheckIdleState
 5819              	.LVL507:
 5820              	.L421:
2576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5821              		.loc 1 2576 0
 5822              		@ sp needed
 5823 0026 10BD     		pop	{r4, pc}
 5824              	.LVL508:
 5825              	.L422:
2566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal_uart.c **** 
 5826              		.loc 1 2566 0
 5827 0028 0220     		movs	r0, #2
 5828              	.LVL509:
 5829 002a FCE7     		b	.L421
 5830              	.L424:
 5831              		.align	2
 5832              	.L423:
 5833 002c FFDFFFFF 		.word	-8193
 5834              		.cfi_endproc
 5835              	.LFE66:
 5837              		.text
 5838              	.Letext0:
 5839              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5840              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 5841              		.file 4 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 5842              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 5843              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l0xx.h"
 5844              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 5845              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_dma.h"
 5846              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart.h"
 5847              		.file 10 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 5848              		.file 11 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_rcc.h"
 5849              		.file 12 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_uart_ex.h"
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 182


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal_uart.c
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:16     .text.UART_EndTxTransfer:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:22     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:47     .text.UART_EndRxTransfer:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:53     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:86     .text.UART_EndRxTransfer:00000020 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:91     .text.UART_TxISR_8BIT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:97     .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:155    .text.UART_TxISR_16BIT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:161    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:223    .text.HAL_UART_MspInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:230    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:245    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:252    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:267    .text.HAL_UART_DeInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:274    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:339    .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:346    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:481    .text.HAL_UART_Transmit_IT:00000088 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:487    .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:494    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:707    .text.HAL_UART_Receive_IT:000000f4 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1930   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2028   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:714    .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:721    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:877    .text.HAL_UART_Transmit_DMA:000000b8 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1754   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1877   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2270   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:884    .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:891    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1051   .text.HAL_UART_Receive_DMA:000000c0 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2126   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2217   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1058   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1065   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1163   .text.HAL_UART_DMAPause:00000064 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1168   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1175   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1256   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1263   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1391   .text.HAL_UART_Abort:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1398   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1534   .text.HAL_UART_Abort:000000ac $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1539   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1546   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1622   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1629   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1721   .text.HAL_UART_AbortReceive:00000070 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1726   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1733   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1748   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1809   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1815   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1849   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 183


C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1856   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1871   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1902   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1909   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:1924   .text.UART_RxISR_8BIT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2017   .text.UART_RxISR_8BIT:00000060 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2022   .text.UART_RxISR_16BIT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2115   .text.UART_RxISR_16BIT:00000060 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2120   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2184   .text.UART_DMAReceiveCplt:00000040 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2189   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2196   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2211   .text.UART_DMARxHalfCplt:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2242   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2249   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2264   .text.UART_DMAError:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2353   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2360   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2647   .text.HAL_UART_IRQHandler:00000140 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2658   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2652   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2690   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2697   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2712   .text.HAL_UART_Abort_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2719   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2897   .text.HAL_UART_Abort_IT:000000d8 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2982   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2910   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2904   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:2976   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3042   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3049   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3064   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3071   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3158   .text.HAL_UART_AbortTransmit_IT:00000060 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3169   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3163   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3201   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3208   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3223   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3230   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3337   .text.HAL_UART_AbortReceive_IT:00000080 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3349   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3343   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3391   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3398   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3419   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3426   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3485   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3492   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3551   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3558   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3611   .text.HAL_UART_GetState:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3618   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3642   .text.HAL_UART_GetError:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3649   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3669   .text.UART_SetConfig:00000000 $t
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s 			page 184


C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3676   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:3773   .rodata.UART_SetConfig:00000000 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4312   .text.UART_SetConfig:000002f4 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4331   .text.UART_AdvFeatureConfig:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4338   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4472   .text.UART_AdvFeatureConfig:000000bc $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4485   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4492   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4584   .text.UART_WaitOnFlagUntilTimeout:00000064 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4589   .text.HAL_UART_Transmit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4596   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4812   .text.HAL_UART_Receive:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:4819   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5111   .text.HAL_UART_Receive:00000154 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5116   .text.UART_CheckIdleState:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5123   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5216   .text.UART_CheckIdleState:00000068 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5221   .text.HAL_UART_Init:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5228   .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5321   .text.HAL_UART_Init:00000068 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5326   .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5333   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5432   .text.HAL_HalfDuplex_Init:00000074 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5437   .text.HAL_LIN_Init:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5444   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5578   .text.HAL_LIN_Init:0000009c $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5583   .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5590   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5713   .text.HAL_MultiProcessor_Init:00000094 $d
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5719   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5726   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5777   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5784   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
C:\Users\Nicolas\AppData\Local\Temp\ccs3ATwj.s:5833   .text.HAL_MultiProcessor_DisableMuteMode:0000002c $d

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
__aeabi_uidiv
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
HAL_GetTick
