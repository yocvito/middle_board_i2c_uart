ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.weak	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB36:
  25              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @file    stm32l0xx_hal.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @verbatim
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @endverbatim
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @attention
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 2


  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #include "stm32l0xx_hal.h"
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup STM32L0xx_HAL_Driver
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief HAL module driver.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Constants
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup HAL_Version HAL Version
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @brief STM32L0xx HAL Driver version number
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  */
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB1   (0x0AU) /*!< [23:16] sub1 version */
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB2   (0x02U) /*!< [15:8]  sub2 version */
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION         ((__STM32L0xx_HAL_VERSION_MAIN << 24U)\
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB1 << 16U)\
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB2 << 8U )\
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_RC))
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define IDCODE_DEVID_MASK    ((uint32_t)0x00000FFFU)
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 3


  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****               ##### Initialization and de-initialization functions #####
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    [..]  This section provides functions allowing to:
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Initialize the Flash interface, the NVIC allocation and initial clock
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           configuration. It initializes the source of time base also when timeout
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           is needed and the backup domain when enabled.
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) De-initialize common part of the HAL.
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           Tick interrupt priority.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              handled in milliseconds basis.
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             ISR process will be blocked.
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the Flash prefetch, Flash preread and Buffer cache,
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       the clock configuration
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Once done, time base tick start incrementing.
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure Buffer cache, Flash prefetch,  Flash preread */
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (BUFFER_CACHE_DISABLE != 0)
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_BUFFER_CACHE_DISABLE();
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* BUFFER_CACHE_DISABLE */
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREREAD_ENABLE != 0)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 4


 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_ERROR;
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Init the low level hardware */
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_MspInit();
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function de-initializes common part of the HAL and stops the source
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        of time base.
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is optional.
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* De-Init the low level hardware */
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_MspDeInit();
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Initializes the MSP.
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspInit(void)
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  26              		.loc 1 203 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 5


  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  31              		.loc 1 207 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE36:
  37              		.section	.text.HAL_MspDeInit,"ax",%progbits
  38              		.align	1
  39              		.weak	HAL_MspDeInit
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HAL_MspDeInit:
  46              	.LFB37:
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  DeInitializes the MSP.
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspDeInit(void)
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  47              		.loc 1 214 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  52              		.loc 1 218 0
  53              		@ sp needed
  54 0000 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE37:
  58              		.section	.text.HAL_DeInit,"ax",%progbits
  59              		.align	1
  60              		.global	HAL_DeInit
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	HAL_DeInit:
  67              	.LFB35:
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
  68              		.loc 1 177 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 6


  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  77              		.loc 1 179 0
  78 0002 084B     		ldr	r3, .L4
  79 0004 0121     		movs	r1, #1
  80 0006 4942     		rsbs	r1, r1, #0
  81 0008 9962     		str	r1, [r3, #40]
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  82              		.loc 1 180 0
  83 000a 0022     		movs	r2, #0
  84 000c 9A62     		str	r2, [r3, #40]
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  85              		.loc 1 182 0
  86 000e 5962     		str	r1, [r3, #36]
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  87              		.loc 1 183 0
  88 0010 5A62     		str	r2, [r3, #36]
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
  89              		.loc 1 185 0
  90 0012 1962     		str	r1, [r3, #32]
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  91              		.loc 1 186 0
  92 0014 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
  93              		.loc 1 188 0
  94 0016 D961     		str	r1, [r3, #28]
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  95              		.loc 1 189 0
  96 0018 DA61     		str	r2, [r3, #28]
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  97              		.loc 1 192 0
  98 001a FFF7FEFF 		bl	HAL_MspDeInit
  99              	.LVL0:
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 100              		.loc 1 196 0
 101 001e 0020     		movs	r0, #0
 102              		@ sp needed
 103 0020 10BD     		pop	{r4, pc}
 104              	.L5:
 105 0022 C046     		.align	2
 106              	.L4:
 107 0024 00100240 		.word	1073876992
 108              		.cfi_endproc
 109              	.LFE35:
 111              		.global	__aeabi_uidiv
 112              		.section	.text.HAL_InitTick,"ax",%progbits
 113              		.align	1
 114              		.weak	HAL_InitTick
 115              		.syntax unified
 116              		.code	16
 117              		.thumb_func
 118              		.fpu softvfp
 120              	HAL_InitTick:
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 7


 121              	.LFB38:
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the source of the time base:
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The time source is configured to have 1ms time base with a dedicated
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Tick interrupt priority.
 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementation  in user file.
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 122              		.loc 1 237 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL1:
 127 0000 10B5     		push	{r4, lr}
 128              	.LCFI1:
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 4, -8
 131              		.cfi_offset 14, -4
 132 0002 0400     		movs	r4, r0
 133              	.LVL2:
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /*Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock/1000UL) != 0U)
 134              		.loc 1 241 0
 135 0004 094B     		ldr	r3, .L10
 136 0006 1868     		ldr	r0, [r3]
 137              	.LVL3:
 138 0008 FA21     		movs	r1, #250
 139 000a 8900     		lsls	r1, r1, #2
 140 000c FFF7FEFF 		bl	__aeabi_uidiv
 141              	.LVL4:
 142 0010 FFF7FEFF 		bl	HAL_SYSTICK_Config
 143              	.LVL5:
 144 0014 0028     		cmp	r0, #0
 145 0016 01D0     		beq	.L9
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_ERROR;
 146              		.loc 1 243 0
 147 0018 0120     		movs	r0, #1
 148              	.L7:
 149              	.LVL6:
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 8


 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /*Configure the SysTick IRQ priority */
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0);
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 150              		.loc 1 253 0
 151              		@ sp needed
 152              	.LVL7:
 153 001a 10BD     		pop	{r4, pc}
 154              	.LVL8:
 155              	.L9:
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 156              		.loc 1 248 0
 157 001c 0130     		adds	r0, r0, #1
 158 001e 0022     		movs	r2, #0
 159 0020 2100     		movs	r1, r4
 160 0022 4042     		rsbs	r0, r0, #0
 161 0024 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 162              	.LVL9:
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 163              		.loc 1 238 0
 164 0028 0020     		movs	r0, #0
 165 002a F6E7     		b	.L7
 166              	.L11:
 167              		.align	2
 168              	.L10:
 169 002c 00000000 		.word	SystemCoreClock
 170              		.cfi_endproc
 171              	.LFE38:
 173              		.section	.text.HAL_Init,"ax",%progbits
 174              		.align	1
 175              		.global	HAL_Init
 176              		.syntax unified
 177              		.code	16
 178              		.thumb_func
 179              		.fpu softvfp
 181              	HAL_Init:
 182              	.LFB34:
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
 183              		.loc 1 139 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 10B5     		push	{r4, lr}
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 192              	.LVL10:
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 193              		.loc 1 148 0
 194 0002 084A     		ldr	r2, .L16
 195 0004 1368     		ldr	r3, [r2]
 196 0006 4021     		movs	r1, #64
 197 0008 0B43     		orrs	r3, r1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 9


 198 000a 1360     		str	r3, [r2]
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 199              		.loc 1 156 0
 200 000c 0020     		movs	r0, #0
 201 000e FFF7FEFF 		bl	HAL_InitTick
 202              	.LVL11:
 203 0012 041E     		subs	r4, r0, #0
 204 0014 02D0     		beq	.L15
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 205              		.loc 1 158 0
 206 0016 0124     		movs	r4, #1
 207              	.L13:
 208              	.LVL12:
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 209              		.loc 1 168 0
 210 0018 2000     		movs	r0, r4
 211              		@ sp needed
 212              	.LVL13:
 213 001a 10BD     		pop	{r4, pc}
 214              	.LVL14:
 215              	.L15:
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 216              		.loc 1 163 0
 217 001c FFF7FEFF 		bl	HAL_MspInit
 218              	.LVL15:
 219 0020 FAE7     		b	.L13
 220              	.L17:
 221 0022 C046     		.align	2
 222              	.L16:
 223 0024 00200240 		.word	1073881088
 224              		.cfi_endproc
 225              	.LFE34:
 227              		.section	.text.HAL_IncTick,"ax",%progbits
 228              		.align	1
 229              		.weak	HAL_IncTick
 230              		.syntax unified
 231              		.code	16
 232              		.thumb_func
 233              		.fpu softvfp
 235              	HAL_IncTick:
 236              	.LFB39:
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Control functions
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Control functions #####
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a tick value in millisecond
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Suspend the time base source interrupt
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 10


 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Resume the time base source interrupt
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the HAL API driver version
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device identifier
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device revision identifier
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        used as application time base.
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       in SysTick ISR.
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      implementations in user file.
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_IncTick(void)
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 237              		.loc 1 289 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uwTick++;
 242              		.loc 1 290 0
 243 0000 024A     		ldr	r2, .L19
 244 0002 1368     		ldr	r3, [r2]
 245 0004 0133     		adds	r3, r3, #1
 246 0006 1360     		str	r3, [r2]
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 247              		.loc 1 291 0
 248              		@ sp needed
 249 0008 7047     		bx	lr
 250              	.L20:
 251 000a C046     		.align	2
 252              	.L19:
 253 000c 00000000 		.word	uwTick
 254              		.cfi_endproc
 255              	.LFE39:
 257              		.section	.text.HAL_GetTick,"ax",%progbits
 258              		.align	1
 259              		.weak	HAL_GetTick
 260              		.syntax unified
 261              		.code	16
 262              		.thumb_func
 263              		.fpu softvfp
 265              	HAL_GetTick:
 266              	.LFB40:
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick value
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 11


 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 267              		.loc 1 300 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTick;
 272              		.loc 1 301 0
 273 0000 014B     		ldr	r3, .L22
 274 0002 1868     		ldr	r0, [r3]
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 275              		.loc 1 302 0
 276              		@ sp needed
 277 0004 7047     		bx	lr
 278              	.L23:
 279 0006 C046     		.align	2
 280              	.L22:
 281 0008 00000000 		.word	uwTick
 282              		.cfi_endproc
 283              	.LFE40:
 285              		.section	.text.HAL_Delay,"ax",%progbits
 286              		.align	1
 287              		.weak	HAL_Delay
 288              		.syntax unified
 289              		.code	16
 290              		.thumb_func
 291              		.fpu softvfp
 293              	HAL_Delay:
 294              	.LFB41:
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        on variable incremented.
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is incremented.
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 295              		.loc 1 316 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL16:
 300 0000 70B5     		push	{r4, r5, r6, lr}
 301              	.LCFI3:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 4, -16
 304              		.cfi_offset 5, -12
 305              		.cfi_offset 6, -8
 306              		.cfi_offset 14, -4
 307 0002 0400     		movs	r4, r0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 12


 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 308              		.loc 1 317 0
 309 0004 FFF7FEFF 		bl	HAL_GetTick
 310              	.LVL17:
 311 0008 0500     		movs	r5, r0
 312              	.LVL18:
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t wait = Delay;
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Add a period to guaranty minimum wait */
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 313              		.loc 1 321 0
 314 000a 631C     		adds	r3, r4, #1
 315 000c 00D0     		beq	.L26
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     wait++;
 316              		.loc 1 323 0
 317 000e 0134     		adds	r4, r4, #1
 318              	.LVL19:
 319              	.L26:
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 320              		.loc 1 326 0 discriminator 1
 321 0010 FFF7FEFF 		bl	HAL_GetTick
 322              	.LVL20:
 323 0014 401B     		subs	r0, r0, r5
 324 0016 A042     		cmp	r0, r4
 325 0018 FAD3     		bcc	.L26
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 326              		.loc 1 329 0
 327              		@ sp needed
 328              	.LVL21:
 329              	.LVL22:
 330 001a 70BD     		pop	{r4, r5, r6, pc}
 331              		.cfi_endproc
 332              	.LFE41:
 334              		.section	.text.HAL_SuspendTick,"ax",%progbits
 335              		.align	1
 336              		.weak	HAL_SuspendTick
 337              		.syntax unified
 338              		.code	16
 339              		.thumb_func
 340              		.fpu softvfp
 342              	HAL_SuspendTick:
 343              	.LFB42:
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Suspends the Tick increment.
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is suspended.
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 13


 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_SuspendTick(void)
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 344              		.loc 1 342 0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 0
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348              		@ link register save eliminated.
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Disable SysTick Interrupt */
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 349              		.loc 1 344 0
 350 0000 024A     		ldr	r2, .L28
 351 0002 1368     		ldr	r3, [r2]
 352 0004 0221     		movs	r1, #2
 353 0006 8B43     		bics	r3, r1
 354 0008 1360     		str	r3, [r2]
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 355              		.loc 1 345 0
 356              		@ sp needed
 357 000a 7047     		bx	lr
 358              	.L29:
 359              		.align	2
 360              	.L28:
 361 000c 10E000E0 		.word	-536813552
 362              		.cfi_endproc
 363              	.LFE42:
 365              		.section	.text.HAL_ResumeTick,"ax",%progbits
 366              		.align	1
 367              		.weak	HAL_ResumeTick
 368              		.syntax unified
 369              		.code	16
 370              		.thumb_func
 371              		.fpu softvfp
 373              	HAL_ResumeTick:
 374              	.LFB43:
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Resumes the Tick increment.
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is resumed.
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_ResumeTick(void)
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 375              		.loc 1 358 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Enable SysTick Interrupt */
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 380              		.loc 1 360 0
 381 0000 024A     		ldr	r2, .L31
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 14


 382 0002 1368     		ldr	r3, [r2]
 383 0004 0221     		movs	r1, #2
 384 0006 0B43     		orrs	r3, r1
 385 0008 1360     		str	r3, [r2]
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 386              		.loc 1 361 0
 387              		@ sp needed
 388 000a 7047     		bx	lr
 389              	.L32:
 390              		.align	2
 391              	.L31:
 392 000c 10E000E0 		.word	-536813552
 393              		.cfi_endproc
 394              	.LFE43:
 396              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 397              		.align	1
 398              		.global	HAL_GetHalVersion
 399              		.syntax unified
 400              		.code	16
 401              		.thumb_func
 402              		.fpu softvfp
 404              	HAL_GetHalVersion:
 405              	.LFB44:
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the HAL revision
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 406              		.loc 1 368 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return __STM32L0xx_HAL_VERSION;
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 411              		.loc 1 370 0
 412 0000 0048     		ldr	r0, .L34
 413              		@ sp needed
 414 0002 7047     		bx	lr
 415              	.L35:
 416              		.align	2
 417              	.L34:
 418 0004 00020A01 		.word	17433088
 419              		.cfi_endproc
 420              	.LFE44:
 422              		.section	.text.HAL_GetREVID,"ax",%progbits
 423              		.align	1
 424              		.global	HAL_GetREVID
 425              		.syntax unified
 426              		.code	16
 427              		.thumb_func
 428              		.fpu softvfp
 430              	HAL_GetREVID:
 431              	.LFB45:
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 15


 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the device revision identifier.
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device revision identifier
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetREVID(void)
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 432              		.loc 1 377 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 0, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 437              		.loc 1 378 0
 438 0000 014B     		ldr	r3, .L37
 439 0002 1868     		ldr	r0, [r3]
 440 0004 000C     		lsrs	r0, r0, #16
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 441              		.loc 1 379 0
 442              		@ sp needed
 443 0006 7047     		bx	lr
 444              	.L38:
 445              		.align	2
 446              	.L37:
 447 0008 00580140 		.word	1073829888
 448              		.cfi_endproc
 449              	.LFE45:
 451              		.section	.text.HAL_GetDEVID,"ax",%progbits
 452              		.align	1
 453              		.global	HAL_GetDEVID
 454              		.syntax unified
 455              		.code	16
 456              		.thumb_func
 457              		.fpu softvfp
 459              	HAL_GetDEVID:
 460              	.LFB46:
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the device identifier.
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 461              		.loc 1 386 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 466              		.loc 1 387 0
 467 0000 024B     		ldr	r3, .L40
 468 0002 1868     		ldr	r0, [r3]
 469 0004 0005     		lsls	r0, r0, #20
 470 0006 000D     		lsrs	r0, r0, #20
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 471              		.loc 1 388 0
 472              		@ sp needed
 473 0008 7047     		bx	lr
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 16


 474              	.L41:
 475 000a C046     		.align	2
 476              	.L40:
 477 000c 00580140 		.word	1073829888
 478              		.cfi_endproc
 479              	.LFE46:
 481              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 482              		.align	1
 483              		.global	HAL_GetUIDw0
 484              		.syntax unified
 485              		.code	16
 486              		.thumb_func
 487              		.fpu softvfp
 489              	HAL_GetUIDw0:
 490              	.LFB47:
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the first word of the unique device identifier (UID based on 96 bits)
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 491              		.loc 1 395 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 496              		.loc 1 396 0
 497 0000 014B     		ldr	r3, .L43
 498 0002 1868     		ldr	r0, [r3]
 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 499              		.loc 1 397 0
 500              		@ sp needed
 501 0004 7047     		bx	lr
 502              	.L44:
 503 0006 C046     		.align	2
 504              	.L43:
 505 0008 5000F81F 		.word	536346704
 506              		.cfi_endproc
 507              	.LFE47:
 509              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 510              		.align	1
 511              		.global	HAL_GetUIDw1
 512              		.syntax unified
 513              		.code	16
 514              		.thumb_func
 515              		.fpu softvfp
 517              	HAL_GetUIDw1:
 518              	.LFB48:
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the second word of the unique device identifier (UID based on 96 bits)
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 17


 519              		.loc 1 404 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x04U))));
 524              		.loc 1 405 0
 525 0000 014B     		ldr	r3, .L46
 526 0002 1868     		ldr	r0, [r3]
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 527              		.loc 1 406 0
 528              		@ sp needed
 529 0004 7047     		bx	lr
 530              	.L47:
 531 0006 C046     		.align	2
 532              	.L46:
 533 0008 5400F81F 		.word	536346708
 534              		.cfi_endproc
 535              	.LFE48:
 537              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 538              		.align	1
 539              		.global	HAL_GetUIDw2
 540              		.syntax unified
 541              		.code	16
 542              		.thumb_func
 543              		.fpu softvfp
 545              	HAL_GetUIDw2:
 546              	.LFB49:
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the third word of the unique device identifier (UID based on 96 bits)
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 547              		.loc 1 413 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x14U))));
 552              		.loc 1 414 0
 553 0000 014B     		ldr	r3, .L49
 554 0002 1868     		ldr	r0, [r3]
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 555              		.loc 1 415 0
 556              		@ sp needed
 557 0004 7047     		bx	lr
 558              	.L50:
 559 0006 C046     		.align	2
 560              	.L49:
 561 0008 6400F81F 		.word	536346724
 562              		.cfi_endproc
 563              	.LFE49:
 565              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 566              		.align	1
 567              		.global	HAL_DBGMCU_EnableDBGSleepMode
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 18


 568              		.syntax unified
 569              		.code	16
 570              		.thumb_func
 571              		.fpu softvfp
 573              	HAL_DBGMCU_EnableDBGSleepMode:
 574              	.LFB50:
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Debug functions
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Debug functions #####
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during SLEEP mode
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 575              		.loc 1 442 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 580              		.loc 1 443 0
 581 0000 024A     		ldr	r2, .L52
 582 0002 5368     		ldr	r3, [r2, #4]
 583 0004 0121     		movs	r1, #1
 584 0006 0B43     		orrs	r3, r1
 585 0008 5360     		str	r3, [r2, #4]
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 586              		.loc 1 444 0
 587              		@ sp needed
 588 000a 7047     		bx	lr
 589              	.L53:
 590              		.align	2
 591              	.L52:
 592 000c 00580140 		.word	1073829888
 593              		.cfi_endproc
 594              	.LFE50:
 596              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 597              		.align	1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 19


 598              		.global	HAL_DBGMCU_DisableDBGSleepMode
 599              		.syntax unified
 600              		.code	16
 601              		.thumb_func
 602              		.fpu softvfp
 604              	HAL_DBGMCU_DisableDBGSleepMode:
 605              	.LFB51:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during SLEEP mode
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 606              		.loc 1 451 0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 0
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		@ link register save eliminated.
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 611              		.loc 1 452 0
 612 0000 024A     		ldr	r2, .L55
 613 0002 5368     		ldr	r3, [r2, #4]
 614 0004 0121     		movs	r1, #1
 615 0006 8B43     		bics	r3, r1
 616 0008 5360     		str	r3, [r2, #4]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 617              		.loc 1 453 0
 618              		@ sp needed
 619 000a 7047     		bx	lr
 620              	.L56:
 621              		.align	2
 622              	.L55:
 623 000c 00580140 		.word	1073829888
 624              		.cfi_endproc
 625              	.LFE51:
 627              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 628              		.align	1
 629              		.global	HAL_DBGMCU_EnableDBGStopMode
 630              		.syntax unified
 631              		.code	16
 632              		.thumb_func
 633              		.fpu softvfp
 635              	HAL_DBGMCU_EnableDBGStopMode:
 636              	.LFB52:
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STOP mode
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 637              		.loc 1 460 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              		@ link register save eliminated.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 20


 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 642              		.loc 1 461 0
 643 0000 024A     		ldr	r2, .L58
 644 0002 5368     		ldr	r3, [r2, #4]
 645 0004 0221     		movs	r1, #2
 646 0006 0B43     		orrs	r3, r1
 647 0008 5360     		str	r3, [r2, #4]
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 648              		.loc 1 462 0
 649              		@ sp needed
 650 000a 7047     		bx	lr
 651              	.L59:
 652              		.align	2
 653              	.L58:
 654 000c 00580140 		.word	1073829888
 655              		.cfi_endproc
 656              	.LFE52:
 658              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 659              		.align	1
 660              		.global	HAL_DBGMCU_DisableDBGStopMode
 661              		.syntax unified
 662              		.code	16
 663              		.thumb_func
 664              		.fpu softvfp
 666              	HAL_DBGMCU_DisableDBGStopMode:
 667              	.LFB53:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STOP mode
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 668              		.loc 1 469 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 673              		.loc 1 470 0
 674 0000 024A     		ldr	r2, .L61
 675 0002 5368     		ldr	r3, [r2, #4]
 676 0004 0221     		movs	r1, #2
 677 0006 8B43     		bics	r3, r1
 678 0008 5360     		str	r3, [r2, #4]
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 679              		.loc 1 471 0
 680              		@ sp needed
 681 000a 7047     		bx	lr
 682              	.L62:
 683              		.align	2
 684              	.L61:
 685 000c 00580140 		.word	1073829888
 686              		.cfi_endproc
 687              	.LFE53:
 689              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 690              		.align	1
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 21


 691              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 692              		.syntax unified
 693              		.code	16
 694              		.thumb_func
 695              		.fpu softvfp
 697              	HAL_DBGMCU_EnableDBGStandbyMode:
 698              	.LFB54:
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STANDBY mode
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 699              		.loc 1 478 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 704              		.loc 1 479 0
 705 0000 024A     		ldr	r2, .L64
 706 0002 5368     		ldr	r3, [r2, #4]
 707 0004 0421     		movs	r1, #4
 708 0006 0B43     		orrs	r3, r1
 709 0008 5360     		str	r3, [r2, #4]
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 710              		.loc 1 480 0
 711              		@ sp needed
 712 000a 7047     		bx	lr
 713              	.L65:
 714              		.align	2
 715              	.L64:
 716 000c 00580140 		.word	1073829888
 717              		.cfi_endproc
 718              	.LFE54:
 720              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 721              		.align	1
 722              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 723              		.syntax unified
 724              		.code	16
 725              		.thumb_func
 726              		.fpu softvfp
 728              	HAL_DBGMCU_DisableDBGStandbyMode:
 729              	.LFB55:
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STANDBY mode
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 730              		.loc 1 487 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              		@ link register save eliminated.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 22


 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 735              		.loc 1 488 0
 736 0000 024A     		ldr	r2, .L67
 737 0002 5368     		ldr	r3, [r2, #4]
 738 0004 0421     		movs	r1, #4
 739 0006 8B43     		bics	r3, r1
 740 0008 5360     		str	r3, [r2, #4]
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 741              		.loc 1 489 0
 742              		@ sp needed
 743 000a 7047     		bx	lr
 744              	.L68:
 745              		.align	2
 746              	.L67:
 747 000c 00580140 		.word	1073829888
 748              		.cfi_endproc
 749              	.LFE55:
 751              		.section	.text.HAL_DBGMCU_DBG_EnableLowPowerConfig,"ax",%progbits
 752              		.align	1
 753              		.global	HAL_DBGMCU_DBG_EnableLowPowerConfig
 754              		.syntax unified
 755              		.code	16
 756              		.thumb_func
 757              		.fpu softvfp
 759              	HAL_DBGMCU_DBG_EnableLowPowerConfig:
 760              	.LFB56:
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enable low power mode behavior when the MCU is in Debug mode.
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_EnableLowPowerConfig(uint32_t Periph)
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 761              		.loc 1 501 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL23:
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   DBGMCU->CR |= Periph;
 767              		.loc 1 505 0
 768 0000 024A     		ldr	r2, .L70
 769 0002 5368     		ldr	r3, [r2, #4]
 770 0004 1843     		orrs	r0, r3
 771              	.LVL24:
 772 0006 5060     		str	r0, [r2, #4]
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 773              		.loc 1 507 0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 23


 774              		@ sp needed
 775 0008 7047     		bx	lr
 776              	.L71:
 777 000a C046     		.align	2
 778              	.L70:
 779 000c 00580140 		.word	1073829888
 780              		.cfi_endproc
 781              	.LFE56:
 783              		.section	.text.HAL_DBGMCU_DBG_DisableLowPowerConfig,"ax",%progbits
 784              		.align	1
 785              		.global	HAL_DBGMCU_DBG_DisableLowPowerConfig
 786              		.syntax unified
 787              		.code	16
 788              		.thumb_func
 789              		.fpu softvfp
 791              	HAL_DBGMCU_DBG_DisableLowPowerConfig:
 792              	.LFB57:
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disable low power mode behavior when the MCU is in Debug mode.
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_DisableLowPowerConfig(uint32_t Periph)
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 793              		.loc 1 518 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798              	.LVL25:
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     DBGMCU->CR &= ~Periph;
 799              		.loc 1 522 0
 800 0000 024A     		ldr	r2, .L73
 801 0002 5368     		ldr	r3, [r2, #4]
 802 0004 8343     		bics	r3, r0
 803 0006 5360     		str	r3, [r2, #4]
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 804              		.loc 1 524 0
 805              		@ sp needed
 806 0008 7047     		bx	lr
 807              	.L74:
 808 000a C046     		.align	2
 809              	.L73:
 810 000c 00580140 		.word	1073829888
 811              		.cfi_endproc
 812              	.LFE57:
 814              		.section	.text.HAL_SYSCFG_GetBootMode,"ax",%progbits
 815              		.align	1
 816              		.global	HAL_SYSCFG_GetBootMode
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 24


 817              		.syntax unified
 818              		.code	16
 819              		.thumb_func
 820              		.fpu softvfp
 822              	HAL_SYSCFG_GetBootMode:
 823              	.LFB58:
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL SYSCFG configuration functions
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Return the boot mode
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Select the output of internal reference voltage (VREFINT)
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Lock/Unlock the SYSCFG VREF register values
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the boot mode as configured by user.
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval The boot mode as configured by user. The returned value can be one
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *         of the following values:
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000000 : Boot is configured in Main Flash memory
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000100 : Boot is configured in System Flash memory
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000300 : Boot is configured in Embedded SRAM memory
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t  HAL_SYSCFG_GetBootMode(void)
 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 824              		.loc 1 555 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return (SYSCFG->CFGR1 & SYSCFG_CFGR1_BOOT_MODE);
 829              		.loc 1 556 0
 830 0000 024B     		ldr	r3, .L76
 831 0002 1868     		ldr	r0, [r3]
 832 0004 C023     		movs	r3, #192
 833 0006 9B00     		lsls	r3, r3, #2
 834 0008 1840     		ands	r0, r3
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 835              		.loc 1 557 0
 836              		@ sp needed
 837 000a 7047     		bx	lr
 838              	.L77:
 839              		.align	2
 840              	.L76:
 841 000c 00000140 		.word	1073807360
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 25


 842              		.cfi_endproc
 843              	.LFE58:
 845              		.section	.text.HAL_SYSCFG_VREFINT_OutputSelect,"ax",%progbits
 846              		.align	1
 847              		.global	HAL_SYSCFG_VREFINT_OutputSelect
 848              		.syntax unified
 849              		.code	16
 850              		.thumb_func
 851              		.fpu softvfp
 853              	HAL_SYSCFG_VREFINT_OutputSelect:
 854              	.LFB59:
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Selects the output of internal reference voltage (VREFINT).
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The VREFINT output can be routed to(PB0) or
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        (PB1) or both.
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param SYSCFG_Vrefint_OUTPUT: new state of the Vrefint output.
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        This parameter can be one of the following values:
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_NONE
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB1
 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0_PB1
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_VREFINT_OutputSelect(uint32_t SYSCFG_Vrefint_OUTPUT)
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 855              		.loc 1 572 0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
 860              	.LVL26:
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_SYSCFG_VREFINT_OUT_SELECT(SYSCFG_Vrefint_OUTPUT));
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Set the output Vrefint pin */
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 &= ~(SYSCFG_CFGR3_VREF_OUT);
 861              		.loc 1 577 0
 862 0000 044B     		ldr	r3, .L79
 863 0002 1A6A     		ldr	r2, [r3, #32]
 864 0004 3021     		movs	r1, #48
 865 0006 8A43     		bics	r2, r1
 866 0008 1A62     		str	r2, [r3, #32]
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 |= (uint32_t)(SYSCFG_Vrefint_OUTPUT);
 867              		.loc 1 578 0
 868 000a 1A6A     		ldr	r2, [r3, #32]
 869 000c 1043     		orrs	r0, r2
 870              	.LVL27:
 871 000e 1862     		str	r0, [r3, #32]
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 872              		.loc 1 579 0
 873              		@ sp needed
 874 0010 7047     		bx	lr
 875              	.L80:
 876 0012 C046     		.align	2
 877              	.L79:
 878 0014 00000140 		.word	1073807360
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 26


 879              		.cfi_endproc
 880              	.LFE59:
 882              		.section	.text.HAL_SYSCFG_Enable_Lock_VREFINT,"ax",%progbits
 883              		.align	1
 884              		.global	HAL_SYSCFG_Enable_Lock_VREFINT
 885              		.syntax unified
 886              		.code	16
 887              		.thumb_func
 888              		.fpu softvfp
 890              	HAL_SYSCFG_Enable_Lock_VREFINT:
 891              	.LFB60:
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Lock the SYSCFG VREF register values
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Enable_Lock_VREFINT(void)
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 892              		.loc 1 586 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Enable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 897              		.loc 1 588 0
 898 0000 034A     		ldr	r2, .L82
 899 0002 116A     		ldr	r1, [r2, #32]
 900 0004 8023     		movs	r3, #128
 901 0006 1B06     		lsls	r3, r3, #24
 902 0008 0B43     		orrs	r3, r1
 903 000a 1362     		str	r3, [r2, #32]
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 904              		.loc 1 589 0
 905              		@ sp needed
 906 000c 7047     		bx	lr
 907              	.L83:
 908 000e C046     		.align	2
 909              	.L82:
 910 0010 00000140 		.word	1073807360
 911              		.cfi_endproc
 912              	.LFE60:
 914              		.section	.text.HAL_SYSCFG_Disable_Lock_VREFINT,"ax",%progbits
 915              		.align	1
 916              		.global	HAL_SYSCFG_Disable_Lock_VREFINT
 917              		.syntax unified
 918              		.code	16
 919              		.thumb_func
 920              		.fpu softvfp
 922              	HAL_SYSCFG_Disable_Lock_VREFINT:
 923              	.LFB61:
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Unlock the overall SYSCFG VREF register values
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Disable_Lock_VREFINT(void)
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 27


 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 924              		.loc 1 596 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              		@ link register save eliminated.
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Disable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 929              		.loc 1 598 0
 930 0000 024A     		ldr	r2, .L85
 931 0002 136A     		ldr	r3, [r2, #32]
 932 0004 5B00     		lsls	r3, r3, #1
 933 0006 5B08     		lsrs	r3, r3, #1
 934 0008 1362     		str	r3, [r2, #32]
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 935              		.loc 1 599 0
 936              		@ sp needed
 937 000a 7047     		bx	lr
 938              	.L86:
 939              		.align	2
 940              	.L85:
 941 000c 00000140 		.word	1073807360
 942              		.cfi_endproc
 943              	.LFE61:
 945              		.comm	uwTick,4,4
 946              		.text
 947              	.Letext0:
 948              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 949              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 950              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 951              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 952              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 953              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 954              		.file 8 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 955              		.file 9 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_cortex.h"
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l0xx_hal.c
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:16     .text.HAL_MspInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:23     .text.HAL_MspInit:00000000 HAL_MspInit
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:38     .text.HAL_MspDeInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:45     .text.HAL_MspDeInit:00000000 HAL_MspDeInit
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:59     .text.HAL_DeInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:66     .text.HAL_DeInit:00000000 HAL_DeInit
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:107    .text.HAL_DeInit:00000024 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:113    .text.HAL_InitTick:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:120    .text.HAL_InitTick:00000000 HAL_InitTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:169    .text.HAL_InitTick:0000002c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:174    .text.HAL_Init:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:181    .text.HAL_Init:00000000 HAL_Init
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:223    .text.HAL_Init:00000024 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:228    .text.HAL_IncTick:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:235    .text.HAL_IncTick:00000000 HAL_IncTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:253    .text.HAL_IncTick:0000000c $d
                            *COM*:00000004 uwTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:258    .text.HAL_GetTick:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:265    .text.HAL_GetTick:00000000 HAL_GetTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:281    .text.HAL_GetTick:00000008 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:286    .text.HAL_Delay:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:293    .text.HAL_Delay:00000000 HAL_Delay
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:335    .text.HAL_SuspendTick:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:342    .text.HAL_SuspendTick:00000000 HAL_SuspendTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:361    .text.HAL_SuspendTick:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:366    .text.HAL_ResumeTick:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:373    .text.HAL_ResumeTick:00000000 HAL_ResumeTick
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:392    .text.HAL_ResumeTick:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:397    .text.HAL_GetHalVersion:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:404    .text.HAL_GetHalVersion:00000000 HAL_GetHalVersion
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:418    .text.HAL_GetHalVersion:00000004 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:423    .text.HAL_GetREVID:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:430    .text.HAL_GetREVID:00000000 HAL_GetREVID
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:447    .text.HAL_GetREVID:00000008 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:452    .text.HAL_GetDEVID:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:459    .text.HAL_GetDEVID:00000000 HAL_GetDEVID
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:477    .text.HAL_GetDEVID:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:482    .text.HAL_GetUIDw0:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:489    .text.HAL_GetUIDw0:00000000 HAL_GetUIDw0
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:505    .text.HAL_GetUIDw0:00000008 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:510    .text.HAL_GetUIDw1:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:517    .text.HAL_GetUIDw1:00000000 HAL_GetUIDw1
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:533    .text.HAL_GetUIDw1:00000008 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:538    .text.HAL_GetUIDw2:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:545    .text.HAL_GetUIDw2:00000000 HAL_GetUIDw2
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:561    .text.HAL_GetUIDw2:00000008 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:566    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:573    .text.HAL_DBGMCU_EnableDBGSleepMode:00000000 HAL_DBGMCU_EnableDBGSleepMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:592    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:597    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:604    .text.HAL_DBGMCU_DisableDBGSleepMode:00000000 HAL_DBGMCU_DisableDBGSleepMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:623    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:628    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:635    .text.HAL_DBGMCU_EnableDBGStopMode:00000000 HAL_DBGMCU_EnableDBGStopMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:654    .text.HAL_DBGMCU_EnableDBGStopMode:0000000c $d
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s 			page 29


C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:659    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:666    .text.HAL_DBGMCU_DisableDBGStopMode:00000000 HAL_DBGMCU_DisableDBGStopMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:685    .text.HAL_DBGMCU_DisableDBGStopMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:690    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:697    .text.HAL_DBGMCU_EnableDBGStandbyMode:00000000 HAL_DBGMCU_EnableDBGStandbyMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:716    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:721    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:728    .text.HAL_DBGMCU_DisableDBGStandbyMode:00000000 HAL_DBGMCU_DisableDBGStandbyMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:747    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:752    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:759    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:00000000 HAL_DBGMCU_DBG_EnableLowPowerConfig
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:779    .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:784    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:791    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:00000000 HAL_DBGMCU_DBG_DisableLowPowerConfig
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:810    .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:815    .text.HAL_SYSCFG_GetBootMode:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:822    .text.HAL_SYSCFG_GetBootMode:00000000 HAL_SYSCFG_GetBootMode
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:841    .text.HAL_SYSCFG_GetBootMode:0000000c $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:846    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:853    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000000 HAL_SYSCFG_VREFINT_OutputSelect
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:878    .text.HAL_SYSCFG_VREFINT_OutputSelect:00000014 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:883    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:890    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000000 HAL_SYSCFG_Enable_Lock_VREFINT
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:910    .text.HAL_SYSCFG_Enable_Lock_VREFINT:00000010 $d
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:915    .text.HAL_SYSCFG_Disable_Lock_VREFINT:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:922    .text.HAL_SYSCFG_Disable_Lock_VREFINT:00000000 HAL_SYSCFG_Disable_Lock_VREFINT
C:\Users\Nicolas\AppData\Local\Temp\cc7waDfS.s:941    .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
