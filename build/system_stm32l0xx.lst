ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"system_stm32l0xx.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.SystemInit,"ax",%progbits
  16              		.align	1
  17              		.global	SystemInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	SystemInit:
  24              	.LFB34:
  25              		.file 1 "Src/system_stm32l0xx.c"
   1:Src/system_stm32l0xx.c **** /**
   2:Src/system_stm32l0xx.c ****   ******************************************************************************
   3:Src/system_stm32l0xx.c ****   * @file    system_stm32l0xx.c
   4:Src/system_stm32l0xx.c ****   * @author  MCD Application Team
   5:Src/system_stm32l0xx.c ****   * @brief   CMSIS Cortex-M0+ Device Peripheral Access Layer System Source File.
   6:Src/system_stm32l0xx.c ****   *
   7:Src/system_stm32l0xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Src/system_stm32l0xx.c ****   *   user application:
   9:Src/system_stm32l0xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Src/system_stm32l0xx.c ****   *                      before branch to main program. This call is made inside
  11:Src/system_stm32l0xx.c ****   *                      the "startup_stm32l0xx.s" file.
  12:Src/system_stm32l0xx.c ****   *
  13:Src/system_stm32l0xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Src/system_stm32l0xx.c ****   *                                  by the user application to setup the SysTick
  15:Src/system_stm32l0xx.c ****   *                                  timer or configure other parameters.
  16:Src/system_stm32l0xx.c ****   *
  17:Src/system_stm32l0xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Src/system_stm32l0xx.c ****   *                                 be called whenever the core clock is changed
  19:Src/system_stm32l0xx.c ****   *                                 during program execution.
  20:Src/system_stm32l0xx.c ****   *
  21:Src/system_stm32l0xx.c ****   *
  22:Src/system_stm32l0xx.c ****   ******************************************************************************
  23:Src/system_stm32l0xx.c ****   * @attention
  24:Src/system_stm32l0xx.c ****   *
  25:Src/system_stm32l0xx.c ****   * <h2><center>&copy; Copyright(c) 2016 STMicroelectronics.
  26:Src/system_stm32l0xx.c ****   * All rights reserved.</center></h2>
  27:Src/system_stm32l0xx.c ****   *
  28:Src/system_stm32l0xx.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  29:Src/system_stm32l0xx.c ****   * the "License"; You may not use this file except in compliance with the
  30:Src/system_stm32l0xx.c ****   * License. You may obtain a copy of the License at:
  31:Src/system_stm32l0xx.c ****   *                        opensource.org/licenses/BSD-3-Clause
  32:Src/system_stm32l0xx.c ****   *
  33:Src/system_stm32l0xx.c ****   ******************************************************************************
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 2


  34:Src/system_stm32l0xx.c ****   */
  35:Src/system_stm32l0xx.c **** 
  36:Src/system_stm32l0xx.c **** /** @addtogroup CMSIS
  37:Src/system_stm32l0xx.c ****   * @{
  38:Src/system_stm32l0xx.c ****   */
  39:Src/system_stm32l0xx.c **** 
  40:Src/system_stm32l0xx.c **** /** @addtogroup stm32l0xx_system
  41:Src/system_stm32l0xx.c ****   * @{
  42:Src/system_stm32l0xx.c ****   */
  43:Src/system_stm32l0xx.c **** 
  44:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Includes
  45:Src/system_stm32l0xx.c ****   * @{
  46:Src/system_stm32l0xx.c ****   */
  47:Src/system_stm32l0xx.c **** 
  48:Src/system_stm32l0xx.c **** #include "stm32l0xx.h"
  49:Src/system_stm32l0xx.c **** 
  50:Src/system_stm32l0xx.c **** #if !defined  (HSE_VALUE)
  51:Src/system_stm32l0xx.c ****   #define HSE_VALUE    ((uint32_t)8000000U) /*!< Value of the External oscillator in Hz */
  52:Src/system_stm32l0xx.c **** #endif /* HSE_VALUE */
  53:Src/system_stm32l0xx.c **** 
  54:Src/system_stm32l0xx.c **** #if !defined  (MSI_VALUE)
  55:Src/system_stm32l0xx.c ****   #define MSI_VALUE    ((uint32_t)2097152U) /*!< Value of the Internal oscillator in Hz*/
  56:Src/system_stm32l0xx.c **** #endif /* MSI_VALUE */
  57:Src/system_stm32l0xx.c **** 
  58:Src/system_stm32l0xx.c **** #if !defined  (HSI_VALUE)
  59:Src/system_stm32l0xx.c ****   #define HSI_VALUE    ((uint32_t)16000000U) /*!< Value of the Internal oscillator in Hz*/
  60:Src/system_stm32l0xx.c **** #endif /* HSI_VALUE */
  61:Src/system_stm32l0xx.c **** 
  62:Src/system_stm32l0xx.c **** 
  63:Src/system_stm32l0xx.c **** /**
  64:Src/system_stm32l0xx.c ****   * @}
  65:Src/system_stm32l0xx.c ****   */
  66:Src/system_stm32l0xx.c **** 
  67:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_TypesDefinitions
  68:Src/system_stm32l0xx.c ****   * @{
  69:Src/system_stm32l0xx.c ****   */
  70:Src/system_stm32l0xx.c **** 
  71:Src/system_stm32l0xx.c **** /**
  72:Src/system_stm32l0xx.c ****   * @}
  73:Src/system_stm32l0xx.c ****   */
  74:Src/system_stm32l0xx.c **** 
  75:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Defines
  76:Src/system_stm32l0xx.c ****   * @{
  77:Src/system_stm32l0xx.c ****   */
  78:Src/system_stm32l0xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Src/system_stm32l0xx.c **** 
  80:Src/system_stm32l0xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
  81:Src/system_stm32l0xx.c ****      Internal SRAM. */
  82:Src/system_stm32l0xx.c **** /* #define VECT_TAB_SRAM */
  83:Src/system_stm32l0xx.c **** #define VECT_TAB_OFFSET  0x00U /*!< Vector Table base offset field.
  84:Src/system_stm32l0xx.c ****                                    This value must be a multiple of 0x100. */
  85:Src/system_stm32l0xx.c **** /******************************************************************************/
  86:Src/system_stm32l0xx.c **** /**
  87:Src/system_stm32l0xx.c ****   * @}
  88:Src/system_stm32l0xx.c ****   */
  89:Src/system_stm32l0xx.c **** 
  90:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Macros
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 3


  91:Src/system_stm32l0xx.c ****   * @{
  92:Src/system_stm32l0xx.c ****   */
  93:Src/system_stm32l0xx.c **** 
  94:Src/system_stm32l0xx.c **** /**
  95:Src/system_stm32l0xx.c ****   * @}
  96:Src/system_stm32l0xx.c ****   */
  97:Src/system_stm32l0xx.c **** 
  98:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Variables
  99:Src/system_stm32l0xx.c ****   * @{
 100:Src/system_stm32l0xx.c ****   */
 101:Src/system_stm32l0xx.c ****   /* This variable is updated in three ways:
 102:Src/system_stm32l0xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 103:Src/system_stm32l0xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 104:Src/system_stm32l0xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 105:Src/system_stm32l0xx.c ****          Note: If you use this function to configure the system clock; then there
 106:Src/system_stm32l0xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 107:Src/system_stm32l0xx.c ****                variable is updated automatically.
 108:Src/system_stm32l0xx.c ****   */
 109:Src/system_stm32l0xx.c ****   uint32_t SystemCoreClock = 2097152U; /* 32.768 kHz * 2^6 */
 110:Src/system_stm32l0xx.c ****   const uint8_t AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9U
 111:Src/system_stm32l0xx.c ****   const uint8_t APBPrescTable[8] = {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 112:Src/system_stm32l0xx.c ****   const uint8_t PLLMulTable[9] = {3U, 4U, 6U, 8U, 12U, 16U, 24U, 32U, 48U};
 113:Src/system_stm32l0xx.c **** 
 114:Src/system_stm32l0xx.c **** /**
 115:Src/system_stm32l0xx.c ****   * @}
 116:Src/system_stm32l0xx.c ****   */
 117:Src/system_stm32l0xx.c **** 
 118:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_FunctionPrototypes
 119:Src/system_stm32l0xx.c ****   * @{
 120:Src/system_stm32l0xx.c ****   */
 121:Src/system_stm32l0xx.c **** 
 122:Src/system_stm32l0xx.c **** /**
 123:Src/system_stm32l0xx.c ****   * @}
 124:Src/system_stm32l0xx.c ****   */
 125:Src/system_stm32l0xx.c **** 
 126:Src/system_stm32l0xx.c **** /** @addtogroup STM32L0xx_System_Private_Functions
 127:Src/system_stm32l0xx.c ****   * @{
 128:Src/system_stm32l0xx.c ****   */
 129:Src/system_stm32l0xx.c **** 
 130:Src/system_stm32l0xx.c **** /**
 131:Src/system_stm32l0xx.c ****   * @brief  Setup the microcontroller system.
 132:Src/system_stm32l0xx.c ****   * @param  None
 133:Src/system_stm32l0xx.c ****   * @retval None
 134:Src/system_stm32l0xx.c ****   */
 135:Src/system_stm32l0xx.c **** void SystemInit (void)
 136:Src/system_stm32l0xx.c **** {
  26              		.loc 1 136 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
 137:Src/system_stm32l0xx.c **** /*!< Set MSION bit */
 138:Src/system_stm32l0xx.c ****   RCC->CR |= (uint32_t)0x00000100U;
  31              		.loc 1 138 0
  32 0000 104B     		ldr	r3, .L2
  33 0002 1968     		ldr	r1, [r3]
  34 0004 8022     		movs	r2, #128
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 4


  35 0006 5200     		lsls	r2, r2, #1
  36 0008 0A43     		orrs	r2, r1
  37 000a 1A60     		str	r2, [r3]
 139:Src/system_stm32l0xx.c **** 
 140:Src/system_stm32l0xx.c ****   /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
 141:Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t) 0x88FF400CU;
  38              		.loc 1 141 0
  39 000c DA68     		ldr	r2, [r3, #12]
  40 000e 0E49     		ldr	r1, .L2+4
  41 0010 0A40     		ands	r2, r1
  42 0012 DA60     		str	r2, [r3, #12]
 142:Src/system_stm32l0xx.c **** 
 143:Src/system_stm32l0xx.c ****   /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
 144:Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFF6U;
  43              		.loc 1 144 0
  44 0014 1A68     		ldr	r2, [r3]
  45 0016 0D49     		ldr	r1, .L2+8
  46 0018 0A40     		ands	r2, r1
  47 001a 1A60     		str	r2, [r3]
 145:Src/system_stm32l0xx.c **** 
 146:Src/system_stm32l0xx.c ****   /*!< Reset HSI48ON  bit */
 147:Src/system_stm32l0xx.c ****   RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
  48              		.loc 1 147 0
  49 001c 9A68     		ldr	r2, [r3, #8]
  50 001e 0121     		movs	r1, #1
  51 0020 8A43     		bics	r2, r1
  52 0022 9A60     		str	r2, [r3, #8]
 148:Src/system_stm32l0xx.c **** 
 149:Src/system_stm32l0xx.c ****   /*!< Reset HSEBYP bit */
 150:Src/system_stm32l0xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFFU;
  53              		.loc 1 150 0
  54 0024 1A68     		ldr	r2, [r3]
  55 0026 0A49     		ldr	r1, .L2+12
  56 0028 0A40     		ands	r2, r1
  57 002a 1A60     		str	r2, [r3]
 151:Src/system_stm32l0xx.c **** 
 152:Src/system_stm32l0xx.c ****   /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
 153:Src/system_stm32l0xx.c ****   RCC->CFGR &= (uint32_t)0xFF02FFFFU;
  58              		.loc 1 153 0
  59 002c DA68     		ldr	r2, [r3, #12]
  60 002e 0949     		ldr	r1, .L2+16
  61 0030 0A40     		ands	r2, r1
  62 0032 DA60     		str	r2, [r3, #12]
 154:Src/system_stm32l0xx.c **** 
 155:Src/system_stm32l0xx.c ****   /*!< Disable all interrupts */
 156:Src/system_stm32l0xx.c ****   RCC->CIER = 0x00000000U;
  63              		.loc 1 156 0
  64 0034 0022     		movs	r2, #0
  65 0036 1A61     		str	r2, [r3, #16]
 157:Src/system_stm32l0xx.c **** 
 158:Src/system_stm32l0xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 159:Src/system_stm32l0xx.c **** #ifdef VECT_TAB_SRAM
 160:Src/system_stm32l0xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 161:Src/system_stm32l0xx.c **** #else
 162:Src/system_stm32l0xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
  66              		.loc 1 162 0
  67 0038 074B     		ldr	r3, .L2+20
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 5


  68 003a 8022     		movs	r2, #128
  69 003c 1205     		lsls	r2, r2, #20
  70 003e 9A60     		str	r2, [r3, #8]
 163:Src/system_stm32l0xx.c **** #endif
 164:Src/system_stm32l0xx.c **** }
  71              		.loc 1 164 0
  72              		@ sp needed
  73 0040 7047     		bx	lr
  74              	.L3:
  75 0042 C046     		.align	2
  76              	.L2:
  77 0044 00100240 		.word	1073876992
  78 0048 0C40FF88 		.word	-1996537844
  79 004c F6FFF6FE 		.word	-17367050
  80 0050 FFFFFBFF 		.word	-262145
  81 0054 FFFF02FF 		.word	-16580609
  82 0058 00ED00E0 		.word	-536810240
  83              		.cfi_endproc
  84              	.LFE34:
  86              		.global	__aeabi_uidiv
  87              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  88              		.align	1
  89              		.global	SystemCoreClockUpdate
  90              		.syntax unified
  91              		.code	16
  92              		.thumb_func
  93              		.fpu softvfp
  95              	SystemCoreClockUpdate:
  96              	.LFB35:
 165:Src/system_stm32l0xx.c **** 
 166:Src/system_stm32l0xx.c **** /**
 167:Src/system_stm32l0xx.c ****   * @brief  Update SystemCoreClock according to Clock Register Values
 168:Src/system_stm32l0xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 169:Src/system_stm32l0xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 170:Src/system_stm32l0xx.c ****   *         other parameters.
 171:Src/system_stm32l0xx.c ****   *
 172:Src/system_stm32l0xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 173:Src/system_stm32l0xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 174:Src/system_stm32l0xx.c ****   *         based on this variable will be incorrect.
 175:Src/system_stm32l0xx.c ****   *
 176:Src/system_stm32l0xx.c ****   * @note   - The system frequency computed by this function is not the real
 177:Src/system_stm32l0xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 178:Src/system_stm32l0xx.c ****   *           constant and the selected clock source:
 179:Src/system_stm32l0xx.c ****   *
 180:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI
 181:Src/system_stm32l0xx.c ****   *             value as defined by the MSI range.
 182:Src/system_stm32l0xx.c ****   *
 183:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 184:Src/system_stm32l0xx.c ****   *
 185:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 186:Src/system_stm32l0xx.c ****   *
 187:Src/system_stm32l0xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**)
 188:Src/system_stm32l0xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 189:Src/system_stm32l0xx.c ****   *
 190:Src/system_stm32l0xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 191:Src/system_stm32l0xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 192:Src/system_stm32l0xx.c ****   *             in voltage and temperature.
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 6


 193:Src/system_stm32l0xx.c ****   *
 194:Src/system_stm32l0xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32l0xx_hal.h file (default value
 195:Src/system_stm32l0xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 196:Src/system_stm32l0xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 197:Src/system_stm32l0xx.c ****   *              have wrong result.
 198:Src/system_stm32l0xx.c ****   *
 199:Src/system_stm32l0xx.c ****   *         - The result of this function could be not correct when using fractional
 200:Src/system_stm32l0xx.c ****   *           value for HSE crystal.
 201:Src/system_stm32l0xx.c ****   * @param  None
 202:Src/system_stm32l0xx.c ****   * @retval None
 203:Src/system_stm32l0xx.c ****   */
 204:Src/system_stm32l0xx.c **** void SystemCoreClockUpdate (void)
 205:Src/system_stm32l0xx.c **** {
  97              		.loc 1 205 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101 0000 10B5     		push	{r4, lr}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 4, -8
 105              		.cfi_offset 14, -4
 106              	.LVL0:
 206:Src/system_stm32l0xx.c ****   uint32_t tmp = 0U, pllmul = 0U, plldiv = 0U, pllsource = 0U, msirange = 0U;
 207:Src/system_stm32l0xx.c **** 
 208:Src/system_stm32l0xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 209:Src/system_stm32l0xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 107              		.loc 1 209 0
 108 0002 344B     		ldr	r3, .L15
 109 0004 DA68     		ldr	r2, [r3, #12]
 110 0006 0C23     		movs	r3, #12
 111 0008 1340     		ands	r3, r2
 112              	.LVL1:
 210:Src/system_stm32l0xx.c **** 
 211:Src/system_stm32l0xx.c ****   switch (tmp)
 113              		.loc 1 211 0
 114 000a 042B     		cmp	r3, #4
 115 000c 39D0     		beq	.L6
 116 000e 082B     		cmp	r3, #8
 117 0010 43D0     		beq	.L7
 118 0012 002B     		cmp	r3, #0
 119 0014 1DD0     		beq	.L14
 212:Src/system_stm32l0xx.c ****   {
 213:Src/system_stm32l0xx.c ****     case 0x00U:  /* MSI used as system clock */
 214:Src/system_stm32l0xx.c ****       msirange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE) >> RCC_ICSCR_MSIRANGE_Pos;
 215:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 216:Src/system_stm32l0xx.c ****       break;
 217:Src/system_stm32l0xx.c ****     case 0x04U:  /* HSI used as system clock */
 218:Src/system_stm32l0xx.c ****       if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 219:Src/system_stm32l0xx.c ****       {
 220:Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE / 4U;
 221:Src/system_stm32l0xx.c ****       }
 222:Src/system_stm32l0xx.c ****       else
 223:Src/system_stm32l0xx.c ****       {
 224:Src/system_stm32l0xx.c ****         SystemCoreClock = HSI_VALUE;
 225:Src/system_stm32l0xx.c ****       }
 226:Src/system_stm32l0xx.c ****       break;
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 7


 227:Src/system_stm32l0xx.c ****     case 0x08U:  /* HSE used as system clock */
 228:Src/system_stm32l0xx.c ****       SystemCoreClock = HSE_VALUE;
 229:Src/system_stm32l0xx.c ****       break;
 230:Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 231:Src/system_stm32l0xx.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 232:Src/system_stm32l0xx.c ****       pllmul = RCC->CFGR & RCC_CFGR_PLLMUL;
 120              		.loc 1 232 0
 121 0016 2F4A     		ldr	r2, .L15
 122 0018 D068     		ldr	r0, [r2, #12]
 123              	.LVL2:
 233:Src/system_stm32l0xx.c ****       plldiv = RCC->CFGR & RCC_CFGR_PLLDIV;
 124              		.loc 1 233 0
 125 001a D168     		ldr	r1, [r2, #12]
 126              	.LVL3:
 234:Src/system_stm32l0xx.c ****       pllmul = PLLMulTable[(pllmul >> RCC_CFGR_PLLMUL_Pos)];
 127              		.loc 1 234 0
 128 001c 800C     		lsrs	r0, r0, #18
 129              	.LVL4:
 130 001e 0F23     		movs	r3, #15
 131              	.LVL5:
 132 0020 0340     		ands	r3, r0
 133 0022 2D48     		ldr	r0, .L15+4
 134 0024 C45C     		ldrb	r4, [r0, r3]
 135              	.LVL6:
 235:Src/system_stm32l0xx.c ****       plldiv = (plldiv >> RCC_CFGR_PLLDIV_Pos) + 1U;
 136              		.loc 1 235 0
 137 0026 880D     		lsrs	r0, r1, #22
 138 0028 0321     		movs	r1, #3
 139              	.LVL7:
 140 002a 0140     		ands	r1, r0
 141 002c 0131     		adds	r1, r1, #1
 142              	.LVL8:
 236:Src/system_stm32l0xx.c **** 
 237:Src/system_stm32l0xx.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 143              		.loc 1 237 0
 144 002e D368     		ldr	r3, [r2, #12]
 145              	.LVL9:
 238:Src/system_stm32l0xx.c **** 
 239:Src/system_stm32l0xx.c ****       if (pllsource == 0x00U)
 146              		.loc 1 239 0
 147 0030 DB03     		lsls	r3, r3, #15
 148 0032 42D4     		bmi	.L11
 149              	.LVL10:
 240:Src/system_stm32l0xx.c ****       {
 241:Src/system_stm32l0xx.c ****         /* HSI oscillator clock selected as PLL clock entry */
 242:Src/system_stm32l0xx.c ****         if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 150              		.loc 1 242 0
 151 0034 1368     		ldr	r3, [r2]
 152 0036 DB06     		lsls	r3, r3, #27
 153 0038 33D5     		bpl	.L12
 243:Src/system_stm32l0xx.c ****         {
 244:Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE / 4U) * pllmul) / plldiv);
 154              		.loc 1 244 0
 155 003a 6201     		lsls	r2, r4, #5
 156 003c 121B     		subs	r2, r2, r4
 157 003e 9301     		lsls	r3, r2, #6
 158 0040 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 8


 159 0042 DB00     		lsls	r3, r3, #3
 160 0044 1B19     		adds	r3, r3, r4
 161 0046 1802     		lsls	r0, r3, #8
 162 0048 FFF7FEFF 		bl	__aeabi_uidiv
 163              	.LVL11:
 164 004c 234B     		ldr	r3, .L15+8
 165 004e 1860     		str	r0, [r3]
 166 0050 0BE0     		b	.L9
 167              	.LVL12:
 168              	.L14:
 214:Src/system_stm32l0xx.c ****       SystemCoreClock = (32768U * (1U << (msirange + 1U)));
 169              		.loc 1 214 0
 170 0052 204B     		ldr	r3, .L15
 171              	.LVL13:
 172 0054 5A68     		ldr	r2, [r3, #4]
 173              	.LVL14:
 174 0056 520B     		lsrs	r2, r2, #13
 175 0058 0723     		movs	r3, #7
 176 005a 1340     		ands	r3, r2
 177              	.LVL15:
 215:Src/system_stm32l0xx.c ****       break;
 178              		.loc 1 215 0
 179 005c 0133     		adds	r3, r3, #1
 180              	.LVL16:
 181 005e 8022     		movs	r2, #128
 182 0060 1202     		lsls	r2, r2, #8
 183 0062 9A40     		lsls	r2, r2, r3
 184 0064 1300     		movs	r3, r2
 185              	.LVL17:
 186 0066 1D4A     		ldr	r2, .L15+8
 187 0068 1360     		str	r3, [r2]
 188              	.LVL18:
 189              	.L9:
 245:Src/system_stm32l0xx.c ****         }
 246:Src/system_stm32l0xx.c ****         else
 247:Src/system_stm32l0xx.c ****         {
 248:Src/system_stm32l0xx.c ****           SystemCoreClock = (((HSI_VALUE) * pllmul) / plldiv);
 249:Src/system_stm32l0xx.c ****         }
 250:Src/system_stm32l0xx.c ****       }
 251:Src/system_stm32l0xx.c ****       else
 252:Src/system_stm32l0xx.c ****       {
 253:Src/system_stm32l0xx.c ****         /* HSE selected as PLL clock entry */
 254:Src/system_stm32l0xx.c ****         SystemCoreClock = (((HSE_VALUE) * pllmul) / plldiv);
 255:Src/system_stm32l0xx.c ****       }
 256:Src/system_stm32l0xx.c ****       break;
 257:Src/system_stm32l0xx.c ****   }
 258:Src/system_stm32l0xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 259:Src/system_stm32l0xx.c ****   /* Get HCLK prescaler */
 260:Src/system_stm32l0xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 190              		.loc 1 260 0
 191 006a 1A4B     		ldr	r3, .L15
 192 006c DA68     		ldr	r2, [r3, #12]
 193 006e 1209     		lsrs	r2, r2, #4
 194 0070 0F23     		movs	r3, #15
 195 0072 1340     		ands	r3, r2
 196 0074 1A4A     		ldr	r2, .L15+12
 197 0076 D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 9


 198              	.LVL19:
 261:Src/system_stm32l0xx.c ****   /* HCLK clock frequency */
 262:Src/system_stm32l0xx.c ****   SystemCoreClock >>= tmp;
 199              		.loc 1 262 0
 200 0078 184A     		ldr	r2, .L15+8
 201 007a 1168     		ldr	r1, [r2]
 202 007c D940     		lsrs	r1, r1, r3
 203 007e 1160     		str	r1, [r2]
 263:Src/system_stm32l0xx.c **** }
 204              		.loc 1 263 0
 205              		@ sp needed
 206 0080 10BD     		pop	{r4, pc}
 207              	.LVL20:
 208              	.L6:
 218:Src/system_stm32l0xx.c ****       {
 209              		.loc 1 218 0
 210 0082 144B     		ldr	r3, .L15
 211              	.LVL21:
 212 0084 1B68     		ldr	r3, [r3]
 213 0086 DB06     		lsls	r3, r3, #27
 214 0088 03D5     		bpl	.L10
 220:Src/system_stm32l0xx.c ****       }
 215              		.loc 1 220 0
 216 008a 144B     		ldr	r3, .L15+8
 217 008c 154A     		ldr	r2, .L15+16
 218              	.LVL22:
 219 008e 1A60     		str	r2, [r3]
 220 0090 EBE7     		b	.L9
 221              	.LVL23:
 222              	.L10:
 224:Src/system_stm32l0xx.c ****       }
 223              		.loc 1 224 0
 224 0092 124B     		ldr	r3, .L15+8
 225 0094 144A     		ldr	r2, .L15+20
 226              	.LVL24:
 227 0096 1A60     		str	r2, [r3]
 228 0098 E7E7     		b	.L9
 229              	.LVL25:
 230              	.L7:
 228:Src/system_stm32l0xx.c ****       break;
 231              		.loc 1 228 0
 232 009a 104B     		ldr	r3, .L15+8
 233              	.LVL26:
 234 009c 134A     		ldr	r2, .L15+24
 235              	.LVL27:
 236 009e 1A60     		str	r2, [r3]
 229:Src/system_stm32l0xx.c ****     default:  /* PLL used as system clock */
 237              		.loc 1 229 0
 238 00a0 E3E7     		b	.L9
 239              	.LVL28:
 240              	.L12:
 248:Src/system_stm32l0xx.c ****         }
 241              		.loc 1 248 0
 242 00a2 6201     		lsls	r2, r4, #5
 243 00a4 121B     		subs	r2, r2, r4
 244 00a6 9301     		lsls	r3, r2, #6
 245 00a8 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 10


 246 00aa DB00     		lsls	r3, r3, #3
 247 00ac 1B19     		adds	r3, r3, r4
 248 00ae 9802     		lsls	r0, r3, #10
 249 00b0 FFF7FEFF 		bl	__aeabi_uidiv
 250              	.LVL29:
 251 00b4 094B     		ldr	r3, .L15+8
 252 00b6 1860     		str	r0, [r3]
 253 00b8 D7E7     		b	.L9
 254              	.LVL30:
 255              	.L11:
 254:Src/system_stm32l0xx.c ****       }
 256              		.loc 1 254 0
 257 00ba 6201     		lsls	r2, r4, #5
 258 00bc 121B     		subs	r2, r2, r4
 259 00be 9301     		lsls	r3, r2, #6
 260 00c0 9B1A     		subs	r3, r3, r2
 261 00c2 DB00     		lsls	r3, r3, #3
 262 00c4 1B19     		adds	r3, r3, r4
 263 00c6 5802     		lsls	r0, r3, #9
 264 00c8 FFF7FEFF 		bl	__aeabi_uidiv
 265              	.LVL31:
 266 00cc 034B     		ldr	r3, .L15+8
 267 00ce 1860     		str	r0, [r3]
 268 00d0 CBE7     		b	.L9
 269              	.L16:
 270 00d2 C046     		.align	2
 271              	.L15:
 272 00d4 00100240 		.word	1073876992
 273 00d8 00000000 		.word	.LANCHOR1
 274 00dc 00000000 		.word	.LANCHOR0
 275 00e0 00000000 		.word	.LANCHOR2
 276 00e4 00093D00 		.word	4000000
 277 00e8 0024F400 		.word	16000000
 278 00ec 00127A00 		.word	8000000
 279              		.cfi_endproc
 280              	.LFE35:
 282              		.global	PLLMulTable
 283              		.global	APBPrescTable
 284              		.global	AHBPrescTable
 285              		.global	SystemCoreClock
 286              		.section	.data.SystemCoreClock,"aw",%progbits
 287              		.align	2
 288              		.set	.LANCHOR0,. + 0
 291              	SystemCoreClock:
 292 0000 00002000 		.word	2097152
 293              		.section	.rodata.AHBPrescTable,"a",%progbits
 294              		.align	2
 295              		.set	.LANCHOR2,. + 0
 298              	AHBPrescTable:
 299 0000 00       		.byte	0
 300 0001 00       		.byte	0
 301 0002 00       		.byte	0
 302 0003 00       		.byte	0
 303 0004 00       		.byte	0
 304 0005 00       		.byte	0
 305 0006 00       		.byte	0
 306 0007 00       		.byte	0
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 11


 307 0008 01       		.byte	1
 308 0009 02       		.byte	2
 309 000a 03       		.byte	3
 310 000b 04       		.byte	4
 311 000c 06       		.byte	6
 312 000d 07       		.byte	7
 313 000e 08       		.byte	8
 314 000f 09       		.byte	9
 315              		.section	.rodata.APBPrescTable,"a",%progbits
 316              		.align	2
 319              	APBPrescTable:
 320 0000 00       		.byte	0
 321 0001 00       		.byte	0
 322 0002 00       		.byte	0
 323 0003 00       		.byte	0
 324 0004 01       		.byte	1
 325 0005 02       		.byte	2
 326 0006 03       		.byte	3
 327 0007 04       		.byte	4
 328              		.section	.rodata.PLLMulTable,"a",%progbits
 329              		.align	2
 330              		.set	.LANCHOR1,. + 0
 333              	PLLMulTable:
 334 0000 03       		.byte	3
 335 0001 04       		.byte	4
 336 0002 06       		.byte	6
 337 0003 08       		.byte	8
 338 0004 0C       		.byte	12
 339 0005 10       		.byte	16
 340 0006 18       		.byte	24
 341 0007 20       		.byte	32
 342 0008 30       		.byte	48
 343              		.text
 344              	.Letext0:
 345              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 346              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 347              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 348              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
 349              		.file 6 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l011xx.h"
 350              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
ARM GAS  C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l0xx.c
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:16     .text.SystemInit:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:23     .text.SystemInit:00000000 SystemInit
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:77     .text.SystemInit:00000044 $d
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:88     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:95     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:272    .text.SystemCoreClockUpdate:000000d4 $d
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:333    .rodata.PLLMulTable:00000000 PLLMulTable
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:319    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:298    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:291    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:287    .data.SystemCoreClock:00000000 $d
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:294    .rodata.AHBPrescTable:00000000 $d
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:316    .rodata.APBPrescTable:00000000 $d
C:\Users\Nicolas\AppData\Local\Temp\ccYhkprA.s:329    .rodata.PLLMulTable:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
